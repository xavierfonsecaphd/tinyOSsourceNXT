   1              		.file	"app.c"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   7              	SchedulerBasicP__pushTask:
   8              	.LFB21:
   9              		.file 1 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** // $Id: SchedulerBasicP.nc,v 1.11 2010-06-29 22:07:56 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** /*
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * Copyright (c) 2000-2003 The Regents of the University  of California.  
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * All rights reserved.
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * Redistribution and use in source and binary forms, with or without
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * modification, are permitted provided that the following conditions
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * are met:
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * - Redistributions of source code must retain the above copyright
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   notice, this list of conditions and the following disclaimer.
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * - Redistributions in binary form must reproduce the above copyright
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   notice, this list of conditions and the following disclaimer in the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   documentation and/or other materials provided with the
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   distribution.
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * - Neither the name of the University of California nor the names of
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   its contributors may be used to endorse or promote products derived
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   from this software without specific prior written permission.
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * Copyright (c) 2002-2003 Intel Corporation
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * All rights reserved.
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * This file is distributed under the terms in the attached INTEL-LICENSE     
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * file. If you do not find these files, copies can be found by writing to
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300, Berkeley, CA, 
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * 94704.  Attention:  Intel License Inquiry.
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  */
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** /**
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * SchedulerBasicP implements the default TinyOS scheduler sequence, as
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * documented in TEP 106.
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * @author Philip Levis
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * @author Cory Sharp
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * @date   January 19 2005
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  */
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** #include "hardware.h"
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** module SchedulerBasicP @safe() {
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   provides interface Scheduler;
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   provides interface TaskBasic[uint8_t id];
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   uses interface McuSleep;
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** }
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** implementation
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** {
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   enum
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     NUM_TASKS = uniqueCount("TinySchedulerC.TaskBasic"),
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     NO_TASK = 255,
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   };
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   uint8_t m_head;
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   uint8_t m_tail;
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   uint8_t m_next[NUM_TASKS];
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // Helper functions (internal functions) intentionally do not have atomic
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // sections.  It is left as the duty of the exported interface functions to
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // manage atomicity to minimize chances for binary code bloat.
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // move the head forward
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // if the head is at the end, mark the tail at the end, too
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // mark the task as not in the queue
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   inline uint8_t popTask()
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     if( m_head != NO_TASK )
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       uint8_t id = m_head;
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_head = m_next[m_head];
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       if( m_head == NO_TASK )
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_tail = NO_TASK;
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       }
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_next[id] = NO_TASK;
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       return id;
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     else
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       return NO_TASK;
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   bool isWaiting( uint8_t id )
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     return (m_next[id] != NO_TASK) || (m_tail == id);
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 101:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
 102:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   bool pushTask( uint8_t id )
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
  10              		.loc 1 103 0
  11              		.cfi_startproc
  12              		@ args = 0, pretend = 0, frame = 0
  13              		@ frame_needed = 0, uses_anonymous_args = 0
  14              		@ link register save eliminated.
  15              	.LVL0:
  16              	.LBB329:
  17              	.LBB330:
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     return (m_next[id] != NO_TASK) || (m_tail == id);
  18              		.loc 1 99 0
  19 0000 60309FE5 		ldr	r3, .L8
  20 0004 0030D3E7 		ldrb	r3, [r3, r0]	@ zero_extendqisi2
  21 0008 FF0053E3 		cmp	r3, #255
  22 000c 0130A013 		movne	r3, #1
  23 0010 0500001A 		bne	.L2
  24 0014 50309FE5 		ldr	r3, .L8+4
  25 0018 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  26 001c 002053E0 		subs	r2, r3, r0
  27 0020 003072E2 		rsbs	r3, r2, #0
  28 0024 0230B3E0 		adcs	r3, r3, r2
  29 0028 FFFFFFEA 		b	.L2
  30              	.L2:
  31              	.LBE330:
  32              	.LBE329:
 104:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     if( !isWaiting(id) )
  33              		.loc 1 104 0
  34 002c 000053E3 		cmp	r3, #0
  35 0030 0A00001A 		bne	.L6
 105:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 106:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       if( m_head == NO_TASK )
  36              		.loc 1 106 0
  37 0034 34209FE5 		ldr	r2, .L8+8
  38 0038 0030D2E5 		ldrb	r3, [r2, #0]	@ zero_extendqisi2
  39 003c FF0053E3 		cmp	r3, #255
  40 0040 24309FE5 		ldr	r3, .L8+4
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_head = id;
 109:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_tail = id;
 110:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       }
 111:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       else
 112:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_next[m_tail] = id;
  41              		.loc 1 113 0
  42 0044 1C109F15 		ldrne	r1, .L8
  43 0048 0020D315 		ldrneb	r2, [r3, #0]	@ zero_extendqisi2
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_head = id;
  44              		.loc 1 108 0
  45 004c 0000C205 		streqb	r0, [r2, #0]
  46              		.loc 1 113 0
  47 0050 0200C117 		strneb	r0, [r1, r2]
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_tail = id;
  48              		.loc 1 114 0
  49 0054 0000C3E5 		strb	r0, [r3, #0]
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       }
 116:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       return TRUE;
  50              		.loc 1 116 0
  51 0058 0100A0E3 		mov	r0, #1
  52              	.LVL1:
  53 005c 1EFF2FE1 		bx	lr
  54              	.LVL2:
  55              	.L6:
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
 118:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     else
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       return FALSE;
  56              		.loc 1 120 0
  57 0060 0000A0E3 		mov	r0, #0
  58              	.LVL3:
 121:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
  59              		.loc 1 122 0
  60 0064 1EFF2FE1 		bx	lr
  61              	.L9:
  62              		.align	2
  63              	.L8:
  64 0068 00000000 		.word	SchedulerBasicP__m_next
  65 006c 00000000 		.word	SchedulerBasicP__m_tail
  66 0070 00000000 		.word	SchedulerBasicP__m_head
  67              		.cfi_endproc
  68              	.LFE21:
  70              		.align	2
  72              	SchedulerBasicP__popTask:
  73              	.LFB119:
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
  74              		.loc 1 79 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     if( m_head != NO_TASK )
  79              		.loc 1 80 0
  80 0074 30109FE5 		ldr	r1, .L16
  81 0078 0000D1E5 		ldrb	r0, [r1, #0]	@ zero_extendqisi2
  82 007c FF0050E3 		cmp	r0, #255
  83 0080 1EFF2F01 		bxeq	lr
  84              	.LVL4:
  85              	.LBB331:
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_head = m_next[m_head];
  86              		.loc 1 83 0
  87 0084 24309FE5 		ldr	r3, .L16+4
  88 0088 0020D3E7 		ldrb	r2, [r3, r0]	@ zero_extendqisi2
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       if( m_head == NO_TASK )
  89              		.loc 1 84 0
  90 008c FF0052E3 		cmp	r2, #255
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_head = m_next[m_head];
  91              		.loc 1 83 0
  92 0090 0020C1E5 		strb	r2, [r1, #0]
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_tail = NO_TASK;
  93              		.loc 1 86 0
  94 0094 18209F05 		ldreq	r2, .L16+8
  95 0098 0010E003 		mvneq	r1, #0
  96 009c 0010C205 		streqb	r1, [r2, #0]
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_next[id] = NO_TASK;
  97              		.loc 1 88 0
  98 00a0 0020E0E3 		mvn	r2, #0
  99 00a4 0020C3E7 		strb	r2, [r3, r0]
 100              	.LBE331:
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 101              		.loc 1 95 0
 102 00a8 1EFF2FE1 		bx	lr
 103              	.L17:
 104              		.align	2
 105              	.L16:
 106 00ac 00000000 		.word	SchedulerBasicP__m_head
 107 00b0 00000000 		.word	SchedulerBasicP__m_next
 108 00b4 00000000 		.word	SchedulerBasicP__m_tail
 109              		.cfi_endproc
 110              	.LFE119:
 112              		.align	2
 114              	HalAT91_GeneralIOM__GeneralIO__toggle:
 115              	.LFB136:
 116              		.file 2 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralI
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****  * @author Rasmus Ulslev Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****  
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc **** module HalAT91_GeneralIOM {
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****   provides {
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****     interface GeneralIO[uint8_t pin];
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****     interface HalAT91GpioInterrupt[uint8_t pin];
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****     interface GpioInterrupt[uint8_t pin];
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****   }
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****   uses {
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****     interface HplAT91_GPIOPin[uint8_t pin];
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****   }
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc **** }
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc **** 
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc **** implementation {
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****   async command void GeneralIO.set[uint8_t pin]() {
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****     atomic call HplAT91_GPIOPin.setPIOSODR[pin]();
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****     return;
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****   }
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc **** 
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****   async command void GeneralIO.clr[uint8_t pin]() {
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****     atomic call HplAT91_GPIOPin.setPIOCODR[pin]();    
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****     return;
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****   }
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc **** 
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****   async command void GeneralIO.toggle[uint8_t pin]() {
 117              		.loc 2 28 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL5:
 123              	.LBB346:
 124              	.LBB347:
 125              	.LBB348:
 126              	.LBB349:
 127              		.file 3 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****  * @author Rasmus Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** #include "at91_registers.h"
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** 
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** module HplAT91_GPIOM {
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   provides {
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     interface HplAT91_GPIOPin[uint8_t pin];
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   }
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** }
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** 
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** implementation {
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   //PIO Controller PIO Enable Register
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   async command void HplAT91_GPIOPin.setPIOPER[uint8_t pin]() 
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   {
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_PER = GPIO_pin_bit(pin);
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     return;
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   }
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** 
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   //PIO Controller Output Enable Register
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   async command void HplAT91_GPIOPin.setPIOOER[uint8_t pin]() 
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   {
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_OER = GPIO_pin_bit(pin);
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     return;
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   }
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** 
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   //PIO Controller Clear Output Data Register
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   async command void HplAT91_GPIOPin.setPIOCODR[uint8_t pin]() 
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   {
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_CODR = GPIO_pin_bit(pin);
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     return;
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   }
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc **** 
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   //PIO Controller Set Output Data Register
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   async command void HplAT91_GPIOPin.setPIOSODR[uint8_t pin]() 
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   {
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_SODR = GPIO_pin_bit(pin);
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     return;
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   }
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   //PIO Controller Pin Data Status Register
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   async command bool HplAT91_GPIOPin.getPIOPDSR[uint8_t pin]() 
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****   {
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     return ((*AT91C_PIOA_PDSR & GPIO_pin_bit(pin)) != 0);
 128              		.loc 3 45 0
 129 00b8 0110A0E3 		mov	r1, #1
 130 00bc 1100A0E1 		mov	r0, r1, asl r0
 131              	.LVL6:
 132 00c0 0030E0E3 		mvn	r3, #0
 133 00c4 C32B13E5 		ldr	r2, [r3, #-3011]
 134              	.LBE349:
 135              	.LBE348:
 136              	.LBE347:
 137              	.LBE346:
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HalAT91_GeneralIOM.nc ****     if(call HplAT91_GPIOPin.getPIOPDSR[pin]())
 138              		.loc 2 29 0
 139 00c8 020010E1 		tst	r0, r2
 140              	.LVL7:
 141              	.LBB350:
 142              	.LBB351:
 143              	.LBB352:
 144              	.LBB353:
 145              	.LBB354:
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_CODR = GPIO_pin_bit(pin);
 146              		.loc 3 31 0
 147 00cc CB0B0315 		strne	r0, [r3, #-3019]
 148              	.LVL8:
 149              	.LBE354:
 150              	.LBE353:
 151              	.LBE352:
 152              	.LBE351:
 153              	.LBE350:
 154              	.LBB355:
 155              	.LBB356:
 156              	.LBB357:
 157              	.LBB358:
 158              	.LBB359:
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_SODR = GPIO_pin_bit(pin);
 159              		.loc 3 38 0
 160 00d0 CF0B0305 		streq	r0, [r3, #-3023]
 161              	.LVL9:
 162 00d4 1EFF2FE1 		bx	lr
 163              	.LBE359:
 164              	.LBE358:
 165              	.LBE357:
 166              	.LBE356:
 167              	.LBE355:
 168              		.cfi_endproc
 169              	.LFE136:
 171              		.align	2
 173              	HplAT91OSTimerM__AT91OST__open.constprop.10:
 174              	.LFB150:
 175              		.file 4 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****  * @author Rasmus Ulslev Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** #include "hardware.h"
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** module HplAT91OSTimerM {
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   provides {
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     interface Init;
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     // chnl_id is 0-based but can be remapped to a timer channel
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     // with TIMER_PID(chnl_id)
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     interface HplAT91OSTimer as AT91OST[uint8_t chnl_id];
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   uses {
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     interface HplAT91Interrupt as OST0Irq;
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** }
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** implementation {
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   bool gfInitialized = FALSE;
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   void DispatchOSTInterrupt(uint8_t id)
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     signal AT91OST.fired[id]();
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return;
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   command error_t Init.init()
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     bool initflag;
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     atomic {
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       initflag = gfInitialized;
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       gfInitialized = TRUE;
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     }
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     if(!initflag) {
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       // Open timer0
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** //      AT91F_TC_Open(AT91C_BASE_TC0,TC_CLKS_MCK2|AT91C_TC_CPCTRG,AT91C_ID_TC0);
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** //      call OST0Irq.allocate();
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** //      call OST0Irq.enable();
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     //__nesc_enable_interrupt();
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     }
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return SUCCESS;
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   //TODO: (typedef frequency_tag)
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command bool AT91OST.open[uint8_t chnl_id]() 
 176              		.loc 4 54 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181              	.LVL10:
 182              	.LBB362:
 183              	.LBB363:
 184              		.file 5 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****  * @author Rasmus Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #ifndef __NXTMOTE_HARDWARE_H__
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #define __NXTMOTE_HARDWARE_H__
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #include "AT91SAM7S256.h"
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #include "AT91SAM7S256_extra.h"
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #include "lib_AT91SAM7S256.h"
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #include "lib_extra_AT91SAM7S256.h"
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #define   OSC                           48054850L
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** //PIT Timer
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #define   MS_1_TIME         ((OSC/16)/1000)
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned char                 UCHAR;  //uint8_t
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned short                USHORT; //uint16_t
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned char                 UBYTE;  //uint8_t
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   signed char                   SBYTE;  //int8_t
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned short int            UWORD;  //uint16_t
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   signed short int              SWORD;  //int16_t
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned long                 ULONG;  //uint32_t
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   signed long                   SLONG;  //int32_t
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   ULONG*                        PULONG;
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   USHORT*                       PUSHORT;
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   UCHAR*                        PUCHAR;
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   char*                         PSZ;
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** /*
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef signed char int8_t;
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef unsigned char uint8_t;
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef short int16_t;
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef unsigned short uint16_t;
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef int int32_t;
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef unsigned int uint32_t;
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef long long int64_t;
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef unsigned long long uint64_t;
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef int32_t intptr_t;
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef uint32_t uintptr_t;
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** */
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** extern void AT91F_Spurious_handler(void);
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** extern void AT91F_Default_IRQ_handler(void);
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** extern void AT91F_Default_FIQ_handler(void);
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** inline void __nesc_enable_interrupt() {
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   uint32_t statusReg = 0;
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   asm volatile (
 185              		.loc 5 57 0
 186 00d8 0030A0E3 		mov	r3, #0
 187              	@ 57 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h" 1
 188 00dc 00300FE1 		mrs r3,CPSR
 189 00e0 C030C3E3 		bic r3,r3,#0xc0
 190 00e4 03F021E1 		msr CPSR_c, r3
 191              	@ 0 "" 2
 192              	.LVL11:
 193              	.LBE363:
 194              	.LBE362:
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     bool bFlag = FALSE;
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     unsigned int dummy;
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     //if(frequency_tag == TMilli)
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     {
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       //TODO: the rest of the channels
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       switch(TIMER_PID(chnl_id)) {
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****         case AT91C_ID_TC0:
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           // periphclock
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** __nesc_enable_interrupt();          
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_PMC->PMC_PCER = (1<<AT91C_ID_TC0);
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_TC0->TC_CCR = AT91C_TC_CLKDIS ;
 195              		.loc 4 68 0
 196 00e8 5F3AE0E3 		mvn	r3, #389120
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_PMC->PMC_PCER = (1<<AT91C_ID_TC0);
 197              		.loc 4 66 0
 198 00ec 0020E0E3 		mvn	r2, #0
 199 00f0 011AA0E3 		mov	r1, #4096
 200              		.loc 4 68 0
 201 00f4 0200A0E3 		mov	r0, #2
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_PMC->PMC_PCER = (1<<AT91C_ID_TC0);
 202              		.loc 4 66 0
 203 00f8 EF1302E5 		str	r1, [r2, #-1007]
 204              		.loc 4 68 0
 205 00fc FF0F03E5 		str	r0, [r3, #-4095]
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_TC0->TC_IDR = 0xFFFFFFFF ;
 206              		.loc 4 69 0
 207 0100 D72F03E5 		str	r2, [r3, #-4055]
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           //* Clear status bit
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           dummy = AT91C_BASE_TC0->TC_SR;
 208              		.loc 4 72 0
 209 0104 DF0F13E5 		ldr	r0, [r3, #-4063]
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           //* Suppress warning variable "dummy" was set but never used
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           dummy = dummy;
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           //* Set the Mode of the Timer Counter
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_TC0->TC_CMR = TC_CLKS_MCK2|AT91C_TC_CPCTRG ;
 210              		.loc 4 77 0
 211 0108 0109A0E3 		mov	r0, #16384
 212 010c FB0F03E5 		str	r0, [r3, #-4091]
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           //* Enable the clock
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_TC0->TC_CCR = AT91C_TC_CLKEN ;
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_TC0->TC_IER = AT91C_TC_CPCS;
 213              		.loc 4 81 0
 214 0110 10C0A0E3 		mov	ip, #16
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_TC0->TC_CCR = AT91C_TC_CLKEN ;
 215              		.loc 4 80 0
 216 0114 0100A0E3 		mov	r0, #1
 217 0118 FF0F03E5 		str	r0, [r3, #-4095]
 218              		.loc 4 81 0
 219 011c DBCF03E5 		str	ip, [r3, #-4059]
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_AIC->AIC_IDCR = (1 << AT91C_ID_TC0);
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_AIC->AIC_SMR[AT91C_ID_TC0] = (AT91C_AIC_SRCTYPE_INT_LEVEL_SENSITIVE|0x4);
 220              		.loc 4 85 0
 221 0120 04C0A0E3 		mov	ip, #4
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_AIC->AIC_IDCR = (1 << AT91C_ID_TC0);
 222              		.loc 4 84 0
 223 0124 DB1E02E5 		str	r1, [r2, #-3803]
 224              		.loc 4 85 0
 225 0128 CFCF02E5 		str	ip, [r2, #-4047]
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_AIC->AIC_ICCR = (1 << AT91C_ID_TC0);
 226              		.loc 4 87 0
 227 012c D71E02E5 		str	r1, [r2, #-3799]
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_AIC->AIC_IECR = (1 << AT91C_ID_TC0);
 228              		.loc 4 88 0
 229 0130 DF1E02E5 		str	r1, [r2, #-3807]
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** //          AT91C_BASE_TC0->TC_RC = TICKSONEMSCLK2;
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           AT91C_BASE_TC0->TC_CCR = AT91C_TC_SWTRG ;
 230              		.loc 4 92 0
 231 0134 FFCF03E5 		str	ip, [r3, #-4095]
 232              	.LVL12:
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** /*
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           while(1){
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****             uint16_t cv = AT91C_BASE_TC0->TC_CV;
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****             if(cv == (TICKSONEMSCLK2-1)){
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****             }
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           }
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** */          
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 			    bFlag = TRUE;
 101:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           break;
 102:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****         default:
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****           break;
 104:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       }
 105:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     }
 106:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return bFlag;    
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 233              		.loc 4 107 0
 234 0138 1EFF2FE1 		bx	lr
 235              		.cfi_endproc
 236              	.LFE150:
 238              		.align	2
 240              	HalAT91AlarmM__0__Alarm__start:
 241              	.LFB133:
 242              		.file 6 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.n
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** /*
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * Copyright (c) 2005 Arched Rock Corporation 
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * All rights reserved. 
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * Redistribution and use in source and binary forms, with or without
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * modification, are permitted provided that the following conditions are
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * met:
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  *	Redistributions of source code must retain the above copyright
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * notice, this list of conditions and the following disclaimer.
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  *	Redistributions in binary form must reproduce the above copyright
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * notice, this list of conditions and the following disclaimer in the
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * documentation and/or other materials provided with the distribution.
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  *  
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  *   Neither the name of the Arched Rock Corporation nor the names of its
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * contributors may be used to endorse or promote products derived from
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * this software without specific prior written permission.
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  *
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE ARCHED
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * ROCK OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * DAMAGE.
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  */
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** /** 
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * @author Phil Buonadonna
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  *
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  */
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** // @author Phil Buonadonna
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** /**
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * Adapted for nxtmote.
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  * @author Rasmus Pedersen
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****  */
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** #include "Timer.h"
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** generic module HalAT91AlarmM(typedef frequency_tag, uint8_t resolution) 
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** {
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   provides {
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     interface Init;
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     interface Alarm<frequency_tag,uint32_t> as Alarm;
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   }
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   uses {
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     interface Init as OSTInit;
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     interface HplAT91OSTimer as OSTChnl;
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   }
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** }
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** implementation
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** {
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   bool mfRunning;
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   uint32_t mMinDeltaT;
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   // When to really fire
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   uint32_t mTf;
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   // Counts number of compare interrupts (fires)
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   uint32_t mTc;
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   bool flg = FALSE;
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   task void lateAlarm() {
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     atomic {
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       signal Alarm.fired();
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     }
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   }
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   command error_t Init.init() {
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** //    flg = TRUE;
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     call OSTInit.init(); 
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     // Continue on match, Non-periodic, w/ given resolution
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     atomic {
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mTf = 0;      
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mTc = 0;
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       switch (resolution) {
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****         case 1: // 1/32768 second
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      mMinDeltaT = 10;
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      break;
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****         case 2: // 1 ms
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      mMinDeltaT = 1;
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      break;
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****         case 3: // 1 s
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      mMinDeltaT = 1;
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      break;
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****         case 4: // 1 us
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      mMinDeltaT = 300;
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      break;
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****         default:  // External
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      mMinDeltaT = 0;
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      break;
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       }
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       call OSTChnl.open();
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     }
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return SUCCESS;
 101:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   }
 102:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   async command void Alarm.start( uint32_t dt ) {
 243              		.loc 6 103 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              	.LVL13:
 104:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   
 105:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     // TODO: pending alarm
 106:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     if (dt < mMinDeltaT) 
 248              		.loc 6 107 0
 249 013c 64309FE5 		ldr	r3, .L23
 250 0140 002093E5 		ldr	r2, [r3, #0]
 251              	.LVL14:
 252              	.LBB380:
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       dt = mMinDeltaT;
 109:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 110:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     atomic {
 111:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mTf = dt;
 253              		.loc 6 111 0
 254 0144 60309FE5 		ldr	r3, .L23+4
 255              	.LBE380:
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   async command void Alarm.start( uint32_t dt ) {
 256              		.loc 6 103 0
 257 0148 10402DE9 		stmfd	sp!, {r4, lr}
 258              	.LCFI0:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262              	.LBB399:
 263              		.loc 6 111 0
 264 014c 020050E1 		cmp	r0, r2
 265 0150 00008325 		strcs	r0, [r3, #0]
 266 0154 00208335 		strcc	r2, [r3, #0]
 267              	.LVL15:
 268              	.LBB381:
 269              	.LBB382:
 270              	.LBB383:
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
 109:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** /*  
 110:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command void NXTARMOST.setTCRC[uint8_t chnl_id](uint32_t val) 
 111:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 112:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return;
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** */  
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command uint32_t AT91OST.getTCCV[uint8_t chnl_id]()
 116:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     uint32_t val;
 118:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     AT91PS_TC pTC;
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC = (AT91PS_TC)PID_ADR_TABLE[TIMER_PID(chnl_id)];
 121:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     val = pTC->TC_CV; 
 123:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
 124:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return val;
 125:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 126:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   
 127:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command void AT91OST.setTCRC[uint8_t chnl_id](uint32_t val)
 128:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 129:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     AT91PS_TC pTC;
 130:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 131:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC = (AT91PS_TC)PID_ADR_TABLE[TIMER_PID(chnl_id)];
 271              		.loc 4 131 0
 272 0158 50409FE5 		ldr	r4, .L23+8
 273              	.LBE383:
 274              	.LBE382:
 275              	.LBE381:
 112:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mTc = 0;
 276              		.loc 6 113 0
 277 015c 50309FE5 		ldr	r3, .L23+12
 278 0160 0020A0E3 		mov	r2, #0
 279 0164 002083E5 		str	r2, [r3, #0]
 280              	.LVL16:
 281              	.LBB386:
 282              	.LBB385:
 283              	.LBB384:
 284              		.loc 4 131 0
 285 0168 303094E5 		ldr	r3, [r4, #48]
 286              	.LVL17:
 132:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****  
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC->TC_RC = val;   
 287              		.loc 4 133 0
 288 016c 44209FE5 		ldr	r2, .L23+16
 289 0170 1C2083E5 		str	r2, [r3, #28]
 290              	.LVL18:
 291              	.LBE384:
 292              	.LBE385:
 293              	.LBE386:
 294              	.LBB387:
 295              	.LBB388:
 296              	.LBB389:
 297              	.LBB390:
 134:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 135:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return;
 136:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 137:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   
 138:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     async command uint32_t AT91OST.getTCRC[uint8_t chnl_id]()
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     {
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       uint32_t val;
 141:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       AT91PS_TC pTC;
 142:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       
 143:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       pTC = (AT91PS_TC)PID_ADR_TABLE[TIMER_PID(chnl_id)];
 144:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****    
 145:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       val = pTC->TC_RC;
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       
 147:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       return val;
 148:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 149:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   
 150:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   // Can do CLKDIS, CLKEN, and SWTRG
 151:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command void AT91OST.setTCCCR[uint8_t chnl_id](uint32_t val)
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 153:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     //AT91C_BASE_TC0->TC_CCR = AT91C_TC_SWTRG ;
 154:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     AT91PS_TC pTC;
 155:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****         
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC = (AT91PS_TC)PID_ADR_TABLE[TIMER_PID(chnl_id)];
 157:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****        
 158:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC->TC_CCR = val; 
 159:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 160:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return;
 161:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 162:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
 163:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command void AT91OST.setTCIDR[uint8_t chnl_id](uint32_t val)
 164:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 165:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     AT91PS_TC pTC;
 166:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 167:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC = (AT91PS_TC)PID_ADR_TABLE[TIMER_PID(chnl_id)];
 168:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 169:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC->TC_IDR = val; 
 170:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
 171:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return;
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 173:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
 174:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command bool AT91OST.getTCSR[uint8_t chnl_id]() 
 175:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 176:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     bool bFlag;
 177:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     AT91PS_TC pTC;
 178:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 179:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC = (AT91PS_TC)PID_ADR_TABLE[TIMER_PID(chnl_id)];
 298              		.loc 4 179 0
 299 0174 303094E5 		ldr	r3, [r4, #48]
 300              	.LVL19:
 180:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 181:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     if(pTC->TC_SR & AT91C_TC_CPCS)
 301              		.loc 4 181 0
 302 0178 203093E5 		ldr	r3, [r3, #32]
 303              	.LVL20:
 304              	.LBE390:
 305              	.LBE389:
 306              	.LBE388:
 307              	.LBE387:
 308              	.LBB391:
 309              	.LBB392:
 310              		.file 7 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****  * @author Rasmus Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc **** // Remember to use the TIMER_PID function to remap the channel id to the
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc **** // actual AT91 timer channel
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc **** 
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc **** interface HplAT91OSTimer
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc **** {
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****   /**
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****    * Opens a timer channel for a given resolution such as TMilli. It will 
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****    * configure the timer channel to generate interrupts when the counter 
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****    * register matches the TC_RC register.
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****    */
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****    //TODO: Use parameter to describe tab instead of testing with milliseconds.
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimer.nc ****   async command bool open();
 311              		.loc 7 16 0
 312 017c D5FFFFEB 		bl	HplAT91OSTimerM__AT91OST__open.constprop.10
 313              	.LVL21:
 314              	.LBE392:
 315              	.LBE391:
 316              	.LBB393:
 317              	.LBB394:
 318              	.LBB395:
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC = (AT91PS_TC)PID_ADR_TABLE[TIMER_PID(chnl_id)];
 319              		.loc 4 156 0
 320 0180 303094E5 		ldr	r3, [r4, #48]
 321              	.LVL22:
 158:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC->TC_CCR = val; 
 322              		.loc 4 158 0
 323 0184 0420A0E3 		mov	r2, #4
 324 0188 002083E5 		str	r2, [r3, #0]
 325              	.LVL23:
 326              	.LBE395:
 327              	.LBE394:
 328              	.LBE393:
 329              	.LBB396:
 330              	.LBB397:
 331              	.LBB398:
 182:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       bFlag = TRUE;
 183:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     else 
 184:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       bFlag = FALSE;
 185:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
 186:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return bFlag;
 187:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 188:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
 189:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command void AT91OST.setTCIER[uint8_t chnl_id](bool flag)
 190:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 191:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     AT91PS_TC pTC;
 192:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 193:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC = (AT91PS_TC)PID_ADR_TABLE[TIMER_PID(chnl_id)];
 194:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 195:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     if(flag) {
 196:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       pTC->TC_IER = AT91C_TC_CPCS;
 197:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     }
 198:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     else {
 199:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       pTC->TC_IDR = AT91C_TC_CPCS;
 200:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     }
 201:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 202:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     return;
 203:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 204:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc **** 
 205:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command void AT91OST.setIECR[uint8_t chnl_id]()
 206:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 207:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     AT91C_BASE_AIC->AIC_IECR = TIMER_PID(chnl_id);
 332              		.loc 4 207 0
 333 018c 0C20A0E3 		mov	r2, #12
 334 0190 0030E0E3 		mvn	r3, #0
 335              	.LVL24:
 336 0194 DF2E03E5 		str	r2, [r3, #-3807]
 337              	.LBE398:
 338              	.LBE397:
 339              	.LBE396:
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       // 1 ms timer
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       call OSTChnl.setTCRC(TICKSONEMSCLK2);
 116:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       // Clear status register
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       call OSTChnl.getTCSR();
 118:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       // Enable AIC interrupt and Start it with the software trigger
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       // TODO: Too much 
 121:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       call OSTChnl.open();
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 123:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       call OSTChnl.setTCCCR(AT91C_TC_SWTRG);
 124:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       call OSTChnl.setIECR();
 125:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 126:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = TRUE;
 340              		.loc 6 126 0
 341 0198 1C309FE5 		ldr	r3, .L23+20
 342 019c 0120A0E3 		mov	r2, #1
 343 01a0 0020C3E5 		strb	r2, [r3, #0]
 344              	.LVL25:
 345 01a4 1080BDE8 		ldmfd	sp!, {r4, pc}
 346              	.L24:
 347              		.align	2
 348              	.L23:
 349 01a8 00000000 		.word	HalAT91AlarmM__0__mMinDeltaT
 350 01ac 00000000 		.word	HalAT91AlarmM__0__mTf
 351 01b0 00000000 		.word	.LANCHOR0
 352 01b4 00000000 		.word	HalAT91AlarmM__0__mTc
 353 01b8 DC5D0000 		.word	24028
 354 01bc 00000000 		.word	HalAT91AlarmM__0__mfRunning
 355              	.LBE399:
 356              		.cfi_endproc
 357              	.LFE133:
 359              		.align	2
 361              	VirtualizeTimerC__0__Timer__startPeriodic:
 362              	.LFB109:
 363              		.file 8 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** //$Id: VirtualizeTimerC.nc,v 1.13 2010-06-29 22:07:50 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** /* Copyright (c) 2000-2003 The Regents of the University of California.  
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * All rights reserved.
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * Redistribution and use in source and binary forms, with or without
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * modification, are permitted provided that the following conditions
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * are met:
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * - Redistributions of source code must retain the above copyright
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *   notice, this list of conditions and the following disclaimer.
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * - Redistributions in binary form must reproduce the above copyright
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *   notice, this list of conditions and the following disclaimer in the
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *   documentation and/or other materials provided with the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *   distribution.
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * - Neither the name of the copyright holder nor the names of
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *   its contributors may be used to endorse or promote products derived
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *   from this software without specific prior written permission.
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  */
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** /**
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * <p>See TEP102 for more details.
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * @param precision_tag A type indicating the precision of the Timer being 
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *   virtualized.
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * @param max_timers Number of virtual timers to create.
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  *
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  * @author Cory Sharp <cssharp@eecs.berkeley.edu>
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****  */
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** generic module VirtualizeTimerC(typedef precision_tag, int max_timers) @safe()
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** {
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   provides interface Timer<precision_tag> as Timer[uint8_t num];
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   uses interface Timer<precision_tag> as TimerFrom;
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** }
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** implementation
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** {
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   enum
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     {
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****       NUM_TIMERS = max_timers,
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****       END_OF_LIST = 255,
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     };
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   typedef struct
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   {
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     uint32_t t0;
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     uint32_t dt;
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     bool isoneshot : 1;
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     bool isrunning : 1;
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     bool _reserved : 6;
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   } Timer_t;
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   Timer_t m_timers[NUM_TIMERS];
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   bool m_timers_changed;
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   task void updateFromTimer();
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   void fireTimers(uint32_t now)
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   {
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     uint16_t num;
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     for (num=0; num<NUM_TIMERS; num++)
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****       {
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	Timer_t* timer = &m_timers[num];
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	if (timer->isrunning)
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	  {
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    uint32_t elapsed = now - timer->t0;
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    if (elapsed >= timer->dt)
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	      {
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		if (timer->isoneshot)
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		  timer->isrunning = FALSE;
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		else // Update timer for next event
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		  timer->t0 += timer->dt;
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		signal Timer.fired[num]();
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     break;
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	      }
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	  }
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****       }
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     post updateFromTimer();
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   }
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   task void updateFromTimer()
 101:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   {
 102:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     /* This code supports a maximum dt of MAXINT. If min_remaining and
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****        remaining were switched to uint32_t, and the logic changed a
 104:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****        little, dt's up to 2^32-1 should work (but at a slightly higher
 105:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****        runtime cost). */
 106:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     uint32_t now = call TimerFrom.getNow();
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     int32_t min_remaining = (1UL << 31) - 1; /* max int32_t */
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     bool min_remaining_isset = FALSE;
 109:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     uint16_t num;
 110:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
 111:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     call TimerFrom.stop();
 112:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     for (num=0; num<NUM_TIMERS; num++)
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****       {
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	Timer_t* timer = &m_timers[num];
 116:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	if (timer->isrunning)
 118:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	  {
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    uint32_t elapsed = now - timer->t0;
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    int32_t remaining = timer->dt - elapsed;
 121:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    if (remaining < min_remaining)
 123:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	      {
 124:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		min_remaining = remaining;
 125:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		min_remaining_isset = TRUE;
 126:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	      }
 127:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	  }
 128:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****       }
 129:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
 130:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     if (min_remaining_isset)
 131:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****       {
 132:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	if (min_remaining <= 0)
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	  fireTimers(now);
 134:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	else
 135:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	  call TimerFrom.startOneShotAt(now, min_remaining);
 136:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****       }
 137:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   }
 138:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   event void TimerFrom.fired()
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   {
 141:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     fireTimers(call TimerFrom.getNow());
 142:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   }
 143:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
 144:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   void startTimer(uint8_t num, uint32_t t0, uint32_t dt, bool isoneshot)
 145:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   {
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     Timer_t* timer = &m_timers[num];
 147:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->t0 = t0;
 148:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->dt = dt;
 149:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->isoneshot = isoneshot;
 150:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->isrunning = TRUE;
 151:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     post updateFromTimer();
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   }
 153:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 
 154:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   command void Timer.startPeriodic[uint8_t num](uint32_t dt)
 155:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   {
 364              		.loc 8 155 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369              	.LVL26:
 370              	.LBB415:
 371              	.LBB416:
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     Timer_t* timer = &m_timers[num];
 372              		.loc 8 146 0
 373 01c0 0C30A0E3 		mov	r3, #12
 374 01c4 930000E0 		mul	r0, r3, r0
 375              	.LVL27:
 147:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->t0 = t0;
 376              		.loc 8 147 0
 377 01c8 28C09FE5 		ldr	ip, .L26
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     Timer_t* timer = &m_timers[num];
 378              		.loc 8 146 0
 379 01cc 28209FE5 		ldr	r2, .L26+4
 147:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->t0 = t0;
 380              		.loc 8 147 0
 381 01d0 00C09CE5 		ldr	ip, [ip, #0]
 382              	.LVL28:
 383 01d4 02C080E7 		str	ip, [r0, r2]
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     Timer_t* timer = &m_timers[num];
 384              		.loc 8 146 0
 385 01d8 023080E0 		add	r3, r0, r2
 386              	.LVL29:
 149:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->isoneshot = isoneshot;
 387              		.loc 8 149 0
 388 01dc 0820D3E5 		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 150:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->isrunning = TRUE;
 389              		.loc 8 150 0
 390 01e0 FE2002E2 		and	r2, r2, #254
 391 01e4 022082E3 		orr	r2, r2, #2
 392              	.LBB417:
 393              	.LBB418:
 394              	.LBB419:
 395              	.LBB420:
 396              	.LBB421:
 123:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   
 124:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   command void Scheduler.init()
 125:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
 126:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic
 127:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 128:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       memset( (void *)m_next, NO_TASK, sizeof(m_next) );
 129:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_head = NO_TASK;
 130:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_tail = NO_TASK;
 131:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
 132:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   
 134:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   command bool Scheduler.runNextTask()
 135:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
 136:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     uint8_t nextTask;
 137:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic
 138:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       nextTask = popTask();
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       if( nextTask == NO_TASK )
 141:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
 142:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	return FALSE;
 143:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       }
 144:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
 145:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     signal TaskBasic.runTask[nextTask]();
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     return TRUE;
 147:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 148:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
 149:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   command void Scheduler.taskLoop()
 150:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
 151:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     for (;;)
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 153:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       uint8_t nextTask;
 154:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
 155:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       atomic
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
 157:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	while ((nextTask = popTask()) == NO_TASK)
 158:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	{
 159:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	  call McuSleep.sleep();
 160:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	}
 161:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       }
 162:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       signal TaskBasic.runTask[nextTask]();
 163:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
 164:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 165:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
 166:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   /**
 167:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****    * Return SUCCESS if the post succeeded, EBUSY if it was already posted.
 168:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****    */
 169:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   
 170:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   async command error_t TaskBasic.postTask[uint8_t id]()
 171:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic { return pushTask(id) ? SUCCESS : EBUSY; }
 397              		.loc 1 172 0
 398 01e8 0100A0E3 		mov	r0, #1
 399              	.LBE421:
 400              	.LBE420:
 401              	.LBE419:
 402              	.LBE418:
 403              	.LBE417:
 148:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->dt = dt;
 404              		.loc 8 148 0
 405 01ec 041083E5 		str	r1, [r3, #4]
 150:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     timer->isrunning = TRUE;
 406              		.loc 8 150 0
 407 01f0 0820C3E5 		strb	r2, [r3, #8]
 408              	.LVL30:
 409              	.LBE416:
 410              	.LBE415:
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     startTimer(num, call TimerFrom.getNow(), dt, FALSE);
 157:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   }
 411              		.loc 8 157 0
 412              	.LBB428:
 413              	.LBB427:
 414              	.LBB426:
 415              	.LBB425:
 416              	.LBB424:
 417              	.LBB423:
 418              	.LBB422:
 419              		.loc 1 172 0
 420 01f4 81FFFFEA 		b	SchedulerBasicP__pushTask
 421              	.LVL31:
 422              	.L27:
 423              		.align	2
 424              	.L26:
 425 01f8 00000000 		.word	HalAT91AlarmM__0__mTc
 426 01fc 00000000 		.word	VirtualizeTimerC__0__m_timers
 427              	.LBE422:
 428              	.LBE423:
 429              	.LBE424:
 430              	.LBE425:
 431              	.LBE426:
 432              	.LBE427:
 433              	.LBE428:
 434              		.cfi_endproc
 435              	.LFE109:
 437              		.align	2
 438              		.global	irqhandler
 440              	irqhandler:
 441              	.LFB123:
 442              		.file 9 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****  * @author Rasmus Ulslev Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** #include "hardware.h"
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** module HplAT91InterruptM
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** {
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   provides {
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     // The id is an actual peripheral like AT91C_ID_TC
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     interface HplAT91Interrupt as AT91Irq[uint8_t id];
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     interface HplAT91Interrupt as AT91Fiq[uint8_t id];
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   }
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** }
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** implementation 
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** {
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   // We save the registers in the assembler interrupt control code, so this
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   // __attribute__ ((interrupt ("IRQ"))) @C() @atomic_hwevent() 
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   // will work. Instead tell the compiler it is a "plain" C function.
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   void irqhandler() __attribute__ ((C, spontaneous)) {
 443              		.loc 9 22 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              	.LVL32:
 448              	.LBB469:
 449              	.LBB470:
 450              		.file 10 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT9
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** 
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** #ifndef lib_extra_AT91SAM7S256_H
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** #define lib_extra_AT91SAM7S256_H
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** /**
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****  * Adapted for nxtmote.
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****  * @author Rasmus Pedersen
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****  */
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** // Some extra functions in relation to those found in lib_AT91SAM7S256.
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** // Various methods from different files.
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** // @author rup
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** 
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** /* *****************************************************************************
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****                 SOFTWARE API FOR AIC
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****    ***************************************************************************** */
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** 
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ActiveID
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** //* \brief Return id of active interupt
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** __inline unsigned int AT91F_AIC_ActiveID (
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****   AT91PS_AIC pAic)     // \arg pointer to the AIC registers
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** {
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****   return pAic->AIC_ISR;
 451              		.loc 10 23 0
 452 0200 0030E0E3 		mvn	r3, #0
 453 0204 F72E13E5 		ldr	r2, [r3, #-3831]
 454              	.LVL33:
 455              	.LBE470:
 456              	.LBE469:
 457              	.LBB471:
 458              	.LBB472:
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   }
 459              		.loc 8 152 0
 460 0208 FF2002E2 		and	r2, r2, #255
 461              	.LVL34:
 462              		.file 11 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  * @author Rasmus Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** /**
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  * at91 interrupt mapping
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  */
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** 
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** interface HplAT91Interrupt
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** {
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   /** 
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    * Allocates interrupts
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    */
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   async command error_t allocate();
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** 
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   /**
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    * Enables a periperhal interrupt.
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    */
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   async command void enable();
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** 
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   /**
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    * Disables a peripheral interrupt.
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    */
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   async command void disable();
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** 
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   /**
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    * The peripheral interrupt event.
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    */
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   async event void fired();
 463              		.loc 11 29 0
 464 020c 010052E3 		cmp	r2, #1
 465              	.LBE472:
 466              	.LBE471:
 467              		.loc 9 22 0
 468 0210 04E02DE5 		str	lr, [sp, #-4]!
 469              	.LCFI1:
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 14, -4
 472              	.LBB531:
 473              	.LBB529:
 474              		.loc 11 29 0
 475 0214 0200000A 		beq	.L30
 476 0218 0C0052E3 		cmp	r2, #12
 477 021c 04F09D14 		ldrne	pc, [sp], #4
 478 0220 080000EA 		b	.L31
 479              	.L30:
 480              	.LBB473:
 481              	.LBB474:
 482              		.file 12 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****  * Periodic Interval Timer
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****  * @author Rasmus Ulslev Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** #include "hardware.h"
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** module HplAT91PitM {
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   provides {
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     interface Init;
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     interface HplAT91Pit;
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   uses {
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     interface HplAT91Interrupt as SysIrq;
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** }
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** implementation {
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   uint32_t taskMiss;
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   task void fireFromTask();
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   command error_t Init.init()
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   {
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     // Testing
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		//AT91F_AIC_ConfigureIt( AT91C_BASE_AIC, AT91C_ID_SYS, AT91C_AIC_PRIOR_HIGHEST, AT91C_AIC_SRCTYPE
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		//AT91F_AIC_ConfigureIt( AT91C_BASE_AIC, AT91C_ID_SYS, AT91C_AIC_PRIOR_HIGHEST, AT91C_AIC_SRCTYPE
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		//AT91F_AIC_EnableIt(AT91C_BASE_AIC, AT91C_ID_SYS);
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     taskMiss = 0;
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     call SysIrq.allocate();
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     call SysIrq.enable();
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return SUCCESS;
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command uint32_t HplAT91Pit.getPITMR(){
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return AT91C_BASE_PITC->PITC_PIMR;
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command void HplAT91Pit.setPITMR(uint32_t val){
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     AT91C_BASE_PITC->PITC_PIMR = val;
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command uint32_t HplAT91Pit.getPITSR(){
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return AT91C_BASE_PITC->PITC_PISR;
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command uint32_t HplAT91Pit.getPITPIVR(){
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return AT91C_BASE_PITC->PITC_PIVR;
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command uint32_t HplAT91Pit.getPITPIIR(){
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return AT91C_BASE_PITC->PITC_PIIR;
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async event void SysIrq.fired() 
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 	{
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		uint32_t pitregtmp;
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     error_t taskRes;
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		if(*AT91C_PITC_PISR & AT91C_PITC_PITS){
 483              		.loc 12 65 0
 484 0224 CB2213E5 		ldr	r2, [r3, #-715]
 485 0228 010012E3 		tst	r2, #1
 486 022c 04F09D04 		ldreq	pc, [sp], #4
 487              	.LBB475:
 488              	.LBB476:
 489              	.LBB477:
 490              	.LBB478:
 491              	.LBB479:
 492              		.loc 1 172 0
 493 0230 0000A0E3 		mov	r0, #0
 494              	.LBE479:
 495              	.LBE478:
 496              	.LBE477:
 497              	.LBE476:
 498              	.LBE475:
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			pitregtmp = *AT91C_PITC_PIVR; /*acknowledge interrupt*/
 499              		.loc 12 66 0
 500 0234 C73213E5 		ldr	r3, [r3, #-711]
 501              	.LVL35:
 502              	.LBB484:
 503              	.LBB483:
 504              	.LBB482:
 505              	.LBB481:
 506              	.LBB480:
 507              		.loc 1 172 0
 508 0238 70FFFFEB 		bl	SchedulerBasicP__pushTask
 509              	.LVL36:
 173:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 510              		.loc 1 173 0
 511 023c 000050E3 		cmp	r0, #0
 512 0240 04F09D14 		ldrne	pc, [sp], #4
 513 0244 110000EA 		b	.L36
 514              	.LVL37:
 515              	.L31:
 516              	.LBE480:
 517              	.LBE481:
 518              	.LBE482:
 519              	.LBE483:
 520              	.LBE484:
 521              	.LBE474:
 522              	.LBE473:
 523              	.LBB487:
 524              	.LBB488:
 525              	.LBB489:
 526              	.LBB490:
 527              	.LBB491:
 528              	.LBB492:
 529              	.LBB493:
 530              	.LBB494:
 531              	.LBB495:
 532              	.LBB496:
 179:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     pTC = (AT91PS_TC)PID_ADR_TABLE[TIMER_PID(chnl_id)];
 533              		.loc 4 179 0
 534 0248 54109FE5 		ldr	r1, .L37
 535 024c 301091E5 		ldr	r1, [r1, #48]
 536              	.LVL38:
 537              	.LBE496:
 538              	.LBE495:
 539              	.LBE494:
 540              	.LBE493:
 127:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     }
 128:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 129:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return;
 130:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   }
 131:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 132:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   async command void Alarm.startAt( uint32_t t0, uint32_t dt ) {
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     call Alarm.start(t0+dt);
 134:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return;
 135:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   } 
 136:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 137:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   async command void Alarm.stop() {
 138:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     atomic {
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       call OSTChnl.setIDCR();
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
 141:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     }
 142:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return;
 143:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   }
 144:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 145:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   async command bool Alarm.isRunning() {
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     bool flag;
 147:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     atomic flag = mfRunning;
 148:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return flag;
 149:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   }
 150:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 151:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   async command uint32_t Alarm.getNow() {
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return mTc;
 153:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   }
 154:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 155:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   async command uint32_t Alarm.getAlarm() {
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return mTf;
 157:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   }
 158:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc **** 
 159:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   async event void OSTChnl.fired() {
 160:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     uint32_t dummy;
 161:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     dummy = call OSTChnl.getTCSR();
 162:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     
 163:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     // Check the stop condition
 164:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     if(mTc < mTf){ // continue by restarting the timer
 541              		.loc 6 164 0
 542 0250 50C09FE5 		ldr	ip, .L37+4
 543              	.LBB500:
 544              	.LBB499:
 545              	.LBB498:
 546              	.LBB497:
 181:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     if(pTC->TC_SR & AT91C_TC_CPCS)
 547              		.loc 4 181 0
 548 0254 201091E5 		ldr	r1, [r1, #32]
 549              	.LVL39:
 550              	.LBE497:
 551              	.LBE498:
 552              	.LBE499:
 553              	.LBE500:
 554              		.loc 6 164 0
 555 0258 4C109FE5 		ldr	r1, .L37+8
 556 025c 00C09CE5 		ldr	ip, [ip, #0]
 557 0260 000091E5 		ldr	r0, [r1, #0]
 558 0264 0C0050E1 		cmp	r0, ip
 165:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mTc++;
 559              		.loc 6 165 0
 560 0268 01008032 		addcc	r0, r0, #1
 561 026c 00008135 		strcc	r0, [r1, #0]
 164:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     if(mTc < mTf){ // continue by restarting the timer
 562              		.loc 6 164 0
 563 0270 04F09D34 		ldrcc	pc, [sp], #4
 564              	.L35:
 565              	.LVL40:
 566              	.LBB501:
 567              	.LBB502:
 568              	.LBB503:
 569              	.LBB504:
 570              	.LBB505:
 208:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 209:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   
 210:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command void AT91OST.setICCR[uint8_t chnl_id]()
 211:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 212:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     AT91C_BASE_AIC->AIC_ICCR = TIMER_PID(chnl_id);
 213:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   }
 214:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     
 215:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   async command void AT91OST.setIDCR[uint8_t chnl_id]()
 216:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****   {
 217:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****     AT91C_BASE_AIC->AIC_IDCR = TIMER_PID(chnl_id);
 571              		.loc 4 217 0
 572 0274 DB2E03E5 		str	r2, [r3, #-3803]
 573              	.LBE505:
 574              	.LBE504:
 575              	.LBE503:
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
 576              		.loc 6 140 0
 577 0278 30309FE5 		ldr	r3, .L37+12
 578 027c 0020A0E3 		mov	r2, #0
 579              	.LBE502:
 580              	.LBE501:
 581              	.LBB507:
 582              	.LBB508:
 583              	.LBB509:
 584              	.LBB510:
 585              	.LBB511:
 586              	.LBB512:
 587              	.LBB513:
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic { return pushTask(id) ? SUCCESS : EBUSY; }
 588              		.loc 1 172 0
 589 0280 0200A0E3 		mov	r0, #2
 590              	.LBE513:
 591              	.LBE512:
 592              	.LBE511:
 593              	.LBE510:
 594              	.LBE509:
 595              	.LBE508:
 596              	.LBE507:
 597              	.LBB520:
 598              	.LBB506:
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
 599              		.loc 6 140 0
 600 0284 0020C3E5 		strb	r2, [r3, #0]
 601              	.LVL41:
 602              	.LBE506:
 603              	.LBE520:
 604              	.LBE492:
 605              	.LBE491:
 606              	.LBE490:
 607              	.LBE489:
 608              	.LBE488:
 609              	.LBE487:
 610              	.LBE529:
 611              	.LBE531:
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     uint32_t irqID;
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     irqID = AT91F_AIC_ActiveID(AT91C_BASE_AIC); // Current interrupt source number
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     signal AT91Irq.fired[irqID]();   
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     return;
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   }
 612              		.loc 9 30 0
 613 0288 04E09DE4 		ldr	lr, [sp], #4
 614              	.LBB532:
 615              	.LBB530:
 616              	.LBB527:
 617              	.LBB526:
 618              	.LBB525:
 619              	.LBB524:
 620              	.LBB523:
 621              	.LBB522:
 622              	.LBB521:
 623              	.LBB519:
 624              	.LBB518:
 625              	.LBB517:
 626              	.LBB516:
 627              	.LBB515:
 628              	.LBB514:
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic { return pushTask(id) ? SUCCESS : EBUSY; }
 629              		.loc 1 172 0
 630 028c 5BFFFFEA 		b	SchedulerBasicP__pushTask
 631              	.LVL42:
 632              	.L36:
 633              	.LBE514:
 634              	.LBE515:
 635              	.LBE516:
 636              	.LBE517:
 637              	.LBE518:
 638              	.LBE519:
 639              	.LBE521:
 640              	.LBE522:
 641              	.LBE523:
 642              	.LBE524:
 643              	.LBE525:
 644              	.LBE526:
 645              	.LBE527:
 646              	.LBB528:
 647              	.LBB486:
 648              	.LBB485:
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			// Prepare the sync PIT task
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			taskRes = post fireFromTask();
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			if(taskRes != SUCCESS){
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			  atomic {taskMiss++;}  
 649              		.loc 12 71 0
 650 0290 1C309FE5 		ldr	r3, .L37+16
 651 0294 002093E5 		ldr	r2, [r3, #0]
 652 0298 012082E2 		add	r2, r2, #1
 653 029c 002083E5 		str	r2, [r3, #0]
 654              	.LVL43:
 655 02a0 04F09DE4 		ldr	pc, [sp], #4
 656              	.L38:
 657              		.align	2
 658              	.L37:
 659 02a4 00000000 		.word	.LANCHOR0
 660 02a8 00000000 		.word	HalAT91AlarmM__0__mTf
 661 02ac 00000000 		.word	HalAT91AlarmM__0__mTc
 662 02b0 00000000 		.word	HalAT91AlarmM__0__mfRunning
 663 02b4 00000000 		.word	HplAT91PitM__taskMiss
 664              	.LBE485:
 665              	.LBE486:
 666              	.LBE528:
 667              	.LBE530:
 668              	.LBE532:
 669              		.cfi_endproc
 670              	.LFE123:
 672              		.align	2
 674              	VirtualizeTimerC__0__fireTimers:
 675              	.LFB135:
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   {
 676              		.loc 8 74 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              	.LVL44:
 681              	.LBB561:
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	Timer_t* timer = &m_timers[num];
 682              		.loc 8 79 0
 683 02b8 90C09FE5 		ldr	ip, .L53
 684              	.LBE561:
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   {
 685              		.loc 8 74 0
 686 02bc F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 687              	.LCFI2:
 688              		.cfi_def_cfa_offset 24
 689              		.cfi_offset 4, -24
 690              		.cfi_offset 5, -20
 691              		.cfi_offset 6, -16
 692              		.cfi_offset 7, -12
 693              		.cfi_offset 8, -8
 694              		.cfi_offset 14, -4
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   {
 695              		.loc 8 74 0
 696 02c0 0030A0E3 		mov	r3, #0
 697              	.LBB582:
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	Timer_t* timer = &m_timers[num];
 698              		.loc 8 79 0
 699 02c4 0C60A0E3 		mov	r6, #12
 700              	.LVL45:
 701              	.L47:
 702 02c8 960304E0 		mul	r4, r6, r3
 703 02cc 0C2084E0 		add	r2, r4, ip
 704              	.LVL46:
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	if (timer->isrunning)
 705              		.loc 8 81 0
 706 02d0 0810D2E5 		ldrb	r1, [r2, #8]	@ zero_extendqisi2
 707 02d4 0378A0E1 		mov	r7, r3, asl #16
 708 02d8 020011E3 		tst	r1, #2
 709 02dc 2778A0E1 		mov	r7, r7, lsr #16
 710 02e0 1400000A 		beq	.L40
 711              	.LBB562:
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    uint32_t elapsed = now - timer->t0;
 712              		.loc 8 83 0
 713 02e4 0C4094E7 		ldr	r4, [r4, ip]
 714              	.LVL47:
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    if (elapsed >= timer->dt)
 715              		.loc 8 85 0
 716 02e8 045092E5 		ldr	r5, [r2, #4]
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    uint32_t elapsed = now - timer->t0;
 717              		.loc 8 83 0
 718 02ec 008064E0 		rsb	r8, r4, r0
 719              	.LVL48:
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    if (elapsed >= timer->dt)
 720              		.loc 8 85 0
 721 02f0 050058E1 		cmp	r8, r5
 722 02f4 0F00003A 		bcc	.L40
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		if (timer->isoneshot)
 723              		.loc 8 87 0
 724 02f8 010011E3 		tst	r1, #1
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		  timer->isrunning = FALSE;
 725              		.loc 8 88 0
 726 02fc 0210C113 		bicne	r1, r1, #2
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		  timer->t0 += timer->dt;
 727              		.loc 8 90 0
 728 0300 04408500 		addeq	r4, r5, r4
 729              	.LBB563:
 730              	.LBB564:
 731              		.file 13 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** //$Id: Timer.nc,v 1.5 2010-06-29 22:07:50 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** 
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** /* Copyright (c) 2000-2003 The Regents of the University of California.  
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * All rights reserved.
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * Redistribution and use in source and binary forms, with or without
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * modification, are permitted provided that the following conditions
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * are met:
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * - Redistributions of source code must retain the above copyright
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *   notice, this list of conditions and the following disclaimer.
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * - Redistributions in binary form must reproduce the above copyright
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *   notice, this list of conditions and the following disclaimer in the
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *   documentation and/or other materials provided with the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *   distribution.
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * - Neither the name of the copyright holder nor the names of
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *   its contributors may be used to endorse or promote products derived
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *   from this software without specific prior written permission.
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  */
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** 
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** #include "Timer.h"
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** 
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** /**
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * A Timer is TinyOS's general purpose timing interface. For more precise
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * timing, you may wish to use a (platform-specific) component offering
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * an Alarm interface.
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * <p>A Timer is parameterised by its "precision" (milliseconds,
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * microseconds, etc), identified by a type. This prevents, e.g.,
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * unintentionally mixing components expecting milliseconds with those
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * expecting microseconds as those interfaces have a different type.
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * <p>See TEP102 for more details.
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * @param precision_tag A type indicating the precision of this Alarm.
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  *
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  * @author Cory Sharp <cssharp@eecs.berkeley.edu>
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****  */
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** 
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** interface Timer<precision_tag>
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** {
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   // basic interface 
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   /**
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * Set a periodic timer to repeat every dt time units. Replaces any
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * current timer settings. Equivalent to startPeriodicAt(getNow(),
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * dt). The <code>fired</code> will be signaled every dt units (first
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * event in dt units).
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    *
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * @param dt Time until the timer fires.
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    */
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   command void startPeriodic(uint32_t dt);
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** 
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   /**
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * Set a single-short timer to some time units in the future. Replaces
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * any current timer settings. Equivalent to startOneShotAt(getNow(),
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * dt). The <code>fired</code> will be signaled when the timer expires.
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    *
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * @param dt Time until the timer fires.
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    */
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   command void startOneShot(uint32_t dt);
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** 
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   /**
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * Cancel a timer.
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    */
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   command void stop();
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc **** 
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   /**
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    * Signaled when the timer expires (one-shot) or repeats (periodic).
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****    */
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   event void fired();
 732              		.loc 13 83 0
 733 0304 FF3007E2 		and	r3, r7, #255
 734              	.LBE564:
 735              	.LBE563:
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		  timer->isrunning = FALSE;
 736              		.loc 8 88 0
 737 0308 0810C215 		strneb	r1, [r2, #8]
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		  timer->t0 += timer->dt;
 738              		.loc 8 90 0
 739 030c 00408205 		streq	r4, [r2, #0]
 740              	.LVL49:
 741              	.LBB581:
 742              	.LBB580:
 743              		.loc 13 83 0
 744 0310 010053E3 		cmp	r3, #1
 745              	.LBB565:
 746              	.LBB566:
 747              	.LBB567:
 748              	.LBB568:
 749              	.LBB569:
 750              		.file 14 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc **** // $Id: GeneralIO.nc,v 1.5 2010-06-29 22:07:46 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc **** 
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc **** /* Copyright (c) 2000-2005 The Regents of the University of California.  
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * All rights reserved.
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  *
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * Redistribution and use in source and binary forms, with or without
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * modification, are permitted provided that the following conditions
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * are met:
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  *
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * - Redistributions of source code must retain the above copyright
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  *   notice, this list of conditions and the following disclaimer.
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * - Redistributions in binary form must reproduce the above copyright
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  *   notice, this list of conditions and the following disclaimer in the
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  *   documentation and/or other materials provided with the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  *   distribution.
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * - Neither the name of the copyright holder nor the names of
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  *   its contributors may be used to endorse or promote products derived
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  *   from this software without specific prior written permission.
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  *
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  */
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc **** 
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc **** /**
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  * @author Joe Polastre
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****  */
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc **** 
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc **** interface GeneralIO
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc **** {
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****   async command void set();
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****   async command void clr();
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/GeneralIO.nc ****   async command void toggle();
 751              		.loc 14 42 0
 752 0314 1C00A003 		moveq	r0, #28
 753              	.LVL50:
 754              	.LBE569:
 755              	.LBE568:
 756              	.LBE567:
 757              	.LBE566:
 758              	.LBE565:
 759              		.loc 13 83 0
 760 0318 0400000A 		beq	.L52
 761 031c 020053E3 		cmp	r3, #2
 762              	.LBB570:
 763              	.LBB571:
 764              	.LBB572:
 765              	.LBB573:
 766              	.LBB574:
 767              		.loc 14 42 0
 768 0320 1700A013 		movne	r0, #23
 769              	.LBE574:
 770              	.LBE573:
 771              	.LBE572:
 772              	.LBE571:
 773              	.LBE570:
 774              		.loc 13 83 0
 775 0324 0100001A 		bne	.L52
 776 0328 FFFFFFEA 		b	.L45
 777              	.L45:
 778              	.LBB575:
 779              	.LBB576:
 780              	.LBB577:
 781              	.LBB578:
 782              	.LBB579:
 783              		.loc 14 42 0
 784 032c 1D00A0E3 		mov	r0, #29
 785              	.L52:
 786 0330 60FFFFEB 		bl	HalAT91_GeneralIOM__GeneralIO__toggle
 787              	.LVL51:
 788 0334 020000EA 		b	.L46
 789              	.LVL52:
 790              	.L40:
 791 0338 013083E2 		add	r3, r3, #1
 792              	.LBE579:
 793              	.LBE578:
 794              	.LBE577:
 795              	.LBE576:
 796              	.LBE575:
 797              	.LBE580:
 798              	.LBE581:
 799              	.LBE562:
 800              	.LBE582:
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     for (num=0; num<NUM_TIMERS; num++)
 801              		.loc 8 77 0
 802 033c 030053E3 		cmp	r3, #3
 803 0340 E0FFFF1A 		bne	.L47
 804              	.LVL53:
 805              	.L46:
 806              	.LBB583:
 807              	.LBB584:
 808              	.LBB585:
 809              	.LBB586:
 810              	.LBB587:
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic { return pushTask(id) ? SUCCESS : EBUSY; }
 811              		.loc 1 172 0
 812 0344 0100A0E3 		mov	r0, #1
 813              	.LBE587:
 814              	.LBE586:
 815              	.LBE585:
 816              	.LBE584:
 817              	.LBE583:
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****   }
 818              		.loc 8 98 0
 819 0348 F041BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 820              	.LBB592:
 821              	.LBB591:
 822              	.LBB590:
 823              	.LBB589:
 824              	.LBB588:
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic { return pushTask(id) ? SUCCESS : EBUSY; }
 825              		.loc 1 172 0
 826 034c 2BFFFFEA 		b	SchedulerBasicP__pushTask
 827              	.LVL54:
 828              	.L54:
 829              		.align	2
 830              	.L53:
 831 0350 00000000 		.word	VirtualizeTimerC__0__m_timers
 832              	.LBE588:
 833              	.LBE589:
 834              	.LBE590:
 835              	.LBE591:
 836              	.LBE592:
 837              		.cfi_endproc
 838              	.LFE135:
 840              		.align	2
 842              	SchedulerBasicP__TaskBasic__runTask:
 843              	.LFB116:
 844              		.file 15 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** // $Id: TaskBasic.nc,v 1.6 2010-06-29 22:07:46 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** /*
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * Copyright (c) 2004-5 The Regents of the University  of California.  
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * All rights reserved.
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * Redistribution and use in source and binary forms, with or without
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * modification, are permitted provided that the following conditions
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * are met:
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * - Redistributions of source code must retain the above copyright
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   notice, this list of conditions and the following disclaimer.
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * - Redistributions in binary form must reproduce the above copyright
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   notice, this list of conditions and the following disclaimer in the
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   documentation and/or other materials provided with the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   distribution.
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * - Neither the name of the University of California nor the names of
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   its contributors may be used to endorse or promote products derived
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   from this software without specific prior written permission.
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * Copyright (c) 2004-5 Intel Corporation
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * All rights reserved.
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * This file is distributed under the terms in the attached INTEL-LICENSE     
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * file. If you do not find these files, copies can be found by writing to
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300, Berkeley, CA, 
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * 94704.  Attention:  Intel License Inquiry.
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  */
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** /**
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * The basic TinyOS task interface. Components generally do not wire to
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * this interface: the nesC compiler handles it automatically through the
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * <tt>post</tt> and <tt>task</tt> keywords.
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   *
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * @author Philip Levis
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * @date   January 12, 2005
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * @see    TEP 106: Tasks and Schedulers
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   */ 
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** #include "TinyError.h"
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** interface TaskBasic {
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   /**
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * Post this task to the TinyOS scheduler. At some later time,
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * depending on the scheduling policy, the scheduler will signal the
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * <tt>run()</tt> event. 
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    *
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * @return SUCCESS if task was successfuly
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * posted; the semantics of a non-SUCCESS return value depend on the
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * implementation of this interface (the class of task).
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    */
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   async command error_t postTask();
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   /**
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * Event from the scheduler to run this task. Following the TinyOS
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * concurrency model, the codes invoked from <tt>run()</tt> signals
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * execute atomically with respect to one another, but can be
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * preempted by async commands/events.
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    */
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   event void runTask();
 845              		.loc 15 75 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              	.LVL55:
 850 0354 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 851              	.LCFI3:
 852              		.cfi_def_cfa_offset 20
 853              		.cfi_offset 4, -20
 854              		.cfi_offset 5, -16
 855              		.cfi_offset 6, -12
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858              		.loc 15 75 0
 859 0358 030050E3 		cmp	r0, #3
 860 035c 00F19F97 		ldrls	pc, [pc, r0, asl #2]
 861 0360 430000EA 		b	.L55
 862              	.L61:
 863 0364 74030000 		.word	.L57
 864 0368 84030000 		.word	.L58
 865 036c 20040000 		.word	.L59
 866 0370 5C040000 		.word	.L60
 867              	.L57:
 868              	.LVL56:
 869              	.LBB659:
 870              	.LBB660:
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			}
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			// Fire the async event
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			signal HplAT91Pit.fired();
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		}	  
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 	  
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   task void fireFromTask(){
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     // Fire the sync event
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     atomic {
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       signal HplAT91Pit.firedTask(taskMiss);
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       taskMiss = 0;
 871              		.loc 12 84 0
 872 0374 FC309FE5 		ldr	r3, .L75
 873 0378 0020A0E3 		mov	r2, #0
 874 037c 002083E5 		str	r2, [r3, #0]
 875              	.LVL57:
 876 0380 F080BDE8 		ldmfd	sp!, {r4, r5, r6, r7, pc}
 877              	.LVL58:
 878              	.L58:
 879              	.LBE660:
 880              	.LBE659:
 881              	.LBB661:
 882              	.LBB662:
 883              	.LBB663:
 884              	.LBB664:
 885              	.LBB665:
 886              	.LBB666:
 887              	.LBB667:
 888              	.LBB668:
 889              	.LBB669:
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return mTc;
 890              		.loc 6 152 0
 891 0384 F0309FE5 		ldr	r3, .L75+4
 892              	.LBE669:
 893              	.LBE668:
 894              	.LBE667:
 895              	.LBE666:
 896              	.LBE665:
 897              	.LBE664:
 898              	.LBE663:
 899              	.LBB676:
 900              	.LBB677:
 901              	.LBB678:
 902              	.LBB679:
 903              	.LBB680:
 904              	.LBB681:
 905              	.LBB682:
 906              	.LBB683:
 907              		.loc 4 217 0
 908 0388 0CC0A0E3 		mov	ip, #12
 909              	.LBE683:
 910              	.LBE682:
 911              	.LBE681:
 912              	.LBE680:
 913              	.LBE679:
 914              	.LBE678:
 915              	.LBE677:
 916              	.LBE676:
 917              	.LBB695:
 918              	.LBB675:
 919              	.LBB674:
 920              	.LBB673:
 921              	.LBB672:
 922              	.LBB671:
 923              	.LBB670:
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return mTc;
 924              		.loc 6 152 0
 925 038c 000093E5 		ldr	r0, [r3, #0]
 926              	.LVL59:
 927              	.LBE670:
 928              	.LBE671:
 929              	.LBE672:
 930              	.LBE673:
 931              	.LBE674:
 932              	.LBE675:
 933              	.LBE695:
 934              	.LBB696:
 935              	.LBB693:
 936              	.LBB691:
 937              	.LBB689:
 938              	.LBB687:
 939              	.LBB686:
 940              	.LBB685:
 941              	.LBB684:
 942              		.loc 4 217 0
 943 0390 0030E0E3 		mvn	r3, #0
 944 0394 DBCE03E5 		str	ip, [r3, #-3803]
 945              	.LBE684:
 946              	.LBE685:
 947              	.LBE686:
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
 948              		.loc 6 140 0
 949 0398 E0309FE5 		ldr	r3, .L75+8
 950 039c 0020A0E3 		mov	r2, #0
 951              	.LBE687:
 952              	.LBE689:
 953              	.LBE691:
 954              	.LBE693:
 955              	.LBE696:
 956              	.LBB697:
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	Timer_t* timer = &m_timers[num];
 957              		.loc 8 115 0
 958 03a0 0C60A0E1 		mov	r6, ip
 959 03a4 D8C09FE5 		ldr	ip, .L75+12
 960              	.LBE697:
 961              	.LBB699:
 962              	.LBB694:
 963              	.LBB692:
 964              	.LBB690:
 965              	.LBB688:
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
 966              		.loc 6 140 0
 967 03a8 0020C3E5 		strb	r2, [r3, #0]
 968              	.LVL60:
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     bool min_remaining_isset = FALSE;
 969              		.loc 8 108 0
 970 03ac 0210A0E1 		mov	r1, r2
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     int32_t min_remaining = (1UL << 31) - 1; /* max int32_t */
 971              		.loc 8 107 0
 972 03b0 0231E0E3 		mvn	r3, #-2147483648
 973              	.LVL61:
 974              	.L63:
 975              	.LBE688:
 976              	.LBE690:
 977              	.LBE692:
 978              	.LBE694:
 979              	.LBE699:
 980              	.LBB700:
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	Timer_t* timer = &m_timers[num];
 981              		.loc 8 115 0
 982 03b4 960204E0 		mul	r4, r6, r2
 983 03b8 0C5084E0 		add	r5, r4, ip
 984              	.LVL62:
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	if (timer->isrunning)
 985              		.loc 8 117 0
 986 03bc 0870D5E5 		ldrb	r7, [r5, #8]	@ zero_extendqisi2
 987 03c0 020017E3 		tst	r7, #2
 988 03c4 0600000A 		beq	.L62
 989              	.LVL63:
 990              	.LBB698:
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    uint32_t elapsed = now - timer->t0;
 991              		.loc 8 119 0
 992 03c8 0C4094E7 		ldr	r4, [r4, ip]
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    int32_t remaining = timer->dt - elapsed;
 993              		.loc 8 120 0
 994 03cc 045095E5 		ldr	r5, [r5, #4]
 995              	.LVL64:
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    uint32_t elapsed = now - timer->t0;
 996              		.loc 8 119 0
 997 03d0 004064E0 		rsb	r4, r4, r0
 998              	.LVL65:
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    int32_t remaining = timer->dt - elapsed;
 999              		.loc 8 120 0
 1000 03d4 054064E0 		rsb	r4, r4, r5
 1001              	.LVL66:
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	    if (remaining < min_remaining)
 1002              		.loc 8 122 0
 1003 03d8 030054E1 		cmp	r4, r3
 1004 03dc 0430A0B1 		movlt	r3, r4
 125:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 		min_remaining_isset = TRUE;
 1005              		.loc 8 125 0
 1006 03e0 0110A0B3 		movlt	r1, #1
 1007              	.LVL67:
 1008              	.L62:
 1009 03e4 012082E2 		add	r2, r2, #1
 1010              	.LVL68:
 1011              	.LBE698:
 1012              	.LBE700:
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     for (num=0; num<NUM_TIMERS; num++)
 1013              		.loc 8 113 0
 1014 03e8 030052E3 		cmp	r2, #3
 1015 03ec F0FFFF1A 		bne	.L63
 130:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     if (min_remaining_isset)
 1016              		.loc 8 130 0
 1017 03f0 000051E3 		cmp	r1, #0
 1018 03f4 F080BD08 		ldmeqfd	sp!, {r4, r5, r6, r7, pc}
 132:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc **** 	if (min_remaining <= 0)
 1019              		.loc 8 132 0
 1020 03f8 000053E3 		cmp	r3, #0
 1021 03fc 140000DA 		ble	.L74
 1022              	.L64:
 1023              	.LVL69:
 1024              	.LBB701:
 1025              	.LBB702:
 1026              	.LBB703:
 1027              	.LBB704:
 1028              		.file 16 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** //$Id: AlarmToTimerC.nc,v 1.7 2010-06-29 22:07:50 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** 
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** /* Copyright (c) 2000-2003 The Regents of the University of California.  
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * All rights reserved.
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * Redistribution and use in source and binary forms, with or without
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * modification, are permitted provided that the following conditions
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * are met:
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * - Redistributions of source code must retain the above copyright
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *   notice, this list of conditions and the following disclaimer.
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * - Redistributions in binary form must reproduce the above copyright
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *   notice, this list of conditions and the following disclaimer in the
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *   documentation and/or other materials provided with the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *   distribution.
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * - Neither the name of the copyright holder nor the names of
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *   its contributors may be used to endorse or promote products derived
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *   from this software without specific prior written permission.
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  */
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** 
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** #include "Timer.h"
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** 
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** /**
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * AlarmToTimerC converts a 32-bit Alarm to a Timer.  
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * <p>See TEP102 for more details.
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * @param precision_tag A type indicating the precision of the Alarm and
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * Timer being converted.
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  *
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  * @author Cory Sharp <cssharp@eecs.berkeley.edu>
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****  */
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** 
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** generic module AlarmToTimerC(typedef precision_tag) @safe()
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** {
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   provides interface Timer<precision_tag>;
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   uses interface Alarm<precision_tag,uint32_t>;
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** }
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** implementation
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** {
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   // there might be ways to save bytes here, but I'll do it in the obviously
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   // right way for now
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   uint32_t m_dt;
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   bool m_oneshot;
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** 
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   void start(uint32_t t0, uint32_t dt, bool oneshot)
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   {
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****     m_dt = dt;
 1029              		.loc 16 60 0
 1030 0400 80209FE5 		ldr	r2, .L75+16
 1031              	.LVL70:
 1032 0404 003082E5 		str	r3, [r2, #0]
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****     m_oneshot = oneshot;
 1033              		.loc 16 61 0
 1034 0408 7C209FE5 		ldr	r2, .L75+20
 1035 040c 0110A0E3 		mov	r1, #1
 1036              	.LBB705:
 1037              	.LBB706:
 1038              	.LBB707:
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     call Alarm.start(t0+dt);
 1039              		.loc 6 133 0
 1040 0410 000083E0 		add	r0, r3, r0
 1041              	.LVL71:
 1042              	.LBE707:
 1043              	.LBE706:
 1044              	.LBE705:
 1045              		.loc 16 61 0
 1046 0414 0010C2E5 		strb	r1, [r2, #0]
 1047              	.LVL72:
 1048              	.LBE704:
 1049              	.LBE703:
 1050              	.LBE702:
 1051              	.LBE701:
 1052              	.LBE662:
 1053              	.LBE661:
 1054              		.loc 15 75 0
 1055 0418 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 1056              	.LBB716:
 1057              	.LBB715:
 1058              	.LBB714:
 1059              	.LBB713:
 1060              	.LBB712:
 1061              	.LBB711:
 1062              	.LBB710:
 1063              	.LBB709:
 1064              	.LBB708:
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     call Alarm.start(t0+dt);
 1065              		.loc 6 133 0
 1066 041c 46FFFFEA 		b	HalAT91AlarmM__0__Alarm__start
 1067              	.LVL73:
 1068              	.L59:
 1069              	.LBE708:
 1070              	.LBE709:
 1071              	.LBE710:
 1072              	.LBE711:
 1073              	.LBE712:
 1074              	.LBE713:
 1075              	.LBE714:
 1076              	.LBE715:
 1077              	.LBE716:
 1078              	.LBB717:
 1079              	.LBB718:
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****     call Alarm.startAt(t0, dt);
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   }
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** 
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   command void Timer.startPeriodic(uint32_t dt)
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   { start(call Alarm.getNow(), dt, FALSE); }
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** 
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   command void Timer.startOneShot(uint32_t dt)
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   { start(call Alarm.getNow(), dt, TRUE); }
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** 
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   command void Timer.stop()
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   { call Alarm.stop(); }
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc **** 
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   task void fired()
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****   { 
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****     if(m_oneshot == FALSE)
 1080              		.loc 16 76 0
 1081 0420 64309FE5 		ldr	r3, .L75+20
 1082 0424 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1083 0428 000052E3 		cmp	r2, #0
 1084 042c 0600001A 		bne	.L65
 1085              	.LBB719:
 1086              	.LBB720:
 1087              	.LBB721:
 1088              	.LBB722:
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return mTf;
 1089              		.loc 6 156 0
 1090 0430 58109FE5 		ldr	r1, .L75+24
 1091              	.LBE722:
 1092              	.LBE721:
 1093              	.LBE720:
 1094              	.LBE719:
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****       start(call Alarm.getAlarm(), m_dt, FALSE);
 1095              		.loc 16 77 0
 1096 0434 4C009FE5 		ldr	r0, .L75+16
 1097              	.LVL74:
 1098              	.LBB726:
 1099              	.LBB725:
 1100              	.LBB724:
 1101              	.LBB723:
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     return mTf;
 1102              		.loc 6 156 0
 1103 0438 001091E5 		ldr	r1, [r1, #0]
 1104              	.LBE723:
 1105              	.LBE724:
 1106              	.LBE725:
 1107              	.LBE726:
 1108              		.loc 16 77 0
 1109 043c 000090E5 		ldr	r0, [r0, #0]
 1110              	.LVL75:
 1111              	.LBB727:
 1112              	.LBB728:
 1113              	.LBB729:
 1114              	.LBB730:
 1115              	.LBB731:
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     call Alarm.start(t0+dt);
 1116              		.loc 6 133 0
 1117 0440 010080E0 		add	r0, r0, r1
 1118              	.LVL76:
 1119              	.LBE731:
 1120              	.LBE730:
 1121              	.LBE729:
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/AlarmToTimerC.nc ****     m_oneshot = oneshot;
 1122              		.loc 16 61 0
 1123 0444 0020C3E5 		strb	r2, [r3, #0]
 1124              	.LVL77:
 1125              	.LBB734:
 1126              	.LBB733:
 1127              	.LBB732:
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****     call Alarm.start(t0+dt);
 1128              		.loc 6 133 0
 1129 0448 3BFFFFEB 		bl	HalAT91AlarmM__0__Alarm__start
 1130              	.LVL78:
 1131              	.L65:
 1132              	.LBE732:
 1133              	.LBE733:
 1134              	.LBE734:
 1135              	.LBE728:
 1136              	.LBE727:
 1137              	.LBB735:
 1138              	.LBB736:
 1139              	.LBB737:
 141:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     fireTimers(call TimerFrom.getNow());
 1140              		.loc 8 141 0
 1141 044c 28309FE5 		ldr	r3, .L75+4
 1142 0450 000093E5 		ldr	r0, [r3, #0]
 1143              	.L74:
 1144              	.LBE737:
 1145              	.LBE736:
 1146              	.LBE735:
 1147              	.LBE718:
 1148              	.LBE717:
 1149              		.loc 15 75 0
 1150 0454 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 1151              	.LBB742:
 1152              	.LBB741:
 1153              	.LBB740:
 1154              	.LBB739:
 1155              	.LBB738:
 141:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/VirtualizeTimerC.nc ****     fireTimers(call TimerFrom.getNow());
 1156              		.loc 8 141 0
 1157 0458 96FFFFEA 		b	VirtualizeTimerC__0__fireTimers
 1158              	.LVL79:
 1159              	.L60:
 1160              	.LBE738:
 1161              	.LBE739:
 1162              	.LBE740:
 1163              	.LBE741:
 1164              	.LBE742:
 1165              	.LBB743:
 1166              	.LBB744:
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
 1167              		.loc 6 68 0
 1168 045c 1C309FE5 		ldr	r3, .L75+8
 1169 0460 0020A0E3 		mov	r2, #0
 1170              	.LBB745:
 1171              	.LBB746:
 1172              	.LBB747:
 1173              	.LBB748:
 1174              	.LBB749:
 1175              	.LBB750:
 1176              	.LBB751:
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic { return pushTask(id) ? SUCCESS : EBUSY; }
 1177              		.loc 1 172 0
 1178 0464 0200A0E3 		mov	r0, #2
 1179              	.LVL80:
 1180              	.LBE751:
 1181              	.LBE750:
 1182              	.LBE749:
 1183              	.LBE748:
 1184              	.LBE747:
 1185              	.LBE746:
 1186              	.LBE745:
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
 1187              		.loc 6 68 0
 1188 0468 0020C3E5 		strb	r2, [r3, #0]
 1189              	.LVL81:
 1190              	.LBE744:
 1191              	.LBE743:
 1192              		.loc 15 75 0
 1193 046c F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 1194              	.LBB760:
 1195              	.LBB759:
 1196              	.LBB758:
 1197              	.LBB757:
 1198              	.LBB756:
 1199              	.LBB755:
 1200              	.LBB754:
 1201              	.LBB753:
 1202              	.LBB752:
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic { return pushTask(id) ? SUCCESS : EBUSY; }
 1203              		.loc 1 172 0
 1204 0470 E2FEFFEA 		b	SchedulerBasicP__pushTask
 1205              	.LVL82:
 1206              	.L55:
 1207 0474 F080BDE8 		ldmfd	sp!, {r4, r5, r6, r7, pc}
 1208              	.L76:
 1209              		.align	2
 1210              	.L75:
 1211 0478 00000000 		.word	HplAT91PitM__taskMiss
 1212 047c 00000000 		.word	HalAT91AlarmM__0__mTc
 1213 0480 00000000 		.word	HalAT91AlarmM__0__mfRunning
 1214 0484 00000000 		.word	VirtualizeTimerC__0__m_timers
 1215 0488 00000000 		.word	AlarmToTimerC__0__m_dt
 1216 048c 00000000 		.word	AlarmToTimerC__0__m_oneshot
 1217 0490 00000000 		.word	HalAT91AlarmM__0__mTf
 1218              	.LBE752:
 1219              	.LBE753:
 1220              	.LBE754:
 1221              	.LBE755:
 1222              	.LBE756:
 1223              	.LBE757:
 1224              	.LBE758:
 1225              	.LBE759:
 1226              	.LBE760:
 1227              		.cfi_endproc
 1228              	.LFE116:
 1230              		.align	2
 1231              		.global	__nesc_atomic_start
 1233              	__nesc_atomic_start:
 1234              	.LFB0:
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       "mrs %0,CPSR\n\t"
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       "bic %0,%1,#0xc0\n\t"
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       "msr CPSR_c, %1"
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       : "=r" (statusReg)
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       : "0" (statusReg)
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       );
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   return;
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** }
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** inline void __nesc_disable_interrupt() {
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** /*
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   uint32_t statusReg = 0;
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   asm volatile (
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"mrs %0,CPSR\n\t"
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"orr %0,%1,#0xc0\n\t"
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"msr CPSR_c,%1\n\t"
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		: "=r" (statusReg)
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		: "0" (statusReg)
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		);
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** */
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   return;
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** }
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef uint32_t __nesc_atomic_t;
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** //TODO: enable
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** inline __nesc_atomic_t __nesc_atomic_start(void) @spontaneous() {
 1235              		.loc 5 84 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              		@ link register save eliminated.
 1240              	.LVL83:
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   uint32_t result = 0;
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** /*
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   uint32_t temp = 0;
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   asm volatile (
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"mrs %0,CPSR\n\t"
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"orr %1,%2,%4\n\t"
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"msr CPSR_cf,%3"
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		: "=r" (result) , "=r" (temp)
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		: "0" (result) , "1" (temp) , "i" (ARM_CPSR_INT_MASK)
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		);
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** */
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   return result;
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** }
 1241              		.loc 5 98 0
 1242 0494 0000A0E3 		mov	r0, #0
 1243 0498 1EFF2FE1 		bx	lr
 1244              		.cfi_endproc
 1245              	.LFE0:
 1247              		.align	2
 1248              		.global	__nesc_atomic_end
 1250              	__nesc_atomic_end:
 1251              	.LFB1:
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** inline void __nesc_atomic_end(__nesc_atomic_t oldState) @spontaneous() {
 1252              		.loc 5 100 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              		@ link register save eliminated.
 1257              	.LVL84:
 1258 049c 1EFF2FE1 		bx	lr
 1259              		.cfi_endproc
 1260              	.LFE1:
 1262              		.align	2
 1263              		.global	fiqhandler
 1265              	fiqhandler:
 1266              	.LFB127:
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   void fiqhandler() __attribute__ ((interrupt ("FIQ"))) @C() @atomic_hwevent() {
 1267              		.loc 9 32 0
 1268              		.cfi_startproc
 1269              		@ Fast Interrupt Service Routine.
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              		@ link register save eliminated.
 1273 04a0 04F05EE2 		subs	pc, lr, #4
 1274              		.cfi_endproc
 1275              	.LFE127:
 1277              		.section	.text.startup,"ax",%progbits
 1278              		.align	2
 1279              		.global	main
 1281              	main:
 1282              	.LFB128:
 1283              		.file 17 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** // $Id: RealMainP.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** 
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** /*
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Copyright (c) 2000-2003 The Regents of the University  of California.  
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * All rights reserved.
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Redistribution and use in source and binary forms, with or without
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * modification, are permitted provided that the following conditions
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * are met:
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * - Redistributions of source code must retain the above copyright
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   notice, this list of conditions and the following disclaimer.
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * - Redistributions in binary form must reproduce the above copyright
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   notice, this list of conditions and the following disclaimer in the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   documentation and/or other materials provided with the
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   distribution.
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * - Neither the name of the copyright holders nor the names of
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   its contributors may be used to endorse or promote products derived
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   from this software without specific prior written permission.
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Copyright (c) 2002-2003 Intel Corporation
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * All rights reserved.
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * This file is distributed under the terms in the attached INTEL-LICENSE     
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * file. If you do not find these files, copies can be found by writing to
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300, Berkeley, CA, 
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * 94704.  Attention:  Intel License Inquiry.
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  */
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** /*
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Authors:		Philip Levis
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Date last modified:  $Id: RealMainP.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  */
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** 
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** /**
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * RealMain implements the TinyOS boot sequence, as documented in TEP 107.
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * @author Philip Levis
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * @date   January 17 2005
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  */
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** 
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** module RealMainP @safe() {
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   provides interface Boot;
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   uses interface Scheduler;
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   uses interface Init as PlatformInit;
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   uses interface Init as SoftwareInit;
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** }
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** implementation {
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   int main() @C() @spontaneous() {
 1284              		.loc 17 63 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              	.LVL85:
 1289              	.LBB882:
 1290              	.LBB883:
 1291              	.LBB884:
 1292              	.LBB885:
 128:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       memset( (void *)m_next, NO_TASK, sizeof(m_next) );
 1293              		.loc 1 128 0
 1294 0000 0420A0E3 		mov	r2, #4
 1295              	.LBE885:
 1296              	.LBE884:
 1297              	.LBE883:
 1298              	.LBE882:
 1299              		.loc 17 63 0
 1300 0004 04E02DE5 		str	lr, [sp, #-4]!
 1301              	.LCFI4:
 1302              		.cfi_def_cfa_offset 4
 1303              		.cfi_offset 14, -4
 1304              	.LBB1018:
 1305              	.LBB888:
 1306              	.LBB887:
 1307              	.LBB886:
 128:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       memset( (void *)m_next, NO_TASK, sizeof(m_next) );
 1308              		.loc 1 128 0
 1309 0008 F4019FE5 		ldr	r0, .L119
 1310 000c FF10A0E3 		mov	r1, #255
 1311 0010 FEFFFFEB 		bl	memset
 1312              	.LVL86:
 129:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_head = NO_TASK;
 1313              		.loc 1 129 0
 1314 0014 EC219FE5 		ldr	r2, .L119+4
 1315 0018 0030E0E3 		mvn	r3, #0
 1316 001c 0030C2E5 		strb	r3, [r2, #0]
 130:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_tail = NO_TASK;
 1317              		.loc 1 130 0
 1318 0020 E4219FE5 		ldr	r2, .L119+8
 1319 0024 0030C2E5 		strb	r3, [r2, #0]
 1320              	.LVL87:
 1321              	.LBE886:
 1322              	.LBE887:
 1323              	.LBE888:
 1324              	.LBB889:
 1325              	.LBB890:
 1326              	.LBB891:
 1327              	.LBB892:
 1328              		.file 18 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** /*
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * Copyright (c) 2007 nxtmote project
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * All rights reserved.
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * Redistribution and use in source and binary forms, with or without
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * modification, are permitted provided that the following conditions
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * are met:
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * - Redistributions of source code must retain the above copyright
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   notice, this list of conditions and the following disclaimer.
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * - Redistributions in binary form must reproduce the above copyright
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   notice, this list of conditions and the following disclaimer in the
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   documentation and/or other materials provided with the
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   distribution.
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * - Neither the name of nxtmote project nor the names of
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   its contributors may be used to endorse or promote products derived
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   from this software without specific prior written permission.
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * ARCHED ROCK OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  */
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** /**
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * Adapted for nxtmote.
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * @author Rasmus Pedersen
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  */
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** #include "hardware.h"
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** module PlatformP{
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****   provides interface Init;
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****   uses {
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as InitL0;
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as InitL1;
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as InitL2;
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as InitL3;
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as PInit;
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****   }
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** }
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** implementation{
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****   command error_t Init.init() {
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // AT91F_LowLevelInit() in Cstartup_SAM7.c has been called
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // TODO: Move it so equivalent code is called from this place
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //int            i;
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     uint32_t TmpReset;
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     AT91PS_PMC     pPMC = AT91C_BASE_PMC;
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //* Set Flash Waite sate
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //  Single Cycle Access at Up to 30 MHz, or 40
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //  if MCK = 47923200 I have 72 Cycle for 1,5 usecond ( flied MC_FMR->FMCN
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     AT91C_BASE_MC->MC_FMR = ((AT91C_MC_FMCN)&(72 <<16)) | AT91C_MC_FWS_1FWS ;
 1329              		.loc 18 62 0
 1330 0028 E0219FE5 		ldr	r2, .L119+12
 1331 002c 9F2003E5 		str	r2, [r3, #-159]
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //* Watchdog Disable
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     AT91C_BASE_WDTC->WDTC_WDMR= AT91C_WDTC_WDDIS;
 1332              		.loc 18 65 0
 1333 0030 0229A0E3 		mov	r2, #32768
 1334 0034 BB2203E5 		str	r2, [r3, #-699]
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //* Set MCK at 47 923 200
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // 1 Enabling the Main Oscillator:
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // SCK = 1/32768 = 30.51 uSecond
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Start up time = 8 * 6 / SCK = 56 * 30.51 = 1,46484375 ms
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_MOR = (( (AT91C_CKGR_OSCOUNT & (0x06 <<8)) | AT91C_CKGR_MOSCEN ));
 1335              		.loc 18 71 0
 1336 0038 D4219FE5 		ldr	r2, .L119+16
 1337 003c DF2303E5 		str	r2, [r3, #-991]
 1338              	.L81:
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Wait the startup time
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_MOSCS));
 1339              		.loc 18 74 0
 1340 0040 971313E5 		ldr	r1, [r3, #-919]
 1341 0044 010011E3 		tst	r1, #1
 1342 0048 0020E0E3 		mvn	r2, #0
 1343 004c FBFFFF0A 		beq	.L81
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // 2 Checking the Main Oscillator Frequency (Optional)
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // 3 Setting PLL and divider:
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // - div by 14 Fin = 1.3165 =(18,432 / 14)
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // - Mul 72+1: Fout = 96.1097 =(3,6864 *73)
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // for 96 MHz the erroe is 0.11%
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Field out NOT USED = 0
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // PLLCOUNT pll startup time estimate at : 0.844 ms
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // PLLCOUNT 28 = 0.000844 /(1/32768)
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_PLLR = ((AT91C_CKGR_DIV      &  14) |
 1344              		.loc 18 84 0
 1345 0050 C0319FE5 		ldr	r3, .L119+20
 1346 0054 D33302E5 		str	r3, [r2, #-979]
 1347              	.L82:
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****                       (AT91C_CKGR_PLLCOUNT & (28<<8)) |
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****                       (AT91C_CKGR_MUL      & (72<<16)));
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Wait the startup time
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_LOCK));
 1348              		.loc 18 89 0
 1349 0058 973312E5 		ldr	r3, [r2, #-919]
 1350 005c 040013E3 		tst	r3, #4
 1351 0060 FCFFFF0A 		beq	.L82
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_MCKRDY));
 1352              		.loc 18 90 0
 1353 0064 0010E0E3 		mvn	r1, #0
 1354              	.L105:
 1355 0068 972311E5 		ldr	r2, [r1, #-919]
 1356 006c 080012E3 		tst	r2, #8
 1357 0070 0030E0E3 		mvn	r3, #0
 1358 0074 FBFFFF0A 		beq	.L105
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // 4. Selection of Master Clock and Processor Clock
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // select the PLL clock divided by 2
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_MCKR = AT91C_PMC_PRES_CLK_2 ;
 1359              		.loc 18 94 0
 1360 0078 0420A0E3 		mov	r2, #4
 1361 007c CF2303E5 		str	r2, [r3, #-975]
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_MCKRDY));
 1362              		.loc 18 95 0
 1363 0080 0310A0E1 		mov	r1, r3
 1364              	.L84:
 1365 0084 972311E5 		ldr	r2, [r1, #-919]
 1366 0088 080012E3 		tst	r2, #8
 1367 008c 0030E0E3 		mvn	r3, #0
 1368 0090 FBFFFF0A 		beq	.L84
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_MCKR |= AT91C_PMC_CSS_PLL_CLK  ;
 1369              		.loc 18 97 0
 1370 0094 CF2313E5 		ldr	r2, [r3, #-975]
 1371 0098 032082E3 		orr	r2, r2, #3
 1372 009c CF2303E5 		str	r2, [r3, #-975]
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_MCKRDY));
 1373              		.loc 18 98 0
 1374 00a0 0310A0E1 		mov	r1, r3
 1375              	.L85:
 1376 00a4 972311E5 		ldr	r2, [r1, #-919]
 1377 00a8 080012E3 		tst	r2, #8
 1378 00ac 0030E0E3 		mvn	r3, #0
 1379 00b0 FBFFFF0A 		beq	.L85
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Set up the default interrupts handler vectors
 101:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // See CStartup.S. Fast interrupt and interrupt are mapped to
 102:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //   fiqhandler and irqhandler in HplInteruptM.nc
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 104:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Enable the PIOA controller so the reading of AT91_PIOA_PDSR will
 105:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // work in the Led toggle call.
 106:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_PCER = (1<<AT91C_ID_PIOA);
 1380              		.loc 18 106 0
 1381 00b4 0420A0E3 		mov	r2, #4
 1382 00b8 EF2303E5 		str	r2, [r3, #-1007]
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //AT91C_BASE_AIC->AIC_SVR[0] = (int) AT91F_Default_FIQ_handler ;
 109:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 110:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //TODO
 111:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     AT91C_BASE_AIC->AIC_SPU  = (int) AT91F_Spurious_handler ;
 1383              		.loc 18 111 0
 1384 00bc 58219FE5 		ldr	r2, .L119+24
 1385 00c0 CB2E03E5 		str	r2, [r3, #-3787]
 112:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_RSTC_RMR  = 0xA5000401;
 1386              		.loc 18 113 0
 1387 00c4 54219FE5 		ldr	r2, .L119+28
 1388 00c8 F72203E5 		str	r2, [r3, #-759]
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_AIC_DCR   = 1;
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 116:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // PIT timer is for 1 ms intervals
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //*AT91C_PITC_PIMR = (0x000FFFFF | 0x01000000 ); /*original*/
 118:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_PITC_PIMR = (MS_1_TIME | AT91C_PITC_PITEN | AT91C_PITC_PITIEN );
 1389              		.loc 18 118 0
 1390 00cc 50219FE5 		ldr	r2, .L119+32
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_AIC_DCR   = 1;
 1391              		.loc 18 114 0
 1392 00d0 0110A0E3 		mov	r1, #1
 1393 00d4 C71E03E5 		str	r1, [r3, #-3783]
 1394              		.loc 18 118 0
 1395 00d8 CF2203E5 		str	r2, [r3, #-719]
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     TmpReset         = *AT91C_PITC_PIVR;
 1396              		.loc 18 119 0
 1397 00dc C72213E5 		ldr	r2, [r3, #-711]
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     TmpReset         = TmpReset;/* Suppress warning*/
 121:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_PMC_PCER  = (1L<<AT91C_ID_TWI);/* Enable TWI Clock        */
 1398              		.loc 18 122 0
 1399 00e0 022CA0E3 		mov	r2, #512
 1400 00e4 EF2303E5 		str	r2, [r3, #-1007]
 1401              	.LBB893:
 1402              	.LBB894:
 1403              	.LBB895:
 1404              	.LBB896:
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     taskMiss = 0;
 1405              		.loc 12 30 0
 1406 00e8 38219FE5 		ldr	r2, .L119+36
 1407 00ec 0000A0E3 		mov	r0, #0
 1408 00f0 000082E5 		str	r0, [r2, #0]
 1409              	.LVL88:
 1410              	.LBB897:
 1411              	.LBB898:
 1412              	.LBB899:
 1413              	.LBB900:
 1414              	.LBB901:
 1415              	.LBB902:
 1416              	.LBB903:
 1417              	.LBB904:
 1418              		.file 19 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*         ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* File Name           : lib_AT91SAM7S256.h
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* Object              : AT91SAM7S256 inlined functions
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* Generated           : AT91 SW Application Group  03/08/2005 (15:46:14)
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_dbgu.h/1.1/Fri Jan 31 12:18:40 2003//
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pmc_SAM7S.h/1.1/Tue Feb  1 08:32:10 2005//
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_VREG_6085B.h/1.1/Tue Feb  1 16:20:47 2005//
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rstc_6098A.h/1.1/Wed Oct  6 10:39:20 2004//
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_ssc.h/1.4/Fri Jan 31 12:19:20 2003//
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_wdtc_6080A.h/1.1/Wed Oct  6 10:38:30 2004//
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_usart.h/1.5/Thu Nov 21 16:01:54 2002//
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_spi2.h/1.1/Mon Aug 25 14:23:52 2003//
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pitc_6079A.h/1.2/Tue Nov  9 14:43:56 2004//
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_aic.h/1.3/Fri Jul 12 08:46:12 2002//
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_twi.h/1.3/Mon Jul 19 14:27:58 2004//
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_adc.h/1.6/Fri Oct 17 09:12:38 2003//
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rttc_6081A.h/1.1/Wed Oct  6 10:39:38 2004//
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_udp.h/1.4/Wed Feb 16 08:39:34 2005//
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_tc_1753b.h/1.1/Fri Jan 31 12:20:02 2003//
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_MC_SAM7S.h/1.1/Thu Mar 25 15:19:14 2004//
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pio.h/1.3/Fri Jan 31 12:18:56 2003//
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_PWM_SAM.h/1.3/Thu Jan 22 10:10:50 2004//
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pdc.h/1.2/Tue Jul  2 13:29:40 2002//
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** #ifndef lib_AT91SAM7S256_H
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** #define lib_AT91SAM7S256_H
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR AIC
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** #define AT91C_AIC_BRANCH_OPCODE ((void (*) ()) 0xE51FFF20) // ldr, pc, [pc, #-&F20]
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ConfigureIt
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Interrupt Handler Initialization
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_AIC_ConfigureIt (
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,  // \arg pointer to the AIC registers
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id,     // \arg interrupt number to initialize
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int priority,   // \arg priority to give to the interrupt
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int src_type,   // \arg activation and sense of activation
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*newHandler) (void) ) // \arg address of the interrupt handler
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int oldHandler;
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     unsigned int mask ;
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     oldHandler = pAic->AIC_SVR[irq_id];
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     mask = 0x1 << irq_id ;
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Save the interrupt handler routine pointer and the interrupt priority
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_SVR[irq_id] = (unsigned int) newHandler ;
 1419              		.loc 19 68 0
 1420 00f4 30019FE5 		ldr	r0, .L119+40
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     oldHandler = pAic->AIC_SVR[irq_id];
 1421              		.loc 19 62 0
 1422 00f8 7B2F13E5 		ldr	r2, [r3, #-3963]
 1423              	.LVL89:
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
 1424              		.loc 19 66 0
 1425 00fc 0220A0E3 		mov	r2, #2
 1426 0100 DB2E03E5 		str	r2, [r3, #-3803]
 1427              		.loc 19 68 0
 1428 0104 7B0F03E5 		str	r0, [r3, #-3963]
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Store the Source Mode Register
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_SMR[irq_id] = src_type | priority  ;
 1429              		.loc 19 70 0
 1430 0108 0700A0E3 		mov	r0, #7
 1431 010c FB0F03E5 		str	r0, [r3, #-4091]
 1432              	.LBE904:
 1433              	.LBE903:
 1434              	.LBE902:
 1435              	.LBE901:
 1436              	.LBE900:
 1437              	.LBE899:
 1438              	.LBE898:
 1439              	.LBE897:
 1440              	.LBB912:
 1441              	.LBB913:
 1442              	.LBB914:
 1443              	.LBB915:
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     return;
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   }
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   // Peripheral clock and AIC
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   void enable(uint8_t id)
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   {
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     atomic {
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****       if (id < 34) {
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****         AT91C_BASE_TC0->TC_IER = AT91C_TC_CPCS;        
 1444              		.loc 9 41 0
 1445 0110 10C0A0E3 		mov	ip, #16
 1446 0114 5F0AE0E3 		mvn	r0, #389120
 1447              	.LBE915:
 1448              	.LBE914:
 1449              	.LBE913:
 1450              	.LBE912:
 1451              	.LBB926:
 1452              	.LBB911:
 1453              	.LBB910:
 1454              	.LBB909:
 1455              	.LBB908:
 1456              	.LBB907:
 1457              	.LBB906:
 1458              	.LBB905:
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the interrupt controller
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
 1459              		.loc 19 72 0
 1460 0118 D72E03E5 		str	r2, [r3, #-3799]
 1461              	.LVL90:
 1462              	.LBE905:
 1463              	.LBE906:
 1464              	.LBE907:
 1465              	.LBE908:
 1466              	.LBE909:
 1467              	.LBE910:
 1468              	.LBE911:
 1469              	.LBE926:
 1470              	.LBB927:
 1471              	.LBB924:
 1472              	.LBB922:
 1473              	.LBB920:
 1474              		.loc 9 41 0
 1475 011c DBCF00E5 		str	ip, [r0, #-4059]
 1476              	.LVL91:
 1477              	.LBB916:
 1478              	.LBB917:
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return oldHandler;
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_EnableIt
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable corresponding IT number
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_EnableIt (
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Enable the interrupt on the interrupt controller
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IECR = 0x1 << irq_id ;
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_DisableIt
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable corresponding IT number
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_DisableIt (
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     unsigned int mask = 0x1 << irq_id;
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 101:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
 102:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 104:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 105:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ClearIt
 106:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Clear corresponding IT number
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_ClearIt (
 109:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 110:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number to initialize
 111:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 112:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = (0x1 << irq_id);
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 116:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_AcknowledgeIt
 118:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Acknowledge corresponding IT number
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_AcknowledgeIt (
 121:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic)     // \arg pointer to the AIC registers
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 123:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_EOICR = pAic->AIC_EOICR;
 124:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 125:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 126:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 127:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_SetExceptionVector
 128:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Configure vector handler
 129:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 130:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_SetExceptionVector (
 131:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int *pVector, // \arg pointer to the AIC registers
 132:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*Handler) () )   // \arg Interrupt Handler
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 134:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int oldVector = *pVector;
 135:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 136:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	if ((unsigned int) Handler == (unsigned int) AT91C_AIC_BRANCH_OPCODE)
 137:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		*pVector = (unsigned int) AT91C_AIC_BRANCH_OPCODE;
 138:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		*pVector = (((((unsigned int) Handler) - ((unsigned int) pVector) - 0x8) >> 2) & 0x00FFFFFF) | 0x
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 141:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return oldVector;
 142:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 143:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 144:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 145:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Trig
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Trig an IT
 147:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 148:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void  AT91F_AIC_Trig (
 149:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 150:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number
 151:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pAic->AIC_ISCR = (0x1 << irq_id) ;
 153:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 154:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 155:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsActive
 157:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if an IT is active
 158:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 159:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsActive (
 160:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 161:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 162:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 163:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return (pAic->AIC_ISR & (0x1 << irq_id));
 164:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 165:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 166:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 167:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsPending
 168:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if an IT is pending
 169:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 170:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsPending (
 171:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 173:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 174:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return (pAic->AIC_IPR & (0x1 << irq_id));
 175:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 176:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 177:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 178:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Open
 179:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set exception vectors and AIC registers to default values
 180:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 181:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_Open(
 182:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,        // \arg pointer to the AIC registers
 183:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*IrqHandler) (),  // \arg Default IRQ vector exception
 184:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*FiqHandler) (),  // \arg Default FIQ vector exception
 185:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*DefaultHandler)  (), // \arg Default Handler set in ISR
 186:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*SpuriousHandler) (), // \arg Default Spurious Handler
 187:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int protectMode)   // \arg Debug Control Register
 188:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 189:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	int i;
 190:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 191:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Disable all interrupts and set IVR to the default handler
 192:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	for (i = 0; i < 32; ++i) {
 193:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_AIC_DisableIt(pAic, i);
 194:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_AIC_ConfigureIt(pAic, i, AT91C_AIC_PRIOR_LOWEST, AT91C_AIC_SRCTYPE_INT_LEVEL_SENSITIVE, Def
 195:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 196:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 197:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Set the IRQ exception vector
 198:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x18, IrqHandler);
 199:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Set the Fast Interrupt exception vector
 200:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x1C, FiqHandler);
 201:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 202:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pAic->AIC_SPU = (unsigned int) SpuriousHandler;
 203:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pAic->AIC_DCR = protectMode;
 204:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 205:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
 206:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PDC
 207:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 208:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 209:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextRx
 210:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set the next receive transfer descriptor
 211:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 212:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextRx (
 213:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,     // \arg pointer to a PDC controller
 214:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *address,       // \arg address to the next bloc to be received
 215:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int bytes)  // \arg number of bytes to be received
 216:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 217:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNPR = (unsigned int) address;
 218:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNCR = bytes;
 219:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 220:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 221:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 222:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextTx
 223:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set the next transmit transfer descriptor
 224:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 225:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextTx (
 226:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 227:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 228:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 229:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 230:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNPR = (unsigned int) address;
 231:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNCR = bytes;
 232:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 233:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 234:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 235:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetRx
 236:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set the receive transfer descriptor
 237:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 238:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetRx (
 239:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 240:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be received
 241:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be received
 242:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 243:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_RPR = (unsigned int) address;
 244:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_RCR = bytes;
 245:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 246:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 247:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 248:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetTx
 249:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set the transmit transfer descriptor
 250:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 251:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetTx (
 252:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 253:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 254:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 255:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 256:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_TPR = (unsigned int) address;
 257:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_TCR = bytes;
 258:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 259:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 260:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 261:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableTx
 262:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable transmit
 263:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 264:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableTx (
 265:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 266:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 267:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTEN;
 268:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 269:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 270:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 271:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableRx
 272:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable receive
 273:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 274:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableRx (
 275:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 276:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 277:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTEN;
 278:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 279:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 280:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 281:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableTx
 282:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable transmit
 283:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 284:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableTx (
 285:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 286:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 287:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTDIS;
 288:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 289:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 290:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 291:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableRx
 292:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable receive
 293:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 294:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableRx (
 295:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 296:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 297:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTDIS;
 298:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 299:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 300:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 301:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsTxEmpty
 302:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been sent
 303:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 304:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsTxEmpty ( // \return return 1 if transfer is complete
 305:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 306:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 307:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TCR);
 308:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 309:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 310:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 311:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextTxEmpty
 312:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 313:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 314:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextTxEmpty ( // \return return 1 if transfer is complete
 315:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 316:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 317:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TNCR);
 318:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 319:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 320:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 321:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsRxEmpty
 322:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been filled
 323:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 324:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsRxEmpty ( // \return return 1 if transfer is complete
 325:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 326:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 327:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RCR);
 328:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 329:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 330:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 331:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextRxEmpty
 332:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 333:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 334:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextRxEmpty ( // \return return 1 if transfer is complete
 335:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 336:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 337:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RNCR);
 338:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 339:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 340:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 341:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Open
 342:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Open PDC: disable TX and RX reset transfer descriptors, re-enable RX and TX
 343:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 344:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Open (
 345:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 346:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 347:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 348:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 349:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 350:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 351:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 352:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 353:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 354:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 355:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 356:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 357:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Enable the RX and TX PDC transfer requests
 358:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableRx(pPDC);
 359:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableTx(pPDC);
 360:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 361:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 362:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 363:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Close
 364:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 365:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 366:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Close (
 367:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 368:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 369:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 370:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 371:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 372:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 373:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 374:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 375:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 376:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 377:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 378:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 379:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 380:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 381:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 382:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SendFrame
 383:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 384:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 385:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_SendFrame(
 386:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 387:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *pBuffer,
 388:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 389:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 390:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 391:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 392:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsTxEmpty(pPDC)) {
 393:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 394:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetTx(pPDC, pBuffer, szBuffer);
 395:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pNextBuffer, szNextBuffer);
 396:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 2;
 397:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 398:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextTxEmpty(pPDC)) {
 399:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 400:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pBuffer, szBuffer);
 401:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 1;
 402:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 403:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else {
 404:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 405:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 0;
 406:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 407:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 408:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 409:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 410:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_ReceiveFrame
 411:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 412:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 413:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_ReceiveFrame (
 414:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 415:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *pBuffer,
 416:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 417:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 418:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 419:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 420:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsRxEmpty(pPDC)) {
 421:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 422:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetRx(pPDC, pBuffer, szBuffer);
 423:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pNextBuffer, szNextBuffer);
 424:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 2;
 425:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 426:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextRxEmpty(pPDC)) {
 427:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 428:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pBuffer, szBuffer);
 429:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 1;
 430:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 431:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else {
 432:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 433:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 0;
 434:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 435:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 436:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
 437:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR DBGU
 438:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 439:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 440:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptEnable
 441:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable DBGU Interrupt
 442:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 443:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptEnable(
 444:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 445:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be enabled
 446:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 447:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IER = flag;
 448:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 449:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 450:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 451:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptDisable
 452:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable DBGU Interrupt
 453:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 454:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptDisable(
 455:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 456:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be disabled
 457:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 458:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IDR = flag;
 459:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 460:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 461:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 462:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_GetInterruptMaskStatus
 463:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return DBGU Interrupt Mask Status
 464:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 465:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_DBGU_GetInterruptMaskStatus( // \return DBGU Interrupt Mask Status
 466:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu) // \arg  pointer to a DBGU controller
 467:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 468:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pDbgu->DBGU_IMR;
 469:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 470:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 471:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 472:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_IsInterruptMasked
 473:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if DBGU Interrupt is Masked 
 474:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 475:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_DBGU_IsInterruptMasked(
 476:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 477:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 478:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 479:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_DBGU_GetInterruptMaskStatus(pDbgu) & flag);
 480:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 481:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 482:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
 483:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PIO
 484:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 485:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 486:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPeriph
 487:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable pins to be drived by peripheral
 488:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 489:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPeriph(
 490:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 491:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int periphAEnable,  // \arg PERIPH A to enable
 492:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int periphBEnable)  // \arg PERIPH B to enable
 493:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 494:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 495:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_ASR = periphAEnable;
 496:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_BSR = periphBEnable;
 497:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PDR = (periphAEnable | periphBEnable); // Set in Periph mode
 498:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 499:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 500:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 501:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOutput
 502:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable PIO in output mode
 503:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 504:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOutput(
 505:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 506:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int pioEnable)      // \arg PIO to be enabled
 507:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 508:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PER = pioEnable; // Set in PIO mode
 509:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_OER = pioEnable; // Configure in Output
 510:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 511:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 512:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 513:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInput
 514:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable PIO in input mode
 515:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 516:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInput(
 517:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 518:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int inputEnable)      // \arg PIO to be enabled
 519:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 520:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Disable output
 521:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_ODR  = inputEnable;
 522:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PER  = inputEnable;
 523:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 524:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 525:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 526:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOpendrain
 527:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Configure PIO in open drain
 528:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 529:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOpendrain(
 530:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 531:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int multiDrvEnable) // \arg pio to be configured in open drain
 532:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 533:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Configure the multi-drive option
 534:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_MDDR = ~multiDrvEnable;
 535:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_MDER = multiDrvEnable;
 536:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 537:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 538:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 539:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPullup
 540:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable pullup on PIO
 541:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 542:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPullup(
 543:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 544:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int pullupEnable)   // \arg enable pullup on PIO
 545:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 546:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		// Connect or not Pullup
 547:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUDR = ~pullupEnable;
 548:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUER = pullupEnable;
 549:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 550:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 551:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 552:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgDirectDrive
 553:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable direct drive on PIO
 554:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 555:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgDirectDrive(
 556:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 557:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int directDrive)    // \arg PIO to be configured with direct drive
 558:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 559:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 560:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 561:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_OWDR  = ~directDrive;
 562:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_OWER  = directDrive;
 563:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 564:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 565:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 566:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInputFilter
 567:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable input filter on input PIO
 568:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 569:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInputFilter(
 570:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 571:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int inputFilter)    // \arg PIO to be configured with input filter
 572:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 573:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 574:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 575:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_IFDR  = ~inputFilter;
 576:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_IFER  = inputFilter;
 577:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 578:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 579:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 580:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInput
 581:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO input value
 582:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 583:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInput( // \return PIO input
 584:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 585:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 586:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return pPio->PIO_PDSR;
 587:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 588:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 589:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 590:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputSet
 591:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO is input flag is active
 592:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 593:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputSet(
 594:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 595:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  flag to be tested
 596:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 597:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return (AT91F_PIO_GetInput(pPio) & flag);
 598:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 599:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 600:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 601:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 602:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_SetOutput
 603:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set to 1 output PIO
 604:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 605:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_SetOutput(
 606:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 607:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be set
 608:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 609:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_SODR = flag;
 610:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 611:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 612:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 613:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ClearOutput
 614:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set to 0 output PIO
 615:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 616:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ClearOutput(
 617:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 618:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be cleared
 619:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 620:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_CODR = flag;
 621:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 622:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 623:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 624:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ForceOutput
 625:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Force output when Direct drive option is enabled
 626:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 627:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ForceOutput(
 628:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 629:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be forced
 630:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 631:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_ODSR = flag;
 632:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 633:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 634:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 635:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Enable
 636:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable PIO
 637:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 638:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Enable(
 639:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 640:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled 
 641:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 642:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_PER = flag;
 643:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 644:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 645:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 646:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Disable
 647:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable PIO
 648:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 649:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Disable(
 650:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 651:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled 
 652:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 653:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_PDR = flag;
 654:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 655:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 656:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 657:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetStatus
 658:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Status
 659:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 660:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetStatus( // \return PIO Status
 661:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 662:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 663:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_PSR;
 664:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 665:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 666:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 667:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsSet
 668:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO is Set
 669:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 670:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsSet(
 671:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 672:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 673:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 674:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetStatus(pPio) & flag);
 675:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 676:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 677:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 678:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputEnable
 679:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 680:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 681:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputEnable(
 682:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 683:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be enabled
 684:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 685:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_OER = flag;
 686:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 687:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 688:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 689:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputDisable
 690:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 691:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 692:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputDisable(
 693:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 694:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be disabled
 695:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 696:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_ODR = flag;
 697:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 698:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 699:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 700:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputStatus
 701:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Status
 702:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 703:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputStatus( // \return PIO Output Status
 704:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 705:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 706:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_OSR;
 707:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 708:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 709:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 710:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOuputSet
 711:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output is Set
 712:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 713:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputSet(
 714:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 715:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 716:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 717:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputStatus(pPio) & flag);
 718:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 719:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 720:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 721:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterEnable
 722:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Input Filter Enable PIO
 723:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 724:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterEnable(
 725:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 726:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be enabled
 727:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 728:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_IFER = flag;
 729:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 730:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 731:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 732:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterDisable
 733:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Input Filter Disable PIO
 734:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 735:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterDisable(
 736:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 737:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be disabled
 738:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 739:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_IFDR = flag;
 740:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 741:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 742:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 743:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInputFilterStatus
 744:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Input Filter Status
 745:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 746:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInputFilterStatus( // \return PIO Input Filter Status
 747:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 748:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 749:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_IFSR;
 750:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 751:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 752:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 753:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputFilterSet
 754:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Input filter is Set
 755:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 756:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputFilterSet(
 757:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 758:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 759:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 760:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInputFilterStatus(pPio) & flag);
 761:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 762:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 763:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 764:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputDataStatus
 765:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Data Status 
 766:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 767:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputDataStatus( // \return PIO Output Data Status 
 768:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 769:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 770:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_ODSR;
 771:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 772:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 773:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 774:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptEnable
 775:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable PIO Interrupt
 776:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 777:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptEnable(
 778:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 779:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be enabled
 780:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 781:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_IER = flag;
 782:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 783:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 784:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 785:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptDisable
 786:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable PIO Interrupt
 787:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 788:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptDisable(
 789:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 790:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be disabled
 791:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 792:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_IDR = flag;
 793:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 794:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 795:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 796:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptMaskStatus
 797:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Mask Status
 798:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 799:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptMaskStatus( // \return PIO Interrupt Mask Status
 800:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 801:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 802:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_IMR;
 803:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 804:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 805:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 806:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptStatus
 807:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 808:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 809:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptStatus( // \return PIO Interrupt Status
 810:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 811:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 812:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_ISR;
 813:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 814:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 815:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 816:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptMasked
 817:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Masked 
 818:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 819:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptMasked(
 820:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 821:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 822:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 823:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptMaskStatus(pPio) & flag);
 824:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 825:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 826:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 827:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptSet
 828:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Set
 829:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 830:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptSet(
 831:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 832:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 833:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 834:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptStatus(pPio) & flag);
 835:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 836:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 837:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 838:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverEnable
 839:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Multi Driver Enable PIO
 840:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 841:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverEnable(
 842:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 843:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled
 844:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 845:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_MDER = flag;
 846:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 847:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 848:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 849:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverDisable
 850:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Multi Driver Disable PIO
 851:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 852:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverDisable(
 853:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 854:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled
 855:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 856:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_MDDR = flag;
 857:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 858:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 859:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 860:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetMultiDriverStatus
 861:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Multi Driver Status
 862:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 863:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetMultiDriverStatus( // \return PIO Multi Driver Status
 864:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 865:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 866:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_MDSR;
 867:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 868:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 869:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 870:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsMultiDriverSet
 871:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO MultiDriver is Set
 872:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 873:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsMultiDriverSet(
 874:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 875:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 876:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 877:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetMultiDriverStatus(pPio) & flag);
 878:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 879:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 880:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 881:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_A_RegisterSelection
 882:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief PIO A Register Selection 
 883:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 884:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_A_RegisterSelection(
 885:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 886:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio A register selection
 887:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 888:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_ASR = flag;
 889:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 890:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 891:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 892:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_B_RegisterSelection
 893:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief PIO B Register Selection 
 894:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 895:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_B_RegisterSelection(
 896:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 897:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio B register selection 
 898:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 899:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_BSR = flag;
 900:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 901:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 902:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 903:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Get_AB_RegisterStatus
 904:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 905:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 906:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_Get_AB_RegisterStatus( // \return PIO AB Register Status
 907:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 908:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 909:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_ABSR;
 910:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 911:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 912:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 913:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsAB_RegisterSet
 914:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO AB Register is Set
 915:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 916:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsAB_RegisterSet(
 917:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 918:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 919:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 920:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_Get_AB_RegisterStatus(pPio) & flag);
 921:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 922:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 923:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 924:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteEnable
 925:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Output Write Enable PIO
 926:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 927:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteEnable(
 928:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 929:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be enabled
 930:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 931:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_OWER = flag;
 932:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 933:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 934:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 935:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteDisable
 936:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Output Write Disable PIO
 937:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 938:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteDisable(
 939:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 940:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be disabled
 941:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 942:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_OWDR = flag;
 943:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 944:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 945:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 946:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputWriteStatus
 947:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Write Status
 948:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 949:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputWriteStatus( // \return PIO Output Write Status
 950:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 951:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 952:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_OWSR;
 953:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 954:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 955:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 956:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputWriteSet
 957:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO OutputWrite is Set
 958:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 959:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputWriteSet(
 960:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 961:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 962:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 963:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputWriteStatus(pPio) & flag);
 964:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 965:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 966:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 967:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetCfgPullup
 968:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Configuration Pullup
 969:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 970:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetCfgPullup( // \return PIO Configuration Pullup 
 971:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 972:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 973:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_PPUSR;
 974:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 975:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 976:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 977:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputDataStatusSet
 978:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output Data Status is Set 
 979:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 980:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputDataStatusSet(
 981:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 982:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 983:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 984:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputDataStatus(pPio) & flag);
 985:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 986:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 987:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 988:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsCfgPullupStatusSet
 989:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Configuration Pullup Status is Set
 990:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 991:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsCfgPullupStatusSet(
 992:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 993:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 994:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 995:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (~AT91F_PIO_GetCfgPullup(pPio) & flag);
 996:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 997:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 998:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
 999:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PMC
1000:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1001:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1002:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkEnableReg
1003:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Enable Register of the PMC controller
1004:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1005:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkEnableReg (
1006:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1007:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int mode)
1008:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
1009:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	//* Write to the SCER register
1010:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCER = mode;
1011:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
1012:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
1013:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1014:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkDisableReg
1015:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Disable Register of the PMC controller
1016:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1017:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkDisableReg (
1018:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1019:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int mode)
1020:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
1021:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	//* Write to the SCDR register
1022:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCDR = mode;
1023:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
1024:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
1025:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1026:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetSysClkStatusReg
1027:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return the System Clock Status Register of the PMC controller
1028:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1029:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetSysClkStatusReg (
1030:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC // pointer to a CAN controller
1031:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	)
1032:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
1033:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return pPMC->PMC_SCSR;
1034:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
1035:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
1036:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1037:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnablePeriphClock
1038:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable peripheral clock
1039:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1040:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnablePeriphClock (
1041:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1042:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int periphIds)  // \arg IDs of peripherals to enable
1043:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
1044:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCER = periphIds;
 1479              		.loc 19 1044 0
 1480 0120 EF1303E5 		str	r1, [r3, #-1007]
 1481              	.LVL92:
 1482              	.LBE917:
 1483              	.LBE916:
 1484              	.LBE920:
 1485              	.LBE922:
 1486              	.LBE924:
 1487              	.LBE927:
 1488              	.LBE896:
 1489              	.LBE895:
 1490              	.LBE894:
 1491              	.LBE893:
 1492              	.LBB932:
 1493              	.LBB933:
 1494              	.LBB934:
 1495              	.LBB935:
 1496              	.LBB936:
 1497              	.LBB937:
 1498              	.LBB938:
 1499              	.LBB939:
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_PER = GPIO_pin_bit(pin);
 1500              		.loc 3 17 0
 1501 0124 0205A0E3 		mov	r0, #8388608
 1502              	.LBE939:
 1503              	.LBE938:
 1504              	.LBE937:
 1505              	.LBE936:
 1506              	.LBE935:
 1507              	.LBE934:
 1508              	.LBE933:
 1509              	.LBE932:
 1510              	.LBB994:
 1511              	.LBB931:
 1512              	.LBB930:
 1513              	.LBB929:
 1514              	.LBB928:
 1515              	.LBB925:
 1516              	.LBB923:
 1517              	.LBB921:
 1518              	.LBB918:
 1519              	.LBB919:
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IECR = 0x1 << irq_id ;
 1520              		.loc 19 86 0
 1521 0128 DF2E03E5 		str	r2, [r3, #-3807]
 1522              	.LVL93:
 1523              	.LBE919:
 1524              	.LBE918:
 1525              	.LBE921:
 1526              	.LBE923:
 1527              	.LBE925:
 1528              	.LBE928:
 1529              	.LBE929:
 1530              	.LBE930:
 1531              	.LBE931:
 1532              	.LBE994:
 1533              	.LBB995:
 1534              	.LBB993:
 1535              	.LBB992:
 1536              	.LBB947:
 1537              	.LBB948:
 1538              	.LBB949:
 1539              	.LBB950:
 1540              	.LBB951:
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_PER = GPIO_pin_bit(pin);
 1541              		.loc 3 17 0
 1542 012c 0112A0E3 		mov	r1, #268435456
 1543              	.LBE951:
 1544              	.LBE950:
 1545              	.LBE949:
 1546              	.LBE948:
 1547              	.LBE947:
 1548              	.LBB959:
 1549              	.LBB960:
 1550              	.LBB961:
 1551              	.LBB962:
 1552              	.LBB963:
 1553 0130 0222A0E3 		mov	r2, #536870912
 1554              	.LBE963:
 1555              	.LBE962:
 1556              	.LBE961:
 1557              	.LBE960:
 1558              	.LBE959:
 1559              	.LBB971:
 1560              	.LBB946:
 1561              	.LBB942:
 1562              	.LBB941:
 1563              	.LBB940:
 1564 0134 FF0B03E5 		str	r0, [r3, #-3071]
 1565              	.LVL94:
 1566              	.LBE940:
 1567              	.LBE941:
 1568              	.LBE942:
 1569              	.LBB943:
 1570              	.LBB944:
 1571              	.LBB945:
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_OER = GPIO_pin_bit(pin);
 1572              		.loc 3 24 0
 1573 0138 EF0B03E5 		str	r0, [r3, #-3055]
 1574              	.LVL95:
 1575              	.LBE945:
 1576              	.LBE944:
 1577              	.LBE943:
 1578              	.LBE946:
 1579              	.LBE971:
 1580              	.LBB972:
 1581              	.LBB958:
 1582              	.LBB954:
 1583              	.LBB953:
 1584              	.LBB952:
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_PER = GPIO_pin_bit(pin);
 1585              		.loc 3 17 0
 1586 013c FF1B03E5 		str	r1, [r3, #-3071]
 1587              	.LVL96:
 1588              	.LBE952:
 1589              	.LBE953:
 1590              	.LBE954:
 1591              	.LBB955:
 1592              	.LBB956:
 1593              	.LBB957:
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_OER = GPIO_pin_bit(pin);
 1594              		.loc 3 24 0
 1595 0140 EF1B03E5 		str	r1, [r3, #-3055]
 1596              	.LVL97:
 1597              	.LBE957:
 1598              	.LBE956:
 1599              	.LBE955:
 1600              	.LBE958:
 1601              	.LBE972:
 1602              	.LBB973:
 1603              	.LBB970:
 1604              	.LBB966:
 1605              	.LBB965:
 1606              	.LBB964:
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_PER = GPIO_pin_bit(pin);
 1607              		.loc 3 17 0
 1608 0144 FF2B03E5 		str	r2, [r3, #-3071]
 1609              	.LVL98:
 1610              	.LBE964:
 1611              	.LBE965:
 1612              	.LBE966:
 1613              	.LBB967:
 1614              	.LBB968:
 1615              	.LBB969:
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_OER = GPIO_pin_bit(pin);
 1616              		.loc 3 24 0
 1617 0148 EF2B03E5 		str	r2, [r3, #-3055]
 1618              	.LVL99:
 1619              	.LBE969:
 1620              	.LBE968:
 1621              	.LBE967:
 1622              	.LBE970:
 1623              	.LBE973:
 1624              	.LBB974:
 1625              	.LBB975:
 1626              	.LBB976:
 1627              	.LBB977:
 1628              	.LBB978:
 1629              	.LBB979:
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/gpio/HplAT91_GPIOM.nc ****     *AT91C_PIOA_SODR = GPIO_pin_bit(pin);
 1630              		.loc 3 38 0
 1631 014c CF0B03E5 		str	r0, [r3, #-3023]
 1632              	.LVL100:
 1633              	.LBE979:
 1634              	.LBE978:
 1635              	.LBE977:
 1636              	.LBE976:
 1637              	.LBE975:
 1638              	.LBE974:
 1639              	.LBB980:
 1640              	.LBB981:
 1641              	.LBB982:
 1642              	.LBB983:
 1643              	.LBB984:
 1644              	.LBB985:
 1645 0150 CF1B03E5 		str	r1, [r3, #-3023]
 1646              	.LVL101:
 1647              	.LBE985:
 1648              	.LBE984:
 1649              	.LBE983:
 1650              	.LBE982:
 1651              	.LBE981:
 1652              	.LBE980:
 1653              	.LBB986:
 1654              	.LBB987:
 1655              	.LBB988:
 1656              	.LBB989:
 1657              	.LBB990:
 1658              	.LBB991:
 1659 0154 CF2B03E5 		str	r2, [r3, #-3023]
 1660              	.L87:
 1661              	.LBE991:
 1662              	.LBE990:
 1663              	.LBE989:
 1664              	.LBE988:
 1665              	.LBE987:
 1666              	.LBE986:
 1667              	.LBE992:
 1668              	.LBE993:
 1669              	.LBE995:
 1670              	.LBE892:
 1671              	.LBE891:
 1672              	.LBE890:
 1673              	.LBE889:
 1674              	.LBB996:
 1675              	.LBB997:
 1676              	.LBB998:
 1677              	.LBB999:
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       nextTask = popTask();
 1678              		.loc 1 139 0 discriminator 1
 1679 0158 FEFFFFEB 		bl	SchedulerBasicP__popTask
 1680              	.LVL102:
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       if( nextTask == NO_TASK )
 1681              		.loc 1 140 0 discriminator 1
 1682 015c FF0050E3 		cmp	r0, #255
 1683 0160 0B00000A 		beq	.L86
 145:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     signal TaskBasic.runTask[nextTask]();
 1684              		.loc 1 145 0
 1685 0164 FEFFFFEB 		bl	SchedulerBasicP__TaskBasic__runTask
 1686              	.LVL103:
 1687 0168 FAFFFFEA 		b	.L87
 1688              	.LVL104:
 1689              	.L89:
 1690              	.LBE999:
 1691              	.LBE998:
 1692              	.LBE997:
 1693              	.LBE996:
 1694              	.LBB1000:
 1695              	.LBB1001:
 1696              	.LBB1002:
 1697              	.LBB1003:
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       nextTask = popTask();
 1698              		.loc 1 139 0 discriminator 1
 1699 016c FEFFFFEB 		bl	SchedulerBasicP__popTask
 1700              	.LVL105:
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       if( nextTask == NO_TASK )
 1701              		.loc 1 140 0 discriminator 1
 1702 0170 FF0050E3 		cmp	r0, #255
 1703 0174 1400000A 		beq	.L88
 145:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     signal TaskBasic.runTask[nextTask]();
 1704              		.loc 1 145 0
 1705 0178 FEFFFFEB 		bl	SchedulerBasicP__TaskBasic__runTask
 1706              	.LVL106:
 1707 017c FAFFFFEA 		b	.L89
 1708              	.LVL107:
 1709              	.L118:
 1710              	.LBE1003:
 1711              	.LBE1002:
 1712              	.LBE1001:
 1713              	.LBE1000:
 1714              	.LBE1018:
 1715              	.LBB1019:
 1716              	.LBB1020:
 1717              	.LBB1021:
 1718              	.LBB1022:
 157:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	while ((nextTask = popTask()) == NO_TASK)
 1719              		.loc 1 157 0
 1720 0180 FEFFFFEB 		bl	SchedulerBasicP__popTask
 1721              	.LVL108:
 1722 0184 FF0050E3 		cmp	r0, #255
 1723 0188 FCFFFF0A 		beq	.L118
 1724              	.LVL109:
 1725              	.LBE1022:
 162:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       signal TaskBasic.runTask[nextTask]();
 1726              		.loc 1 162 0
 1727 018c FEFFFFEB 		bl	SchedulerBasicP__TaskBasic__runTask
 1728              	.LVL110:
 1729 0190 FAFFFFEA 		b	.L118
 1730              	.LVL111:
 1731              	.L86:
 1732              	.LBE1021:
 1733              	.LBE1020:
 1734              	.LBE1019:
 1735              	.LBB1023:
 1736              	.LBB1004:
 1737              	.LBB1005:
 1738              	.LBB1006:
 1739              	.LBB1007:
 1740              	.LBB1008:
 1741              	.LBB1009:
 1742              	.LBB1010:
 1743              	.LBB1011:
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       gfInitialized = TRUE;
 1744              		.loc 4 35 0
 1745 0194 94309FE5 		ldr	r3, .L119+44
 1746 0198 0120A0E3 		mov	r2, #1
 1747              	.LBE1011:
 1748              	.LBE1010:
 1749              	.LBE1009:
 1750              	.LBE1008:
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
 1751              		.loc 6 78 0
 1752 019c 90109FE5 		ldr	r1, .L119+48
 1753              	.LBB1015:
 1754              	.LBB1014:
 1755              	.LBB1013:
 1756              	.LBB1012:
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91OSTimerM.nc ****       gfInitialized = TRUE;
 1757              		.loc 4 35 0
 1758 01a0 0020C3E5 		strb	r2, [r3, #0]
 1759              	.LBE1012:
 1760              	.LBE1013:
 1761              	.LBE1014:
 1762              	.LBE1015:
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mfRunning = FALSE;
 1763              		.loc 6 78 0
 1764 01a4 0030A0E3 		mov	r3, #0
 1765 01a8 0030C1E5 		strb	r3, [r1, #0]
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mTf = 0;      
 1766              		.loc 6 79 0
 1767 01ac 84109FE5 		ldr	r1, .L119+52
 1768 01b0 003081E5 		str	r3, [r1, #0]
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****       mTc = 0;
 1769              		.loc 6 80 0
 1770 01b4 80109FE5 		ldr	r1, .L119+56
 1771 01b8 003081E5 		str	r3, [r1, #0]
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HalAT91AlarmM.nc ****   	      mMinDeltaT = 1;
 1772              		.loc 6 86 0
 1773 01bc 7C309FE5 		ldr	r3, .L119+60
 1774 01c0 002083E5 		str	r2, [r3, #0]
 1775              	.LBB1016:
 1776              	.LBB1017:
 1777              		.loc 7 16 0
 1778 01c4 FEFFFFEB 		bl	HplAT91OSTimerM__AT91OST__open.constprop.10
 1779              	.LVL112:
 1780 01c8 E7FFFFEA 		b	.L89
 1781              	.LVL113:
 1782              	.L88:
 1783              	.LBE1017:
 1784              	.LBE1016:
 1785              	.LBE1007:
 1786              	.LBE1006:
 1787              	.LBE1005:
 1788              	.LBE1004:
 1789              	.LBE1023:
 1790              	.LBB1024:
 1791              	.LBB1025:
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   asm volatile (
 1792              		.loc 5 57 0
 1793 01cc 0000A0E3 		mov	r0, #0
 1794              	.LVL114:
 1795 01d0 0030A0E1 		mov	r3, r0
 1796              	@ 57 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h" 1
 1797 01d4 00300FE1 		mrs r3,CPSR
 1798 01d8 C030C3E3 		bic r3,r3,#0xc0
 1799 01dc 03F021E1 		msr CPSR_c, r3
 1800              	@ 0 "" 2
 1801              	.LVL115:
 1802              	.LBE1025:
 1803              	.LBE1024:
 1804              	.LBB1026:
 1805              	.LBB1027:
 1806              	.LBB1028:
 1807              	.LBB1029:
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Timer.nc ****   command void startPeriodic(uint32_t dt);
 1808              		.loc 13 64 0
 1809 01e0 FA10A0E3 		mov	r1, #250
 1810 01e4 FEFFFFEB 		bl	VirtualizeTimerC__0__Timer__startPeriodic
 1811              	.LVL116:
 1812              	.LBE1029:
 1813              	.LBE1028:
 1814              	.LBB1030:
 1815              	.LBB1031:
 1816 01e8 0100A0E3 		mov	r0, #1
 1817 01ec 7D1FA0E3 		mov	r1, #500
 1818 01f0 FEFFFFEB 		bl	VirtualizeTimerC__0__Timer__startPeriodic
 1819              	.LVL117:
 1820              	.LBE1031:
 1821              	.LBE1030:
 1822              	.LBB1032:
 1823              	.LBB1033:
 1824 01f4 0200A0E3 		mov	r0, #2
 1825 01f8 FA1FA0E3 		mov	r1, #1000
 1826 01fc FEFFFFEB 		bl	VirtualizeTimerC__0__Timer__startPeriodic
 1827              	.LVL118:
 1828 0200 DEFFFFEA 		b	.L118
 1829              	.L120:
 1830              		.align	2
 1831              	.L119:
 1832 0204 00000000 		.word	SchedulerBasicP__m_next
 1833 0208 00000000 		.word	SchedulerBasicP__m_head
 1834 020c 00000000 		.word	SchedulerBasicP__m_tail
 1835 0210 00014800 		.word	4718848
 1836 0214 01060000 		.word	1537
 1837 0218 0E1C4800 		.word	4725774
 1838 021c 00000000 		.word	AT91F_Spurious_handler
 1839 0220 010400A5 		.word	-1526725631
 1840 0224 BB0B0003 		.word	50334651
 1841 0228 00000000 		.word	HplAT91PitM__taskMiss
 1842 022c 00000000 		.word	irqhandler
 1843 0230 00000000 		.word	.LANCHOR1
 1844 0234 00000000 		.word	HalAT91AlarmM__0__mfRunning
 1845 0238 00000000 		.word	HalAT91AlarmM__0__mTf
 1846 023c 00000000 		.word	HalAT91AlarmM__0__mTc
 1847 0240 00000000 		.word	HalAT91AlarmM__0__mMinDeltaT
 1848              	.LBE1033:
 1849              	.LBE1032:
 1850              	.LBE1027:
 1851              	.LBE1026:
 1852              		.cfi_endproc
 1853              	.LFE128:
 1855              		.global	HplAT91OSTimerM__gfInitialized
 1856              		.comm	HalAT91AlarmM__0__mTc,4,4
 1857              		.comm	HalAT91AlarmM__0__mTf,4,4
 1858              		.comm	HalAT91AlarmM__0__mMinDeltaT,4,4
 1859              		.comm	HalAT91AlarmM__0__mfRunning,1,1
 1860              		.comm	AlarmToTimerC__0__m_oneshot,1,1
 1861              		.comm	AlarmToTimerC__0__m_dt,4,4
 1862              		.comm	VirtualizeTimerC__0__m_timers,36,4
 1863              		.comm	SchedulerBasicP__m_next,4,1
 1864              		.comm	SchedulerBasicP__m_tail,1,1
 1865              		.comm	SchedulerBasicP__m_head,1,1
 1866              		.comm	HplAT91PitM__taskMiss,4,4
 1867              		.global	PID_ADR_TABLE
 1868              		.global	TOSH_IRQLEVEL_TABLE
 1869              		.global	TOSH_IRP_TABLE
 1870              		.section	.rodata
 1873              	TOSH_IRQLEVEL_TABLE:
 1874 0000 FF       		.byte	-1
 1875 0001 01       		.byte	1
 1876 0002 FF       		.byte	-1
 1877 0003 FF       		.byte	-1
 1878 0004 FF       		.byte	-1
 1879 0005 FF       		.byte	-1
 1880 0006 FF       		.byte	-1
 1881 0007 FF       		.byte	-1
 1882 0008 FF       		.byte	-1
 1883 0009 00       		.byte	0
 1884 000a FF       		.byte	-1
 1885 000b FF       		.byte	-1
 1886 000c 00       		.byte	0
 1887 000d 00       		.byte	0
 1888 000e 00       		.byte	0
 1889 000f FF       		.byte	-1
 1890 0010 FF       		.byte	-1
 1891 0011 FF       		.byte	-1
 1892 0012 FF       		.byte	-1
 1893 0013 FF       		.byte	-1
 1894 0014 FF       		.byte	-1
 1895 0015 FF       		.byte	-1
 1896 0016 FF       		.byte	-1
 1897 0017 FF       		.byte	-1
 1898 0018 FF       		.byte	-1
 1899 0019 FF       		.byte	-1
 1900 001a FF       		.byte	-1
 1901 001b FF       		.byte	-1
 1902 001c FF       		.byte	-1
 1903 001d FF       		.byte	-1
 1904 001e FF       		.byte	-1
 1905 001f FF       		.byte	-1
 1906 0020 FF       		.byte	-1
 1909              	TOSH_IRP_TABLE:
 1910 0021 FF       		.byte	-1
 1911 0022 07       		.byte	7
 1912 0023 FF       		.byte	-1
 1913 0024 FF       		.byte	-1
 1914 0025 FF       		.byte	-1
 1915 0026 FF       		.byte	-1
 1916 0027 FF       		.byte	-1
 1917 0028 FF       		.byte	-1
 1918 0029 FF       		.byte	-1
 1919 002a 07       		.byte	7
 1920 002b FF       		.byte	-1
 1921 002c FF       		.byte	-1
 1922 002d 04       		.byte	4
 1923 002e FF       		.byte	-1
 1924 002f FF       		.byte	-1
 1925 0030 FF       		.byte	-1
 1926 0031 FF       		.byte	-1
 1927 0032 FF       		.byte	-1
 1928 0033 FF       		.byte	-1
 1929 0034 FF       		.byte	-1
 1930 0035 FF       		.byte	-1
 1931 0036 FF       		.byte	-1
 1932 0037 FF       		.byte	-1
 1933 0038 FF       		.byte	-1
 1934 0039 FF       		.byte	-1
 1935 003a FF       		.byte	-1
 1936 003b FF       		.byte	-1
 1937 003c FF       		.byte	-1
 1938 003d FF       		.byte	-1
 1939 003e FF       		.byte	-1
 1940 003f FF       		.byte	-1
 1941 0040 FF       		.byte	-1
 1942 0041 FF       		.byte	-1
 1943              		.data
 1944              		.align	2
 1945              		.set	.LANCHOR0,. + 0
 1948              	PID_ADR_TABLE:
 1949 0000 00000000 		.word	0
 1950 0004 30FDFFFF 		.word	-720
 1951 0008 00000000 		.word	0
 1952 000c 00000000 		.word	0
 1953 0010 00000000 		.word	0
 1954 0014 00000000 		.word	0
 1955 0018 00000000 		.word	0
 1956 001c 00000000 		.word	0
 1957 0020 00000000 		.word	0
 1958 0024 00000000 		.word	0
 1959 0028 00000000 		.word	0
 1960 002c 00000000 		.word	0
 1961 0030 0000FAFF 		.word	-393216
 1962 0034 4000FAFF 		.word	-393152
 1963 0038 8000FAFF 		.word	-393088
 1964 003c 00000000 		.word	0
 1965 0040 00000000 		.word	0
 1966 0044 00000000 		.word	0
 1967 0048 00000000 		.word	0
 1968 004c 00000000 		.word	0
 1969 0050 00000000 		.word	0
 1970 0054 00000000 		.word	0
 1971 0058 00000000 		.word	0
 1972 005c 00000000 		.word	0
 1973 0060 00000000 		.word	0
 1974 0064 00000000 		.word	0
 1975 0068 00000000 		.word	0
 1976 006c 00000000 		.word	0
 1977 0070 00000000 		.word	0
 1978 0074 00000000 		.word	0
 1979 0078 00000000 		.word	0
 1980 007c 00000000 		.word	0
 1981 0080 00000000 		.word	0
 1982              		.bss
 1983              		.set	.LANCHOR1,. + 0
 1986              	HplAT91OSTimerM__gfInitialized:
 1987 0000 00       		.space	1
 1988              		.text
 1989              	.Letext0:
 1990              		.file 20 "/opt/local/lib/gcc/arm-elf/4.7.3/include/stddef.h"
 1991              		.file 21 "/opt/local/lib/gcc/arm-elf/4.7.3/../../../../arm-elf/include/stdint.h"
 1992              		.file 22 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/tos.h"
 1993              		.file 23 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/types/TinyError.h"
 1994              		.file 24 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/AT91SAM7S256.
 1995              		.file 25 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/nxt.h"
 1996              		.file 26 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/types/Leds.h"
 1997              		.file 27 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91_GPIOPin.nc"
 1998              		.file 28 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/lib/timer/Alarm.nc"
 1999              		.file 29 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91Pit.nc"
 2000              		.file 30 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/McuSleepC.nc"
 2001              		.file 31 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/Init.nc"
 2002              		.file 32 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/LedsP.nc"
 2003              		.file 33 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/Leds.nc"
 2004              		.file 34 "BlinkC.nc"
 2005              		.file 35 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/McuSleep.nc"
 2006              		.file 36 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/Scheduler.nc"
 2007              		.file 37 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/Boot.nc"
 2008              		.file 38 "/opt/local/lib/gcc/arm-elf/4.7.3/../../../../arm-elf/include/string.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 app.c
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:5      .text:0000000000000000 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:7      .text:0000000000000000 SchedulerBasicP__pushTask
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:64     .text:0000000000000068 $d
                            *COM*:0000000000000004 SchedulerBasicP__m_next
                            *COM*:0000000000000001 SchedulerBasicP__m_tail
                            *COM*:0000000000000001 SchedulerBasicP__m_head
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:70     .text:0000000000000074 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:72     .text:0000000000000074 SchedulerBasicP__popTask
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:106    .text:00000000000000ac $d
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:112    .text:00000000000000b8 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:114    .text:00000000000000b8 HalAT91_GeneralIOM__GeneralIO__toggle
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:173    .text:00000000000000d8 HplAT91OSTimerM__AT91OST__open.constprop.10
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:240    .text:000000000000013c HalAT91AlarmM__0__Alarm__start
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:349    .text:00000000000001a8 $d
                            *COM*:0000000000000004 HalAT91AlarmM__0__mMinDeltaT
                            *COM*:0000000000000004 HalAT91AlarmM__0__mTf
                            *COM*:0000000000000004 HalAT91AlarmM__0__mTc
                            *COM*:0000000000000001 HalAT91AlarmM__0__mfRunning
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:359    .text:00000000000001c0 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:361    .text:00000000000001c0 VirtualizeTimerC__0__Timer__startPeriodic
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:425    .text:00000000000001f8 $d
                            *COM*:0000000000000024 VirtualizeTimerC__0__m_timers
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:437    .text:0000000000000200 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:440    .text:0000000000000200 irqhandler
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:659    .text:00000000000002a4 $d
                            *COM*:0000000000000004 HplAT91PitM__taskMiss
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:672    .text:00000000000002b8 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:674    .text:00000000000002b8 VirtualizeTimerC__0__fireTimers
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:831    .text:0000000000000350 $d
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:840    .text:0000000000000354 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:842    .text:0000000000000354 SchedulerBasicP__TaskBasic__runTask
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:863    .text:0000000000000364 $d
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:872    .text:0000000000000374 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1211   .text:0000000000000478 $d
                            *COM*:0000000000000004 AlarmToTimerC__0__m_dt
                            *COM*:0000000000000001 AlarmToTimerC__0__m_oneshot
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1230   .text:0000000000000494 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1233   .text:0000000000000494 __nesc_atomic_start
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1250   .text:000000000000049c __nesc_atomic_end
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1265   .text:00000000000004a0 fiqhandler
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1278   .text.startup:0000000000000000 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1281   .text.startup:0000000000000000 main
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1832   .text.startup:0000000000000204 $d
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1986   .bss:0000000000000000 HplAT91OSTimerM__gfInitialized
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1948   .data:0000000000000000 PID_ADR_TABLE
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1873   .rodata:0000000000000000 TOSH_IRQLEVEL_TABLE
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1909   .rodata:0000000000000021 TOSH_IRP_TABLE
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1944   .data:0000000000000000 $d
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//ccY4YhKP.s:1987   .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
AT91F_Spurious_handler
