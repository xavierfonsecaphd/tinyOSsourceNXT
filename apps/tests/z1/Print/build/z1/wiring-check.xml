<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="48:PrintAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x100e0c020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x100c37bc8"/></to>
    </wire>
    <wire loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x100c37bc8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x100c488c8"/></to>
    </wire>
    <wire loc="51:PrintAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x100e1dc38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x100ded580"/></to>
    </wire>
    <wire loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x100ded580"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x100e3be20"/></to>
    </wire>
    <wire loc="54:PrintAppC.nc">
      <from><interface-ref name="TimerPrint" scoped="" ref="0x100e2c810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1010b9a60"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1010b9a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1010d55b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x100c350e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1010cd020"/></to>
    </wire>
    <wire loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x100df7020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x100a00c20"/></to>
    </wire>
    <wire loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x100a00c20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x100c09660"/></to>
    </wire>
    <wire loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x100df79f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x100c46020"/></to>
    </wire>
    <wire loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x100c46020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x100c46dd0"/></to>
    </wire>
    <wire loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x100df6140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x100c350e0"/></to>
    </wire>
    <wire loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x100c43500"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x100c51020"/></to>
    </wire>
    <wire loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x100c51020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x100c76d10"/></to>
    </wire>
    <wire loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x100c43ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x100e65020"/></to>
    </wire>
    <wire loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x100c492b8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x100c743c0"/></to>
    </wire>
    <wire loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x100c252b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x100c73660"/></to>
    </wire>
    <wire loc="113:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x100cb4588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100d746a0"/></to>
    </wire>
    <wire loc="126:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x100ccf710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100d87820"/></to>
    </wire>
    <wire loc="108:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x100cc10c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100d7a470"/></to>
    </wire>
    <wire loc="149:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x100ce9868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100da2780"/></to>
    </wire>
    <wire loc="107:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x100cc7868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100d7b780"/></to>
    </wire>
    <wire loc="148:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x100cd9e40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100da3aa0"/></to>
    </wire>
    <wire loc="170:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x100ce6868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100da6780"/></to>
    </wire>
    <wire loc="154:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x100cdf898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100d9d820"/></to>
    </wire>
    <wire loc="99:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x100cb5cd8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100d69210"/></to>
    </wire>
    <wire loc="135:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x100ceb868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100d97780"/></to>
    </wire>
    <wire loc="134:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x100cda3d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100d7eaa0"/></to>
    </wire>
    <wire loc="133:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x100ccdba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100d7f820"/></to>
    </wire>
    <wire loc="115:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x100cc0020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100d72780"/></to>
    </wire>
    <wire loc="156:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x100ce8868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100d9b780"/></to>
    </wire>
    <wire loc="140:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x100ccb060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100d92820"/></to>
    </wire>
    <wire loc="114:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x100cc66e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100d73a90"/></to>
    </wire>
    <wire loc="93:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x100cbd5e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d12a60"/></to>
    </wire>
    <wire loc="155:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x100cd8b90"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100d9caa0"/></to>
    </wire>
    <wire loc="106:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x100cbc120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100d7c3d8"/></to>
    </wire>
    <wire loc="161:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x100cded30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100daf820"/></to>
    </wire>
    <wire loc="101:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x100cd11b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100d672e8"/></to>
    </wire>
    <wire loc="142:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x100cea868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100d90780"/></to>
    </wire>
    <wire loc="100:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x100cc3a00"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100d685f8"/></to>
    </wire>
    <wire loc="141:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x100cd9120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100d91aa0"/></to>
    </wire>
    <wire loc="163:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x100ce7868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100dad780"/></to>
    </wire>
    <wire loc="147:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x100cca400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100da4820"/></to>
    </wire>
    <wire loc="120:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x100cd0020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d223d0"/></to>
    </wire>
    <wire loc="162:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x100cd79f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100daeaa0"/></to>
    </wire>
    <wire loc="128:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x100cd5868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x100d85780"/></to>
    </wire>
    <wire loc="169:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x100cd6868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100da7aa0"/></to>
    </wire>
    <wire loc="127:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x100cdb558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x100d86aa0"/></to>
    </wire>
    <wire loc="168:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x100cdc120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x100da8820"/></to>
    </wire>
    <wire loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x100d10858"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d10220"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x100d10e70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x100db80e8"/></to>
    </wire>
    <wire loc="96:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x100d264b0"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x100db8830"/></to>
    </wire>
    <wire loc="102:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100d66100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d12a60"/></to>
    </wire>
    <wire loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100d65780"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d10220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100d782e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d12a60"/></to>
    </wire>
    <wire loc="110:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100d77908"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d10220"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100d715f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d12a60"/></to>
    </wire>
    <wire loc="117:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100d8ac18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d10220"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x100d202e8"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d21bb0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x100d20900"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x100db7020"/></to>
    </wire>
    <wire loc="123:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x100d1f020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x100db7768"/></to>
    </wire>
    <wire loc="129:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100d835f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d223d0"/></to>
    </wire>
    <wire loc="130:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100d82c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d21bb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100d965f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d223d0"/></to>
    </wire>
    <wire loc="137:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100d95c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d21bb0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100d8f5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d223d0"/></to>
    </wire>
    <wire loc="144:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100d8dc18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d21bb0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100da15f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d223d0"/></to>
    </wire>
    <wire loc="151:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100da0c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d21bb0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100d9a5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d223d0"/></to>
    </wire>
    <wire loc="158:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100d98c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d21bb0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100dac5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d223d0"/></to>
    </wire>
    <wire loc="165:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100dabc18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d21bb0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x100da55f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x100d223d0"/></to>
    </wire>
    <wire loc="172:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x100dbec18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x100d21bb0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x100a12728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100c084d0"/></to>
    </wire>
    <wire loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x100c05998"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x100b4f698"/></to>
    </wire>
    <wire loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x100e65020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x100e3b858"/></to>
    </wire>
    <wire loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x100e36110"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x100e39a78"/></to>
    </wire>
    <wire loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x100e39a78"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x101095958"/></to>
    </wire>
    <wire loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x100e35338"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x100e68ca8"/></to>
    </wire>
    <wire loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x100e68ca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1010a60e0"/></to>
    </wire>
    <wire loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x100e4c4c0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x100e67e30"/></to>
    </wire>
    <wire loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x100e67e30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1010a2958"/></to>
    </wire>
    <wire loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x101094a90"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x100ec2568"/></to>
    </wire>
    <wire loc="486:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x100ec2568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10100c748"/></to>
    </wire>
    <wire loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1010a52e8"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x100ebe568"/></to>
    </wire>
    <wire loc="488:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x100ebe568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101001020"/></to>
    </wire>
    <wire loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1010a0a90"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x100ec0568"/></to>
    </wire>
    <wire loc="487:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x100ec0568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1010063e0"/></to>
    </wire>
    <wire loc="442:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x100e6e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f52748"/></to>
    </wire>
    <wire loc="455:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x100e95568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f85020"/></to>
    </wire>
    <wire loc="596:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x100f08558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101022020"/></to>
    </wire>
    <wire loc="584:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1STE" scoped="" ref="0x100efe570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fd8748"/></to>
    </wire>
    <wire loc="460:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x100e91568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f9e748"/></to>
    </wire>
    <wire loc="473:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x100e9b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fd3020"/></to>
    </wire>
    <wire loc="497:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x100ed0568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10102d748"/></to>
    </wire>
    <wire loc="590:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x100ef4558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10101c748"/></to>
    </wire>
    <wire loc="602:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x100f1f560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101042ca8"/></to>
    </wire>
    <wire loc="445:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x100e86568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f64ca8"/></to>
    </wire>
    <wire loc="562:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0CLK" scoped="" ref="0x100ec85d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f9e748"/></to>
    </wire>
    <wire loc="580:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1SIMO" scoped="" ref="0x100ee4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fc4020"/></to>
    </wire>
    <wire loc="450:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x100e82568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f7c3e0"/></to>
    </wire>
    <wire loc="463:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x100e8b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fb2ca8"/></to>
    </wire>
    <wire loc="476:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x100eb3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fe63e0"/></to>
    </wire>
    <wire loc="489:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x100ebc568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100ffdca8"/></to>
    </wire>
    <wire loc="500:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x100eca568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101042ca8"/></to>
    </wire>
    <wire loc="440:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x100e72668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f5b020"/></to>
    </wire>
    <wire loc="453:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x100e7b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f90820"/></to>
    </wire>
    <wire loc="466:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x100ea3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fc4020"/></to>
    </wire>
    <wire loc="573:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0SDA" scoped="" ref="0x100ef0570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f993e0"/></to>
    </wire>
    <wire loc="593:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x100f0e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10100eca8"/></to>
    </wire>
    <wire loc="566:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0SIMO" scoped="" ref="0x100ede580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fad748"/></to>
    </wire>
    <wire loc="594:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x100f0c558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10102d748"/></to>
    </wire>
    <wire loc="471:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x100e9f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fbb9a8"/></to>
    </wire>
    <wire loc="484:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x100ea8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100ff1020"/></to>
    </wire>
    <wire loc="495:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x100eb6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101012020"/></to>
    </wire>
    <wire loc="564:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0TXD" scoped="" ref="0x100ec47f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fad748"/></to>
    </wire>
    <wire loc="563:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0STE" scoped="" ref="0x100ec6980"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fb2ca8"/></to>
    </wire>
    <wire loc="570:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0STE" scoped="" ref="0x100ed8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f9e748"/></to>
    </wire>
    <wire loc="587:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1SDA" scoped="" ref="0x100ef8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100ff63e0"/></to>
    </wire>
    <wire loc="600:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x100f01558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101042ca8"/></to>
    </wire>
    <wire loc="565:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0RXD" scoped="" ref="0x100ee0670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fa83e0"/></to>
    </wire>
    <wire loc="578:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1TXD" scoped="" ref="0x100ee8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fc4020"/></to>
    </wire>
    <wire loc="443:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x100e6c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f6e3e0"/></to>
    </wire>
    <wire loc="456:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x100e93568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fa3ca8"/></to>
    </wire>
    <wire loc="567:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0SOMI" scoped="" ref="0x100edc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fa83e0"/></to>
    </wire>
    <wire loc="493:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x100eba568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10101c748"/></to>
    </wire>
    <wire loc="461:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x100e8f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f993e0"/></to>
    </wire>
    <wire loc="474:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x100e99568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fcfca8"/></to>
    </wire>
    <wire loc="498:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x100ece568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1010273e0"/></to>
    </wire>
    <wire loc="597:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x100f06558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101042ca8"/></to>
    </wire>
    <wire loc="438:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x100e74950"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f456a8"/></to>
    </wire>
    <wire loc="451:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x100e80568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f77020"/></to>
    </wire>
    <wire loc="464:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x100e89568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fad748"/></to>
    </wire>
    <wire loc="477:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x100eb1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fe1020"/></to>
    </wire>
    <wire loc="569:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0CLK" scoped="" ref="0x100eda570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fb2ca8"/></to>
    </wire>
    <wire loc="591:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x100ef2558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1010173e0"/></to>
    </wire>
    <wire loc="482:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x100ead568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fd8748"/></to>
    </wire>
    <wire loc="583:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1CLK" scoped="" ref="0x100f00570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fedca8"/></to>
    </wire>
    <wire loc="577:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1STE" scoped="" ref="0x100eea570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fedca8"/></to>
    </wire>
    <wire loc="441:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x100e70568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f57ca8"/></to>
    </wire>
    <wire loc="454:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x100e79568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f8b3e0"/></to>
    </wire>
    <wire loc="467:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x100ea1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fc0ca8"/></to>
    </wire>
    <wire loc="581:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1SOMI" scoped="" ref="0x100ee2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fc0ca8"/></to>
    </wire>
    <wire loc="571:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0SIMO" scoped="" ref="0x100ed6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f993e0"/></to>
    </wire>
    <wire loc="576:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1CLK" scoped="" ref="0x100eec570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fd8748"/></to>
    </wire>
    <wire loc="595:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x100f0a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1010273e0"/></to>
    </wire>
    <wire loc="472:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x100e9d668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fb63e0"/></to>
    </wire>
    <wire loc="485:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x100ea6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fedca8"/></to>
    </wire>
    <wire loc="496:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x100eb4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10100eca8"/></to>
    </wire>
    <wire loc="444:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x100e6a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f68020"/></to>
    </wire>
    <wire loc="494:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x100eb8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1010173e0"/></to>
    </wire>
    <wire loc="449:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x100e84568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f81748"/></to>
    </wire>
    <wire loc="462:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x100e8d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f94020"/></to>
    </wire>
    <wire loc="475:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x100e97568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fca748"/></to>
    </wire>
    <wire loc="499:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x100ecc568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101022020"/></to>
    </wire>
    <wire loc="439:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x100e607f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f603e0"/></to>
    </wire>
    <wire loc="452:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x100e7d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f73ca8"/></to>
    </wire>
    <wire loc="465:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x100e87568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fa83e0"/></to>
    </wire>
    <wire loc="478:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x100eaf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fddca8"/></to>
    </wire>
    <wire loc="579:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1RXD" scoped="" ref="0x100ee6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100fc0ca8"/></to>
    </wire>
    <wire loc="586:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1SOMI" scoped="" ref="0x100efa580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100ff1020"/></to>
    </wire>
    <wire loc="588:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1SCL" scoped="" ref="0x100ef6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100ff1020"/></to>
    </wire>
    <wire loc="483:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x100eab568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100ff63e0"/></to>
    </wire>
    <wire loc="592:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x100f10558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101012020"/></to>
    </wire>
    <wire loc="599:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x100f03558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101022020"/></to>
    </wire>
    <wire loc="572:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0SOMI" scoped="" ref="0x100ed3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f94020"/></to>
    </wire>
    <wire loc="603:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x100f1d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100ffdca8"/></to>
    </wire>
    <wire loc="585:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1SIMO" scoped="" ref="0x100efc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100ff63e0"/></to>
    </wire>
    <wire loc="574:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0SCL" scoped="" ref="0x100eee570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x100f94020"/></to>
    </wire>
    <wire loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x1010d55b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1010cdd18"/></to>
    </wire>
    <wire loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x1010cdd18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101226020"/></to>
    </wire>
    <wire loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1010cd020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1011c6418"/></to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x1010e9338"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x101245c38"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1011c6418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10189c020"/></to>
    </wire>
    <wire loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x10124c208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1011bfd88"/></to>
    </wire>
    <wire loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1011e9020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1011c6c00"/></to>
    </wire>
    <wire loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1011c6c00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x101896830"/></to>
    </wire>
    <wire loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x101244e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1011419b0"/></to>
    </wire>
    <wire loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1011419b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x101176878"/></to>
    </wire>
    <wire loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10189c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1018c87a8"/></to>
    </wire>
    <wire loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x101891ce8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10189c808"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10189c808"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1018c7020"/></to>
    </wire>
    <wire loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x101893ad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1011419b0"/></to>
    </wire>
    <wire loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1018c3020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1018cd5e0"/></to>
    </wire>
    <wire loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1018cd5e0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1010f21c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1018c25b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1018ccbd8"/></to>
    </wire>
    <wire loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1018ccbd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1010f1ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1018c18c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1018ca020"/></to>
    </wire>
    <wire loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1018ca020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1010ee510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1010f21c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x100cd0020"/></to>
    </wire>
    <wire loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1010f1ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x100ccf710"/></to>
    </wire>
    <wire loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1010ee510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x100cdb558"/></to>
    </wire>
    <wire loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1010f21c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x100cd0020"/></to>
    </wire>
    <wire loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1010f1ce8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x100ccb060"/></to>
    </wire>
    <wire loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1010ee510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x100cd9120"/></to>
    </wire>
    <wire loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1010f21c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x100cd0020"/></to>
    </wire>
    <wire loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1010f1ce8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x100cca400"/></to>
    </wire>
    <wire loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1010ee510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x100cd9e40"/></to>
    </wire>
    <wire loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1010f21c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x100cd0020"/></to>
    </wire>
    <wire loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1010f1ce8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x100cdf898"/></to>
    </wire>
    <wire loc="77:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1010ee510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x100cd8b90"/></to>
    </wire>
    <wire loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1010f21c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x100cd0020"/></to>
    </wire>
    <wire loc="80:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1010f1ce8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x100cded30"/></to>
    </wire>
    <wire loc="81:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1010ee510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x100cd79f0"/></to>
    </wire>
    <wire loc="83:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1010f21c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x100cd0020"/></to>
    </wire>
    <wire loc="84:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1010f1ce8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x100cdc120"/></to>
    </wire>
    <wire loc="85:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1010ee510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x100cd6868"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x101184b10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10113f7e8"/></to>
    </wire>
    <wire loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10113f7e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x101160db8"/></to>
    </wire>
    <wire loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x101153d48"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x100cd0020"/></to>
    </wire>
    <wire loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x1011e6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100a12728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x101247478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100a12728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/MainC.nc">
      <documentation loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformP.nc">
      <module/>
    </component>
    <component qname="Msp430ClockC" loc="37:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PrintC" loc="87:PrintC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="29(HplMsp430GeneralIOC.P10):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="29(HplMsp430GeneralIOC.P11):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="29(HplMsp430GeneralIOC.P12):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="29(HplMsp430GeneralIOC.P13):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="29(HplMsp430GeneralIOC.P14):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="29(HplMsp430GeneralIOC.P15):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="29(HplMsp430GeneralIOC.P16):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="29(HplMsp430GeneralIOC.P17):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="29(HplMsp430GeneralIOC.P20):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="29(HplMsp430GeneralIOC.P21):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="29(HplMsp430GeneralIOC.P22):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="29(HplMsp430GeneralIOC.P23):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="29(HplMsp430GeneralIOC.P24):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="29(HplMsp430GeneralIOC.P25):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="29(HplMsp430GeneralIOC.P26):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="29(HplMsp430GeneralIOC.P27):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="29(HplMsp430GeneralIOC.P30):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="29(HplMsp430GeneralIOC.P31):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="29(HplMsp430GeneralIOC.P32):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="29(HplMsp430GeneralIOC.P33):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="29(HplMsp430GeneralIOC.P34):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="29(HplMsp430GeneralIOC.P35):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="29(HplMsp430GeneralIOC.P36):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="29(HplMsp430GeneralIOC.P37):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="29(HplMsp430GeneralIOC.P40):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="29(HplMsp430GeneralIOC.P41):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="29(HplMsp430GeneralIOC.P42):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="29(HplMsp430GeneralIOC.P43):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="29(HplMsp430GeneralIOC.P44):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="29(HplMsp430GeneralIOC.P45):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="29(HplMsp430GeneralIOC.P46):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="29(HplMsp430GeneralIOC.P47):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="29(HplMsp430GeneralIOC.P50):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="29(HplMsp430GeneralIOC.P51):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="29(HplMsp430GeneralIOC.P52):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="29(HplMsp430GeneralIOC.P53):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="29(HplMsp430GeneralIOC.P54):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="29(HplMsp430GeneralIOC.P55):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="29(HplMsp430GeneralIOC.P56):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="29(HplMsp430GeneralIOC.P57):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="29(HplMsp430GeneralIOC.P60):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="29(HplMsp430GeneralIOC.P61):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="29(HplMsp430GeneralIOC.P62):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="29(HplMsp430GeneralIOC.P63):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="29(HplMsp430GeneralIOC.P64):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="29(HplMsp430GeneralIOC.P65):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="29(HplMsp430GeneralIOC.P66):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="29(HplMsp430GeneralIOC.P67):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PrintAppC.TimerPrint" loc="44(PrintAppC.TimerPrint):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x100ce1020" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x100ce1398" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x100ce1720" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x100ce1a78" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x100ce1dd0" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x100cf7170" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x100cf74d8" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x100cf7840" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x100cf7bf0" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x100d33020" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x100d333d0" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIORenP" loc="29:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc" abstract="" safe="">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x100f1aac0" loc="30:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x100f1ae48" loc="31:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x100f17200" loc="32:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x100f17588" loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_ren_addr" ref="0x100f17910" loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x100f17c60" loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1011267f0" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1011267f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x101161810" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x101161810"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x101175110" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x101175110"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x101175878" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x101175878"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x101175c40" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x101175c40"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x101174418" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x101174418"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1011747c0" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x101172020" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x101172020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x101146bf0" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x101146bf0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10117d380" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10117d380"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10117d748" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10117d748"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10117c020" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10117c020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10117c3c8" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1011be068" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1011be068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10120d4e0" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10120d4e0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x10120d7f0" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x101243530" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x101243530"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x100c350e0" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x100c350e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100c35430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x100c37bc8" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x100c37bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x100c36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x100c46020" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x100c46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100c46370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x100c43500" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x100c43500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100c43850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x100c46dd0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x100c46dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100c43170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x100c43ba0" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x100c43ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100c42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x100c492b8" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x100c492b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x100c501a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x100c49790"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x100c49918"/>
        <function-ref name="initTimerA" scoped="" ref="0x100c49aa0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x100c49608"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x100c49c28"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x100c49db0"/>
        <function-ref name="initClocks" scoped="" ref="0x100c50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x100c51020" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x100c51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100c51370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x100c743c0" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x100c743c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x100c73330"/>
        <function-ref name="initTimerB" scoped="" ref="0x100c74898"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x100c74a20"/>
        <function-ref name="initTimerA" scoped="" ref="0x100c74ba8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x100c74710"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x100c74d30"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x100c73020"/>
        <function-ref name="initClocks" scoped="" ref="0x100c731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x100c73660" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x100c73660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x100c739b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x100c76d10" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x100c76d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100c740a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x100cb4588" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x100cb4588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100cb48d8"/>
        <function-ref name="getControl" scoped="" ref="0x100cb4a60"/>
        <function-ref name="enableEvents" scoped="" ref="0x100cb4be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100cb4d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100cc9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x100cc91a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100cc9330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100cc94b8"/>
        <function-ref name="setControl" scoped="" ref="0x100cc9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x100ccf710" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x100ccf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100ccfa60"/>
        <function-ref name="getControl" scoped="" ref="0x100ccfbe8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100ccfd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100ccd020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100ccd1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100ccd330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100ccd4b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100ccd640"/>
        <function-ref name="setControl" scoped="" ref="0x100ccd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x100cc10c0" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x100cc10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cc1410"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100cc1598"/>
        <function-ref name="captured" scoped="" ref="0x100cc1720"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100cc18a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100cc1a30"/>
        <function-ref name="setEdge" scoped="" ref="0x100cc1bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x100ce9868" loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x100ce9868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100ce9bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100ce9d40"/>
        <function-ref name="captured" scoped="" ref="0x100ce8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100ce81a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100ce8330"/>
        <function-ref name="setEdge" scoped="" ref="0x100ce84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x100cc7868" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x100cc7868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cc7bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x100cc7d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cc6020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cc61a8"/>
        <function-ref name="fired" scoped="" ref="0x100cc6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x100cd9e40" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x100cd9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cd81c0"/>
        <function-ref name="setEvent" scoped="" ref="0x100cd8348"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cd84d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cd8658"/>
        <function-ref name="fired" scoped="" ref="0x100cd87e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x100ce6868" loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x100ce6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100ce6bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100ce6d40"/>
        <function-ref name="captured" scoped="" ref="0x100ce5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100ce51a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100ce5330"/>
        <function-ref name="setEdge" scoped="" ref="0x100ce54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x100cdf898" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x100cdf898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100cdfbe8"/>
        <function-ref name="getControl" scoped="" ref="0x100cdfd70"/>
        <function-ref name="enableEvents" scoped="" ref="0x100cde020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100cde1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100cde330"/>
        <function-ref name="disableEvents" scoped="" ref="0x100cde4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100cde640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100cde7c8"/>
        <function-ref name="setControl" scoped="" ref="0x100cde950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x100cb5cd8" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x100cb5cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100cae0a0"/>
        <function-ref name="getControl" scoped="" ref="0x100cae228"/>
        <function-ref name="enableEvents" scoped="" ref="0x100cae3b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100cae538"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100cae6c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100cae848"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100cae9d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100caeb58"/>
        <function-ref name="setControl" scoped="" ref="0x100caece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x100ceb868" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x100ceb868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cebbb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100cebd40"/>
        <function-ref name="captured" scoped="" ref="0x100cea020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100cea1a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100cea330"/>
        <function-ref name="setEdge" scoped="" ref="0x100cea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x100cda3d0" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x100cda3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cda720"/>
        <function-ref name="setEvent" scoped="" ref="0x100cda8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cdaa30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cdabb8"/>
        <function-ref name="fired" scoped="" ref="0x100cdad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x100ccdba8" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x100ccdba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100ccc020"/>
        <function-ref name="getControl" scoped="" ref="0x100ccc1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100ccc330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100ccc4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100ccc640"/>
        <function-ref name="disableEvents" scoped="" ref="0x100ccc7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100ccc950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100cccad8"/>
        <function-ref name="setControl" scoped="" ref="0x100cccc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x100cc0020" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x100cc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cc0370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100cc04f8"/>
        <function-ref name="captured" scoped="" ref="0x100cc0680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100cc0808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100cc0990"/>
        <function-ref name="setEdge" scoped="" ref="0x100cc0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x100ce8868" loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x100ce8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100ce8bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100ce8d40"/>
        <function-ref name="captured" scoped="" ref="0x100ce7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100ce71a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100ce7330"/>
        <function-ref name="setEdge" scoped="" ref="0x100ce74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x100ccb060" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x100ccb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100ccb3b0"/>
        <function-ref name="getControl" scoped="" ref="0x100ccb538"/>
        <function-ref name="enableEvents" scoped="" ref="0x100ccb6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100ccb848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100ccb9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100ccbb58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100ccbce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100ccbe68"/>
        <function-ref name="setControl" scoped="" ref="0x100cca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x100cc66e0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x100cc66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cc6a30"/>
        <function-ref name="setEvent" scoped="" ref="0x100cc6bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cc6d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cc2020"/>
        <function-ref name="fired" scoped="" ref="0x100cc21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x100cbd5e8" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x100cbd5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100cbd938"/>
        <function-ref name="setClockSource" scoped="" ref="0x100cbdac0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100cbdc48"/>
        <function-ref name="get" scoped="" ref="0x100cbddd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100caf020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100caf1a8"/>
        <function-ref name="getMode" scoped="" ref="0x100caf330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100caf4b8"/>
        <function-ref name="overflow" scoped="" ref="0x100caf640"/>
        <function-ref name="setMode" scoped="" ref="0x100caf7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100caf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x100cd8b90" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x100cd8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cd7020"/>
        <function-ref name="setEvent" scoped="" ref="0x100cd71a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cd7330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cd74b8"/>
        <function-ref name="fired" scoped="" ref="0x100cd7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x100cbc120" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x100cbc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100cbc470"/>
        <function-ref name="getControl" scoped="" ref="0x100cbc5f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100cbc780"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100cbc908"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100cbca90"/>
        <function-ref name="disableEvents" scoped="" ref="0x100cbcc18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100cbcda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100cb4020"/>
        <function-ref name="setControl" scoped="" ref="0x100cb41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x100cded30" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x100cded30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100cdd0d8"/>
        <function-ref name="getControl" scoped="" ref="0x100cdd260"/>
        <function-ref name="enableEvents" scoped="" ref="0x100cdd3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100cdd570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100cdd6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100cdd880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100cdda08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100cddb90"/>
        <function-ref name="setControl" scoped="" ref="0x100cddd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x100cd11b0" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x100cd11b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cd1500"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100cd1688"/>
        <function-ref name="captured" scoped="" ref="0x100cd1810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100cd1998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100cd1b20"/>
        <function-ref name="setEdge" scoped="" ref="0x100cd1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x100cea868" loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x100cea868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100ceabb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100cead40"/>
        <function-ref name="captured" scoped="" ref="0x100ce9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100ce91a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100ce9330"/>
        <function-ref name="setEdge" scoped="" ref="0x100ce94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x100cc3a00" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x100cc3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cc3d50"/>
        <function-ref name="setEvent" scoped="" ref="0x100cc7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cc71a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cc7330"/>
        <function-ref name="fired" scoped="" ref="0x100cc74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x100cd9120" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x100cd9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cd9470"/>
        <function-ref name="setEvent" scoped="" ref="0x100cd95f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cd9780"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cd9908"/>
        <function-ref name="fired" scoped="" ref="0x100cd9a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x100ce7868" loc="70:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x100ce7868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100ce7bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100ce7d40"/>
        <function-ref name="captured" scoped="" ref="0x100ce6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100ce61a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100ce6330"/>
        <function-ref name="setEdge" scoped="" ref="0x100ce64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x100cca400" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x100cca400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100cca750"/>
        <function-ref name="getControl" scoped="" ref="0x100cca8d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100ccaa60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100ccabe8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100ccad70"/>
        <function-ref name="disableEvents" scoped="" ref="0x100cdf020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100cdf1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100cdf330"/>
        <function-ref name="setControl" scoped="" ref="0x100cdf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x100cd0020" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x100cd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100cd0370"/>
        <function-ref name="setClockSource" scoped="" ref="0x100cd04f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100cd0680"/>
        <function-ref name="get" scoped="" ref="0x100cd0808"/>
        <function-ref name="disableEvents" scoped="" ref="0x100cd0990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100cd0b18"/>
        <function-ref name="getMode" scoped="" ref="0x100cd0ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100cd0e28"/>
        <function-ref name="overflow" scoped="" ref="0x100ccf020"/>
        <function-ref name="setMode" scoped="" ref="0x100ccf1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100ccf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x100cd79f0" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x100cd79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cd7d40"/>
        <function-ref name="setEvent" scoped="" ref="0x100cd6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cd61a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cd6330"/>
        <function-ref name="fired" scoped="" ref="0x100cd64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x100cd5868" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x100cd5868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cd5bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100cd5d40"/>
        <function-ref name="captured" scoped="" ref="0x100ceb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100ceb1a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100ceb330"/>
        <function-ref name="setEdge" scoped="" ref="0x100ceb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x100cd6868" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x100cd6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cd6db8"/>
        <function-ref name="setEvent" scoped="" ref="0x100cd5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cd51a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cd5330"/>
        <function-ref name="fired" scoped="" ref="0x100cd54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x100cdb558" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x100cdb558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100cdb8a8"/>
        <function-ref name="setEvent" scoped="" ref="0x100cdba30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100cdbbb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100cdbd40"/>
        <function-ref name="fired" scoped="" ref="0x100cda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x100cdc120" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x100cdc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100cdc470"/>
        <function-ref name="getControl" scoped="" ref="0x100cdc5f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100cdc780"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100cdc908"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100cdca90"/>
        <function-ref name="disableEvents" scoped="" ref="0x100cdcc18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100cdcda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100cdb020"/>
        <function-ref name="setControl" scoped="" ref="0x100cdb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x100d10e70" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x100d10e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d261e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x100d10858" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x100d10858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d10ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x100d264b0" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x100d264b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d26800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x100d10220" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100d10220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d10590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x100d12a60" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100d12a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100d12db0"/>
        <function-ref name="setClockSource" scoped="" ref="0x100d11020"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d111a8"/>
        <function-ref name="get" scoped="" ref="0x100d11330"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d114b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d11640"/>
        <function-ref name="getMode" scoped="" ref="0x100d117c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d11950"/>
        <function-ref name="overflow" scoped="" ref="0x100d11ad8"/>
        <function-ref name="setMode" scoped="" ref="0x100d11c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100d11de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x100d20900" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x100d20900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d20c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x100d202e8" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x100d202e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d20638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x100d1f020" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x100d1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d1f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x100d21bb0" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100d21bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x100d223d0" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100d223d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100d22720"/>
        <function-ref name="setClockSource" scoped="" ref="0x100d228a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d22a30"/>
        <function-ref name="get" scoped="" ref="0x100d22bb8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d22d40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d21020"/>
        <function-ref name="getMode" scoped="" ref="0x100d211a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d21330"/>
        <function-ref name="overflow" scoped="" ref="0x100d214b8"/>
        <function-ref name="setMode" scoped="" ref="0x100d21640"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100d217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100d672e8" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100d672e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d67638"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100d677c0"/>
        <function-ref name="captured" scoped="" ref="0x100d67948"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d67ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d67c58"/>
        <function-ref name="setEdge" scoped="" ref="0x100d67de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100d69210" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100d69210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100d69560"/>
        <function-ref name="getControl" scoped="" ref="0x100d696e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d69870"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100d699f8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100d69b80"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d69d08"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100d68020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100d681a8"/>
        <function-ref name="setControl" scoped="" ref="0x100d68330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100d65780" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100d65780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d65ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100d685f8" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100d685f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d68948"/>
        <function-ref name="setEvent" scoped="" ref="0x100d68ad0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100d68c58"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100d68de0"/>
        <function-ref name="fired" scoped="" ref="0x100d67020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100d66100" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100d66100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100d66450"/>
        <function-ref name="setClockSource" scoped="" ref="0x100d665d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d66760"/>
        <function-ref name="get" scoped="" ref="0x100d668e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d66a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d66bf8"/>
        <function-ref name="getMode" scoped="" ref="0x100d66d80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d65020"/>
        <function-ref name="overflow" scoped="" ref="0x100d651a8"/>
        <function-ref name="setMode" scoped="" ref="0x100d65330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100d654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100d7a470" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100d7a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d7a7c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100d7a948"/>
        <function-ref name="captured" scoped="" ref="0x100d7aad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d7ac58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d7ade0"/>
        <function-ref name="setEdge" scoped="" ref="0x100d78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100d7c3d8" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100d7c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100d7c728"/>
        <function-ref name="getControl" scoped="" ref="0x100d7c8b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d7ca38"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100d7cbc0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100d7cd48"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d7b020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100d7b1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100d7b330"/>
        <function-ref name="setControl" scoped="" ref="0x100d7b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100d77908" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100d77908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d77c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100d7b780" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100d7b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d7bad0"/>
        <function-ref name="setEvent" scoped="" ref="0x100d7bc58"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100d7bde0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100d7a020"/>
        <function-ref name="fired" scoped="" ref="0x100d7a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100d782e8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100d782e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100d78638"/>
        <function-ref name="setClockSource" scoped="" ref="0x100d787c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d78948"/>
        <function-ref name="get" scoped="" ref="0x100d78ad0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d78c58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d78de0"/>
        <function-ref name="getMode" scoped="" ref="0x100d77020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d771a8"/>
        <function-ref name="overflow" scoped="" ref="0x100d77330"/>
        <function-ref name="setMode" scoped="" ref="0x100d774b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100d77640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100d72780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100d72780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d72ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100d72c58"/>
        <function-ref name="captured" scoped="" ref="0x100d72de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d71020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d711a8"/>
        <function-ref name="setEdge" scoped="" ref="0x100d71330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100d746a0" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100d746a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100d749f0"/>
        <function-ref name="getControl" scoped="" ref="0x100d74b78"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d74d00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100d73020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100d731a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d73330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100d734b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100d73640"/>
        <function-ref name="setControl" scoped="" ref="0x100d737c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100d8ac18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100d8ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100d73a90" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100d73a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d73de0"/>
        <function-ref name="setEvent" scoped="" ref="0x100d72020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100d721a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100d72330"/>
        <function-ref name="fired" scoped="" ref="0x100d724b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100d715f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100d715f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100d71948"/>
        <function-ref name="setClockSource" scoped="" ref="0x100d71ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d71c58"/>
        <function-ref name="get" scoped="" ref="0x100d71de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d8a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d8a1a8"/>
        <function-ref name="getMode" scoped="" ref="0x100d8a330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d8a4b8"/>
        <function-ref name="overflow" scoped="" ref="0x100d8a640"/>
        <function-ref name="setMode" scoped="" ref="0x100d8a7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100d8a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100d85780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100d85780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d85ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100d85c58"/>
        <function-ref name="captured" scoped="" ref="0x100d85de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d83020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d831a8"/>
        <function-ref name="setEdge" scoped="" ref="0x100d83330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100d87820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100d87820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100d87b70"/>
        <function-ref name="getControl" scoped="" ref="0x100d87cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d87e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100d86030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100d861b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d86340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100d864c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100d86650"/>
        <function-ref name="setControl" scoped="" ref="0x100d867d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100d82c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100d82c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100d86aa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100d86aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d86df0"/>
        <function-ref name="setEvent" scoped="" ref="0x100d85020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100d851a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100d85330"/>
        <function-ref name="fired" scoped="" ref="0x100d854b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100d835f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100d835f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100d83948"/>
        <function-ref name="setClockSource" scoped="" ref="0x100d83ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d83c58"/>
        <function-ref name="get" scoped="" ref="0x100d83de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d82020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d821a8"/>
        <function-ref name="getMode" scoped="" ref="0x100d82330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d824b8"/>
        <function-ref name="overflow" scoped="" ref="0x100d82640"/>
        <function-ref name="setMode" scoped="" ref="0x100d827c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100d82950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100d97780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100d97780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d97ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100d97c58"/>
        <function-ref name="captured" scoped="" ref="0x100d97de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d96020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d961a8"/>
        <function-ref name="setEdge" scoped="" ref="0x100d96330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100d7f820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100d7f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100d7fb70"/>
        <function-ref name="getControl" scoped="" ref="0x100d7fcf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d7fe80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100d7e030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100d7e1b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d7e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100d7e4c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100d7e650"/>
        <function-ref name="setControl" scoped="" ref="0x100d7e7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100d95c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100d95c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100d7eaa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100d7eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d7edf0"/>
        <function-ref name="setEvent" scoped="" ref="0x100d97020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100d971a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100d97330"/>
        <function-ref name="fired" scoped="" ref="0x100d974b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100d965f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100d965f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100d96948"/>
        <function-ref name="setClockSource" scoped="" ref="0x100d96ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d96c58"/>
        <function-ref name="get" scoped="" ref="0x100d96de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d95020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d951a8"/>
        <function-ref name="getMode" scoped="" ref="0x100d95330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d954b8"/>
        <function-ref name="overflow" scoped="" ref="0x100d95640"/>
        <function-ref name="setMode" scoped="" ref="0x100d957c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100d95950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100d90780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100d90780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d90ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100d90c58"/>
        <function-ref name="captured" scoped="" ref="0x100d90de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d8f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d8f1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x100d8f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100d92820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100d92820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100d92b70"/>
        <function-ref name="getControl" scoped="" ref="0x100d92cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d92e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100d91030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100d911b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d91340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100d914c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100d91650"/>
        <function-ref name="setControl" scoped="" ref="0x100d917d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100d8dc18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100d8dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100d91aa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100d91aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d91df0"/>
        <function-ref name="setEvent" scoped="" ref="0x100d90020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100d901a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100d90330"/>
        <function-ref name="fired" scoped="" ref="0x100d904b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100d8f5f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100d8f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100d8f948"/>
        <function-ref name="setClockSource" scoped="" ref="0x100d8fad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d8fc58"/>
        <function-ref name="get" scoped="" ref="0x100d8fde0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d8d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d8d1a8"/>
        <function-ref name="getMode" scoped="" ref="0x100d8d330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d8d4b8"/>
        <function-ref name="overflow" scoped="" ref="0x100d8d640"/>
        <function-ref name="setMode" scoped="" ref="0x100d8d7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100d8d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100da2780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100da2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100da2ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100da2c58"/>
        <function-ref name="captured" scoped="" ref="0x100da2de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100da1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100da11a8"/>
        <function-ref name="setEdge" scoped="" ref="0x100da1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100da4820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100da4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100da4b70"/>
        <function-ref name="getControl" scoped="" ref="0x100da4cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100da4e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100da3030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100da31b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100da3340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100da34c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100da3650"/>
        <function-ref name="setControl" scoped="" ref="0x100da37d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100da0c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100da0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100d9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100da3aa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100da3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100da3df0"/>
        <function-ref name="setEvent" scoped="" ref="0x100da2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100da21a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100da2330"/>
        <function-ref name="fired" scoped="" ref="0x100da24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100da15f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100da15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100da1948"/>
        <function-ref name="setClockSource" scoped="" ref="0x100da1ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100da1c58"/>
        <function-ref name="get" scoped="" ref="0x100da1de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100da0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100da01a8"/>
        <function-ref name="getMode" scoped="" ref="0x100da0330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100da04b8"/>
        <function-ref name="overflow" scoped="" ref="0x100da0640"/>
        <function-ref name="setMode" scoped="" ref="0x100da07c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100da0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100d9b780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100d9b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d9bad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100d9bc58"/>
        <function-ref name="captured" scoped="" ref="0x100d9bde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d9a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d9a1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x100d9a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100d9d820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100d9d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100d9db70"/>
        <function-ref name="getControl" scoped="" ref="0x100d9dcf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d9de80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100d9c030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100d9c1b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d9c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100d9c4c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100d9c650"/>
        <function-ref name="setControl" scoped="" ref="0x100d9c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100d98c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100d98c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100db1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100d9caa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100d9caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100d9cdf0"/>
        <function-ref name="setEvent" scoped="" ref="0x100d9b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100d9b1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100d9b330"/>
        <function-ref name="fired" scoped="" ref="0x100d9b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100d9a5f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100d9a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100d9a948"/>
        <function-ref name="setClockSource" scoped="" ref="0x100d9aad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100d9ac58"/>
        <function-ref name="get" scoped="" ref="0x100d9ade0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100d98020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100d981a8"/>
        <function-ref name="getMode" scoped="" ref="0x100d98330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100d984b8"/>
        <function-ref name="overflow" scoped="" ref="0x100d98640"/>
        <function-ref name="setMode" scoped="" ref="0x100d987c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100d98950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100dad780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100dad780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100dadad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100dadc58"/>
        <function-ref name="captured" scoped="" ref="0x100dadde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100dac020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100dac1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x100dac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100daf820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100daf820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100dafb70"/>
        <function-ref name="getControl" scoped="" ref="0x100dafcf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100dafe80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100dae030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100dae1b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100dae340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100dae4c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100dae650"/>
        <function-ref name="setControl" scoped="" ref="0x100dae7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100dabc18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100dabc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100daa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100daeaa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100daeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100daedf0"/>
        <function-ref name="setEvent" scoped="" ref="0x100dad020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100dad1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100dad330"/>
        <function-ref name="fired" scoped="" ref="0x100dad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100dac5f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100dac5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100dac948"/>
        <function-ref name="setClockSource" scoped="" ref="0x100dacad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100dacc58"/>
        <function-ref name="get" scoped="" ref="0x100dacde0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100dab020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100dab1a8"/>
        <function-ref name="getMode" scoped="" ref="0x100dab330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100dab4b8"/>
        <function-ref name="overflow" scoped="" ref="0x100dab640"/>
        <function-ref name="setMode" scoped="" ref="0x100dab7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100dab950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x100da6780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x100da6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100da6ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x100da6c58"/>
        <function-ref name="captured" scoped="" ref="0x100da6de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100da5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100da51a8"/>
        <function-ref name="setEdge" scoped="" ref="0x100da5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x100da8820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x100da8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x100da8b70"/>
        <function-ref name="getControl" scoped="" ref="0x100da8cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x100da8e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x100da7030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x100da71b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x100da7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x100da74c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x100da7650"/>
        <function-ref name="setControl" scoped="" ref="0x100da77d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x100dbec18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x100dbec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100dbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x100da7aa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x100da7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x100da7df0"/>
        <function-ref name="setEvent" scoped="" ref="0x100da6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x100da61a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x100da6330"/>
        <function-ref name="fired" scoped="" ref="0x100da64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x100da55f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x100da55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x100da5948"/>
        <function-ref name="setClockSource" scoped="" ref="0x100da5ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x100da5c58"/>
        <function-ref name="get" scoped="" ref="0x100da5de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x100dbe020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x100dbe1a8"/>
        <function-ref name="getMode" scoped="" ref="0x100dbe330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x100dbe4b8"/>
        <function-ref name="overflow" scoped="" ref="0x100dbe640"/>
        <function-ref name="setMode" scoped="" ref="0x100dbe7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x100dbe950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x100db7768" loc="7:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x100db7768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100db7ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x100db80e8" loc="4:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x100db80e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100db8438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x100db8830" loc="5:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x100db8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100db8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x100db7020" loc="6:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x100db7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x100db7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x100c252b0" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x100c252b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x100c25600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x100b4f698" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x100b4f698"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x100b4f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x100c28b08" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x100c28b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x100c28e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x100df6140" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x100df6140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100df6490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x100c488c8" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x100c488c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x100c48c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x100df79f8" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x100df79f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100df7d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x100df7020" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x100df7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100df7370"/>
        <function-ref name="taskLoop" scoped="" ref="0x100df74f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x100df7680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x100a12728" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x100a12728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x100a12a78"/>
        <function-ref name="runTask" scoped="" ref="0x100a12c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x100a00c20" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x100a00c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1009c9020"/>
        <function-ref name="taskLoop" scoped="" ref="0x1009c91a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x1009c9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x100c084d0" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x100c084d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x100c08820"/>
        <function-ref name="runTask" scoped="" ref="0x100c089a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x100c05998" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x100c05998"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x100c05ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x100c09660" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x100c09660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100c099b0"/>
        <function-ref name="taskLoop" scoped="" ref="0x100c09b38"/>
        <function-ref name="runNextTask" scoped="" ref="0x100c09cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x100e0c020" loc="89:PrintC.nc">
      <component-ref qname="PrintC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x100e0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x100e0c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerPrint" ref="0x100e2c810" loc="91:PrintC.nc">
      <component-ref qname="PrintC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerPrint" scoped="" ref="0x100e2c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x100e2aa18"/>
        <function-ref name="fired" scoped="" ref="0x100e1b158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x100e1be48"/>
        <function-ref name="isOneShot" scoped="" ref="0x100e1b9f8"/>
        <function-ref name="getdt" scoped="" ref="0x100e292e8"/>
        <function-ref name="gett0" scoped="" ref="0x100e2ae68"/>
        <function-ref name="isRunning" scoped="" ref="0x100e1b5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x100e1c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x100e2a448"/>
        <function-ref name="startOneShot" scoped="" ref="0x100e1c830"/>
        <function-ref name="stop" scoped="" ref="0x100e1ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x100e1dc38" loc="90:PrintC.nc">
      <component-ref qname="PrintC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x100e1dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x100e0b020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x100e0b1a8"/>
        <function-ref name="led1On" scoped="" ref="0x100e0b330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x100e0b4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x100e0b640"/>
        <function-ref name="get" scoped="" ref="0x100e0b7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x100e0b950"/>
        <function-ref name="led2Off" scoped="" ref="0x100e0a020"/>
        <function-ref name="set" scoped="" ref="0x100e0bad8"/>
        <function-ref name="led0On" scoped="" ref="0x100e0bc60"/>
        <function-ref name="led2On" scoped="" ref="0x100e0bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x100ded580" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x100ded580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x100ded8d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x100deda58"/>
        <function-ref name="led1On" scoped="" ref="0x100dedbe0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x100dedd68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x100e3c020"/>
        <function-ref name="get" scoped="" ref="0x100e3c1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x100e3c330"/>
        <function-ref name="led2Off" scoped="" ref="0x100e3c950"/>
        <function-ref name="set" scoped="" ref="0x100e3c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x100e3c640"/>
        <function-ref name="led2On" scoped="" ref="0x100e3c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x100e36110" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x100e36110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e36460"/>
        <function-ref name="isInput" scoped="" ref="0x100e365e8"/>
        <function-ref name="toggle" scoped="" ref="0x100e36770"/>
        <function-ref name="isOutput" scoped="" ref="0x100e368f8"/>
        <function-ref name="get" scoped="" ref="0x100e36a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e36c08"/>
        <function-ref name="set" scoped="" ref="0x100e36d90"/>
        <function-ref name="clr" scoped="" ref="0x100e35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x100e3b858" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x100e3b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100e3bba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x100e35338" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x100e35338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e35688"/>
        <function-ref name="isInput" scoped="" ref="0x100e35810"/>
        <function-ref name="toggle" scoped="" ref="0x100e35998"/>
        <function-ref name="isOutput" scoped="" ref="0x100e35b20"/>
        <function-ref name="get" scoped="" ref="0x100e35ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e35e30"/>
        <function-ref name="set" scoped="" ref="0x100e4c020"/>
        <function-ref name="clr" scoped="" ref="0x100e4c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x100e3be20" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x100e3be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x100e381a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x100e38330"/>
        <function-ref name="led1On" scoped="" ref="0x100e384b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x100e38640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x100e387c8"/>
        <function-ref name="get" scoped="" ref="0x100e38950"/>
        <function-ref name="led1Off" scoped="" ref="0x100e38ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x100e371a8"/>
        <function-ref name="set" scoped="" ref="0x100e38c60"/>
        <function-ref name="led0On" scoped="" ref="0x100e38de8"/>
        <function-ref name="led2On" scoped="" ref="0x100e37020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x100e4c4c0" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x100e4c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e4c810"/>
        <function-ref name="isInput" scoped="" ref="0x100e4c998"/>
        <function-ref name="toggle" scoped="" ref="0x100e4cb20"/>
        <function-ref name="isOutput" scoped="" ref="0x100e4cca8"/>
        <function-ref name="get" scoped="" ref="0x100e4ce30"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e4b020"/>
        <function-ref name="set" scoped="" ref="0x100e4b1a8"/>
        <function-ref name="clr" scoped="" ref="0x100e4b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x100e39a78" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x100e39a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e39dc8"/>
        <function-ref name="isInput" scoped="" ref="0x100e68020"/>
        <function-ref name="toggle" scoped="" ref="0x100e681a8"/>
        <function-ref name="isOutput" scoped="" ref="0x100e68330"/>
        <function-ref name="get" scoped="" ref="0x100e684b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e68640"/>
        <function-ref name="set" scoped="" ref="0x100e687c8"/>
        <function-ref name="clr" scoped="" ref="0x100e68950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x100e68ca8" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x100e68ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e67020"/>
        <function-ref name="isInput" scoped="" ref="0x100e671a8"/>
        <function-ref name="toggle" scoped="" ref="0x100e67330"/>
        <function-ref name="isOutput" scoped="" ref="0x100e674b8"/>
        <function-ref name="get" scoped="" ref="0x100e67640"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e677c8"/>
        <function-ref name="set" scoped="" ref="0x100e67950"/>
        <function-ref name="clr" scoped="" ref="0x100e67ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x100e65020" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x100e65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100e65370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x100e67e30" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x100e67e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e661a8"/>
        <function-ref name="isInput" scoped="" ref="0x100e66330"/>
        <function-ref name="toggle" scoped="" ref="0x100e664b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100e66640"/>
        <function-ref name="get" scoped="" ref="0x100e667c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e66950"/>
        <function-ref name="set" scoped="" ref="0x100e66ad8"/>
        <function-ref name="clr" scoped="" ref="0x100e66c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x100e6e568" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x100e6e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e6e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e6ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e6ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e6ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e6d020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e6d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e6d330"/>
        <function-ref name="get" scoped="" ref="0x100e6d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e6d640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e6d7c8"/>
        <function-ref name="set" scoped="" ref="0x100e6d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e6dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e6dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e6c020"/>
        <function-ref name="clr" scoped="" ref="0x100e6c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x100e95568" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x100e95568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e958b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e95a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e95bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e95d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e94020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e941a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e94330"/>
        <function-ref name="get" scoped="" ref="0x100e944b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e94640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e947c8"/>
        <function-ref name="set" scoped="" ref="0x100e94950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e94ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e94c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e93020"/>
        <function-ref name="clr" scoped="" ref="0x100e931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x100f08558" loc="210:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x100f08558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f088a8"/>
        <function-ref name="isInput" scoped="" ref="0x100f08a30"/>
        <function-ref name="setResistor" scoped="" ref="0x100f08bb8"/>
        <function-ref name="toggle" scoped="" ref="0x100f08d40"/>
        <function-ref name="isOutput" scoped="" ref="0x100f07020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f07330"/>
        <function-ref name="get" scoped="" ref="0x100f074b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f07640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f077c8"/>
        <function-ref name="set" scoped="" ref="0x100f07950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f07ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f07c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f06020"/>
        <function-ref name="clr" scoped="" ref="0x100f061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1STE" ref="0x100efe570" loc="198:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1STE" scoped="" ref="0x100efe570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100efe8c0"/>
        <function-ref name="isInput" scoped="" ref="0x100efea48"/>
        <function-ref name="setResistor" scoped="" ref="0x100efebd0"/>
        <function-ref name="toggle" scoped="" ref="0x100efed58"/>
        <function-ref name="isOutput" scoped="" ref="0x100efd020"/>
        <function-ref name="getResistor" scoped="" ref="0x100efd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100efd330"/>
        <function-ref name="get" scoped="" ref="0x100efd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100efd640"/>
        <function-ref name="getRaw" scoped="" ref="0x100efd7c8"/>
        <function-ref name="set" scoped="" ref="0x100efd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100efdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100efdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100efc020"/>
        <function-ref name="clr" scoped="" ref="0x100efc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x100e91568" loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x100e91568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e918b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e91a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e91bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e91d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e90020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e901a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e90330"/>
        <function-ref name="get" scoped="" ref="0x100e904b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e90640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e907c8"/>
        <function-ref name="set" scoped="" ref="0x100e90950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e90ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e90c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e8f020"/>
        <function-ref name="clr" scoped="" ref="0x100e8f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x100e9b568" loc="84:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x100e9b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e9b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e9ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e9bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e9bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e9a020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e9a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e9a330"/>
        <function-ref name="get" scoped="" ref="0x100e9a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e9a640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e9a7c8"/>
        <function-ref name="set" scoped="" ref="0x100e9a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e9aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e9ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e99020"/>
        <function-ref name="clr" scoped="" ref="0x100e991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x100ec2568" loc="97:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x100ec2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ec28b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ec2a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ec2bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ec2d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ec1020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ec11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ec1330"/>
        <function-ref name="get" scoped="" ref="0x100ec14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ec1640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ec17c8"/>
        <function-ref name="set" scoped="" ref="0x100ec1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ec1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ec1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ec0020"/>
        <function-ref name="clr" scoped="" ref="0x100ec01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x100ed0568" loc="108:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x100ed0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ed08b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ed0a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ed0bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ed0d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ecf020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ecf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ecf330"/>
        <function-ref name="get" scoped="" ref="0x100ecf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ecf640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ecf7c8"/>
        <function-ref name="set" scoped="" ref="0x100ecf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ecfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ecfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ece020"/>
        <function-ref name="clr" scoped="" ref="0x100ece1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x100ef4558" loc="204:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x100ef4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ef48a8"/>
        <function-ref name="isInput" scoped="" ref="0x100ef4a30"/>
        <function-ref name="setResistor" scoped="" ref="0x100ef4bb8"/>
        <function-ref name="toggle" scoped="" ref="0x100ef4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x100ef3020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ef31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ef3330"/>
        <function-ref name="get" scoped="" ref="0x100ef34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ef3640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ef37c8"/>
        <function-ref name="set" scoped="" ref="0x100ef3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ef3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ef3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ef2020"/>
        <function-ref name="clr" scoped="" ref="0x100ef21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x100f1f560" loc="216:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x100f1f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f1f8b0"/>
        <function-ref name="isInput" scoped="" ref="0x100f1fa38"/>
        <function-ref name="setResistor" scoped="" ref="0x100f1fbc0"/>
        <function-ref name="toggle" scoped="" ref="0x100f1fd48"/>
        <function-ref name="isOutput" scoped="" ref="0x100f1e020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f1e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f1e330"/>
        <function-ref name="get" scoped="" ref="0x100f1e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f1e640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f1e7c8"/>
        <function-ref name="set" scoped="" ref="0x100f1e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f1ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f1ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f1d020"/>
        <function-ref name="clr" scoped="" ref="0x100f1d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x100e86568" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x100e86568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e868b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e86a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e86bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e86d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e85020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e85330"/>
        <function-ref name="get" scoped="" ref="0x100e854b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e85640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e857c8"/>
        <function-ref name="set" scoped="" ref="0x100e85950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e85ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e85c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e84020"/>
        <function-ref name="clr" scoped="" ref="0x100e841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0CLK" ref="0x100ec85d0" loc="176:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0CLK" scoped="" ref="0x100ec85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ec8d20"/>
        <function-ref name="isInput" scoped="" ref="0x100ec7020"/>
        <function-ref name="setResistor" scoped="" ref="0x100ec71a8"/>
        <function-ref name="toggle" scoped="" ref="0x100ec7330"/>
        <function-ref name="isOutput" scoped="" ref="0x100ec74b8"/>
        <function-ref name="getResistor" scoped="" ref="0x100ec7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ec77c8"/>
        <function-ref name="get" scoped="" ref="0x100ec7950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ec7ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x100ec7c60"/>
        <function-ref name="set" scoped="" ref="0x100ec7de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ec6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ec61a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ec6430"/>
        <function-ref name="clr" scoped="" ref="0x100ec65b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1SIMO" ref="0x100ee4580" loc="194:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1SIMO" scoped="" ref="0x100ee4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ee48d0"/>
        <function-ref name="isInput" scoped="" ref="0x100ee4a58"/>
        <function-ref name="setResistor" scoped="" ref="0x100ee4be0"/>
        <function-ref name="toggle" scoped="" ref="0x100ee4d68"/>
        <function-ref name="isOutput" scoped="" ref="0x100ee3020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ee31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ee3330"/>
        <function-ref name="get" scoped="" ref="0x100ee34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ee3640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ee37c8"/>
        <function-ref name="set" scoped="" ref="0x100ee3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ee3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ee3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ee2020"/>
        <function-ref name="clr" scoped="" ref="0x100ee21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x100e82568" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x100e82568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e828b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e82a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e82bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e82d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e81020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e81330"/>
        <function-ref name="get" scoped="" ref="0x100e814b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e81640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e817c8"/>
        <function-ref name="set" scoped="" ref="0x100e81950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e81ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e81c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e80020"/>
        <function-ref name="clr" scoped="" ref="0x100e801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x100e8b568" loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x100e8b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e8b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e8ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e8bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e8bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e8a020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e8a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e8a330"/>
        <function-ref name="get" scoped="" ref="0x100e8a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e8a640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e8a7c8"/>
        <function-ref name="set" scoped="" ref="0x100e8a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e8aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e8ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e89020"/>
        <function-ref name="clr" scoped="" ref="0x100e891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x100eb3568" loc="87:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x100eb3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eb38b8"/>
        <function-ref name="isInput" scoped="" ref="0x100eb3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100eb3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eb3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100eb2020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eb21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eb2330"/>
        <function-ref name="get" scoped="" ref="0x100eb24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eb2640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eb27c8"/>
        <function-ref name="set" scoped="" ref="0x100eb2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eb2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eb2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eb1020"/>
        <function-ref name="clr" scoped="" ref="0x100eb11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x100ebc568" loc="100:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x100ebc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ebc8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ebca40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ebcbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ebcd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ebb020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ebb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ebb330"/>
        <function-ref name="get" scoped="" ref="0x100ebb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ebb640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ebb7c8"/>
        <function-ref name="set" scoped="" ref="0x100ebb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ebbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ebbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eba020"/>
        <function-ref name="clr" scoped="" ref="0x100eba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x100eca568" loc="111:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x100eca568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eca8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ecaa40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ecabc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ecad50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ec9020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ec91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ec9330"/>
        <function-ref name="get" scoped="" ref="0x100ec94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ec9640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ec97c8"/>
        <function-ref name="set" scoped="" ref="0x100ec9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ec9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ec9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ec8020"/>
        <function-ref name="clr" scoped="" ref="0x100ec81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x100e72668" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x100e72668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e729b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e72b40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e72cc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e72e50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e71020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e71330"/>
        <function-ref name="get" scoped="" ref="0x100e714b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e71640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e717c8"/>
        <function-ref name="set" scoped="" ref="0x100e71950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e71ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e71c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e70020"/>
        <function-ref name="clr" scoped="" ref="0x100e701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x100e7b568" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x100e7b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e7b9b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e7bb40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e7bcc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e7be50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e7a020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e7a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e7a330"/>
        <function-ref name="get" scoped="" ref="0x100e7a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e7a640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e7a7c8"/>
        <function-ref name="set" scoped="" ref="0x100e7a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e7aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e7ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e79020"/>
        <function-ref name="clr" scoped="" ref="0x100e791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x100ea3568" loc="77:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x100ea3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ea38b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ea3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ea3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ea3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ea2020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ea21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ea2330"/>
        <function-ref name="get" scoped="" ref="0x100ea24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ea2640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ea27c8"/>
        <function-ref name="set" scoped="" ref="0x100ea2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ea2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ea2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ea1020"/>
        <function-ref name="clr" scoped="" ref="0x100ea11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SDA" ref="0x100ef0570" loc="187:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SDA" scoped="" ref="0x100ef0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ef08c0"/>
        <function-ref name="isInput" scoped="" ref="0x100ef0a48"/>
        <function-ref name="setResistor" scoped="" ref="0x100ef0bd0"/>
        <function-ref name="toggle" scoped="" ref="0x100ef0d58"/>
        <function-ref name="isOutput" scoped="" ref="0x100eef020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eef330"/>
        <function-ref name="get" scoped="" ref="0x100eef4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eef640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eef7c8"/>
        <function-ref name="set" scoped="" ref="0x100eef950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eefad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eefc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eee020"/>
        <function-ref name="clr" scoped="" ref="0x100eee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x100f0e558" loc="207:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x100f0e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f0e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x100f0ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x100f0ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x100f0ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x100f0d020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f0d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f0d330"/>
        <function-ref name="get" scoped="" ref="0x100f0d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f0d640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f0d7c8"/>
        <function-ref name="set" scoped="" ref="0x100f0d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f0dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f0dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f0c020"/>
        <function-ref name="clr" scoped="" ref="0x100f0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0SIMO" ref="0x100ede580" loc="180:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0SIMO" scoped="" ref="0x100ede580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ede8d0"/>
        <function-ref name="isInput" scoped="" ref="0x100edea58"/>
        <function-ref name="setResistor" scoped="" ref="0x100edebe0"/>
        <function-ref name="toggle" scoped="" ref="0x100eded68"/>
        <function-ref name="isOutput" scoped="" ref="0x100edd020"/>
        <function-ref name="getResistor" scoped="" ref="0x100edd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100edd330"/>
        <function-ref name="get" scoped="" ref="0x100edd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100edd640"/>
        <function-ref name="getRaw" scoped="" ref="0x100edd7c8"/>
        <function-ref name="set" scoped="" ref="0x100edd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eddad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eddc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100edc020"/>
        <function-ref name="clr" scoped="" ref="0x100edc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x100f0c558" loc="208:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x100f0c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f0c8a8"/>
        <function-ref name="isInput" scoped="" ref="0x100f0ca30"/>
        <function-ref name="setResistor" scoped="" ref="0x100f0cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x100f0cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x100f0b020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f0b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f0b330"/>
        <function-ref name="get" scoped="" ref="0x100f0b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f0b640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f0b7c8"/>
        <function-ref name="set" scoped="" ref="0x100f0b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f0bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f0bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f0a020"/>
        <function-ref name="clr" scoped="" ref="0x100f0a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x100e9f568" loc="82:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x100e9f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e9fab8"/>
        <function-ref name="isInput" scoped="" ref="0x100e9fc40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e9fdc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e9e020"/>
        <function-ref name="isOutput" scoped="" ref="0x100e9e1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100e9e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e9e4b8"/>
        <function-ref name="get" scoped="" ref="0x100e9e640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e9e7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100e9e950"/>
        <function-ref name="set" scoped="" ref="0x100e9ead8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e9ec60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e9ede8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e9d120"/>
        <function-ref name="clr" scoped="" ref="0x100e9d2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x100ea8568" loc="95:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x100ea8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ea88b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ea8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ea8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ea8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ea7020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ea71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ea7330"/>
        <function-ref name="get" scoped="" ref="0x100ea74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ea7640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ea77c8"/>
        <function-ref name="set" scoped="" ref="0x100ea7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ea7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ea7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ea6020"/>
        <function-ref name="clr" scoped="" ref="0x100ea61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x100eb6568" loc="106:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x100eb6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eb68b8"/>
        <function-ref name="isInput" scoped="" ref="0x100eb6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100eb6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eb6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100eb5020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eb51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eb5330"/>
        <function-ref name="get" scoped="" ref="0x100eb54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eb5640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eb57c8"/>
        <function-ref name="set" scoped="" ref="0x100eb5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eb5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eb5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eb4020"/>
        <function-ref name="clr" scoped="" ref="0x100eb41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0TXD" ref="0x100ec47f8" loc="178:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0TXD" scoped="" ref="0x100ec47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ec4b48"/>
        <function-ref name="isInput" scoped="" ref="0x100ec4cd0"/>
        <function-ref name="setResistor" scoped="" ref="0x100ec4e58"/>
        <function-ref name="toggle" scoped="" ref="0x100ec3020"/>
        <function-ref name="isOutput" scoped="" ref="0x100ec31a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100ec3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ec34b8"/>
        <function-ref name="get" scoped="" ref="0x100ec3640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ec37c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100ec3950"/>
        <function-ref name="set" scoped="" ref="0x100ec3ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ec3c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ec3de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ee0120"/>
        <function-ref name="clr" scoped="" ref="0x100ee02a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0STE" ref="0x100ec6980" loc="177:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0STE" scoped="" ref="0x100ec6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ec6cd0"/>
        <function-ref name="isInput" scoped="" ref="0x100ec6e58"/>
        <function-ref name="setResistor" scoped="" ref="0x100ec5020"/>
        <function-ref name="toggle" scoped="" ref="0x100ec51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x100ec5330"/>
        <function-ref name="getResistor" scoped="" ref="0x100ec54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ec5640"/>
        <function-ref name="get" scoped="" ref="0x100ec57c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ec5950"/>
        <function-ref name="getRaw" scoped="" ref="0x100ec5ad8"/>
        <function-ref name="set" scoped="" ref="0x100ec5c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ec5de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ec4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ec42a8"/>
        <function-ref name="clr" scoped="" ref="0x100ec4430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0STE" ref="0x100ed8570" loc="184:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0STE" scoped="" ref="0x100ed8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ed88c0"/>
        <function-ref name="isInput" scoped="" ref="0x100ed8a48"/>
        <function-ref name="setResistor" scoped="" ref="0x100ed8bd0"/>
        <function-ref name="toggle" scoped="" ref="0x100ed8d58"/>
        <function-ref name="isOutput" scoped="" ref="0x100ed7020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ed71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ed7330"/>
        <function-ref name="get" scoped="" ref="0x100ed74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ed7640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ed77c8"/>
        <function-ref name="set" scoped="" ref="0x100ed7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ed7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ed7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ed6020"/>
        <function-ref name="clr" scoped="" ref="0x100ed61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SDA" ref="0x100ef8570" loc="201:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SDA" scoped="" ref="0x100ef8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ef88c0"/>
        <function-ref name="isInput" scoped="" ref="0x100ef8a48"/>
        <function-ref name="setResistor" scoped="" ref="0x100ef8bd0"/>
        <function-ref name="toggle" scoped="" ref="0x100ef8d58"/>
        <function-ref name="isOutput" scoped="" ref="0x100ef7020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ef71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ef7330"/>
        <function-ref name="get" scoped="" ref="0x100ef74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ef7640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ef77c8"/>
        <function-ref name="set" scoped="" ref="0x100ef7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ef7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ef7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ef6020"/>
        <function-ref name="clr" scoped="" ref="0x100ef61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x100f01558" loc="214:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x100f01558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f018a8"/>
        <function-ref name="isInput" scoped="" ref="0x100f01a30"/>
        <function-ref name="setResistor" scoped="" ref="0x100f01bb8"/>
        <function-ref name="toggle" scoped="" ref="0x100f01d40"/>
        <function-ref name="isOutput" scoped="" ref="0x100f20020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f20330"/>
        <function-ref name="get" scoped="" ref="0x100f204b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f20640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f207c8"/>
        <function-ref name="set" scoped="" ref="0x100f20950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f20ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f20c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f1f020"/>
        <function-ref name="clr" scoped="" ref="0x100f1f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0RXD" ref="0x100ee0670" loc="179:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0RXD" scoped="" ref="0x100ee0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ee09c0"/>
        <function-ref name="isInput" scoped="" ref="0x100ee0b48"/>
        <function-ref name="setResistor" scoped="" ref="0x100ee0cd0"/>
        <function-ref name="toggle" scoped="" ref="0x100ee0e58"/>
        <function-ref name="isOutput" scoped="" ref="0x100edf020"/>
        <function-ref name="getResistor" scoped="" ref="0x100edf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100edf330"/>
        <function-ref name="get" scoped="" ref="0x100edf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100edf640"/>
        <function-ref name="getRaw" scoped="" ref="0x100edf7c8"/>
        <function-ref name="set" scoped="" ref="0x100edf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100edfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100edfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ede020"/>
        <function-ref name="clr" scoped="" ref="0x100ede1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1TXD" ref="0x100ee8570" loc="192:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1TXD" scoped="" ref="0x100ee8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ee88c0"/>
        <function-ref name="isInput" scoped="" ref="0x100ee8a48"/>
        <function-ref name="setResistor" scoped="" ref="0x100ee8bd0"/>
        <function-ref name="toggle" scoped="" ref="0x100ee8d58"/>
        <function-ref name="isOutput" scoped="" ref="0x100ee7020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ee71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ee7330"/>
        <function-ref name="get" scoped="" ref="0x100ee74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ee7640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ee77c8"/>
        <function-ref name="set" scoped="" ref="0x100ee7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ee7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ee7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ee6020"/>
        <function-ref name="clr" scoped="" ref="0x100ee61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x100e6c568" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x100e6c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e6c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e6ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e6cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e6cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e6b020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e6b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e6b330"/>
        <function-ref name="get" scoped="" ref="0x100e6b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e6b640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e6b7c8"/>
        <function-ref name="set" scoped="" ref="0x100e6b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e6bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e6bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e6a020"/>
        <function-ref name="clr" scoped="" ref="0x100e6a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x100e93568" loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x100e93568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e938b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e93a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e93bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e93d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e92020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e921a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e92330"/>
        <function-ref name="get" scoped="" ref="0x100e924b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e92640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e927c8"/>
        <function-ref name="set" scoped="" ref="0x100e92950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e92ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e92c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e91020"/>
        <function-ref name="clr" scoped="" ref="0x100e911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0SOMI" ref="0x100edc580" loc="181:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0SOMI" scoped="" ref="0x100edc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100edc8d0"/>
        <function-ref name="isInput" scoped="" ref="0x100edca58"/>
        <function-ref name="setResistor" scoped="" ref="0x100edcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x100edcd68"/>
        <function-ref name="isOutput" scoped="" ref="0x100edb020"/>
        <function-ref name="getResistor" scoped="" ref="0x100edb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100edb330"/>
        <function-ref name="get" scoped="" ref="0x100edb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100edb640"/>
        <function-ref name="getRaw" scoped="" ref="0x100edb7c8"/>
        <function-ref name="set" scoped="" ref="0x100edb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100edbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100edbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eda020"/>
        <function-ref name="clr" scoped="" ref="0x100eda1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x100eba568" loc="104:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x100eba568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eba8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ebaa40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ebabc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ebad50"/>
        <function-ref name="isOutput" scoped="" ref="0x100eb9020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eb91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eb9330"/>
        <function-ref name="get" scoped="" ref="0x100eb94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eb9640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eb97c8"/>
        <function-ref name="set" scoped="" ref="0x100eb9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eb9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eb9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eb8020"/>
        <function-ref name="clr" scoped="" ref="0x100eb81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x100e8f568" loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x100e8f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e8f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e8fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e8fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e8fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e8e020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e8e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e8e330"/>
        <function-ref name="get" scoped="" ref="0x100e8e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e8e640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e8e7c8"/>
        <function-ref name="set" scoped="" ref="0x100e8e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e8ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e8ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e8d020"/>
        <function-ref name="clr" scoped="" ref="0x100e8d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x100e99568" loc="85:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x100e99568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e998b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e99a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e99bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e99d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e98020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e98330"/>
        <function-ref name="get" scoped="" ref="0x100e984b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e98640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e987c8"/>
        <function-ref name="set" scoped="" ref="0x100e98950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e98ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e98c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e97020"/>
        <function-ref name="clr" scoped="" ref="0x100e971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x100ec0568" loc="98:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x100ec0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ec08b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ec0a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ec0bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ec0d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ebf020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ebf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ebf330"/>
        <function-ref name="get" scoped="" ref="0x100ebf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ebf640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ebf7c8"/>
        <function-ref name="set" scoped="" ref="0x100ebf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ebfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ebfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ebe020"/>
        <function-ref name="clr" scoped="" ref="0x100ebe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x100ece568" loc="109:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x100ece568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ece8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ecea40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ecebc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eced50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ecd020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ecd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ecd330"/>
        <function-ref name="get" scoped="" ref="0x100ecd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ecd640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ecd7c8"/>
        <function-ref name="set" scoped="" ref="0x100ecd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ecdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ecdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ecc020"/>
        <function-ref name="clr" scoped="" ref="0x100ecc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x100f06558" loc="211:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x100f06558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f068a8"/>
        <function-ref name="isInput" scoped="" ref="0x100f06a30"/>
        <function-ref name="setResistor" scoped="" ref="0x100f06bb8"/>
        <function-ref name="toggle" scoped="" ref="0x100f06d40"/>
        <function-ref name="isOutput" scoped="" ref="0x100f04020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f04330"/>
        <function-ref name="get" scoped="" ref="0x100f044b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f04640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f047c8"/>
        <function-ref name="set" scoped="" ref="0x100f04950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f04ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f04c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f03020"/>
        <function-ref name="clr" scoped="" ref="0x100f031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x100e74950" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x100e74950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e74ca0"/>
        <function-ref name="isInput" scoped="" ref="0x100e74e28"/>
        <function-ref name="setResistor" scoped="" ref="0x100e61020"/>
        <function-ref name="toggle" scoped="" ref="0x100e611a8"/>
        <function-ref name="isOutput" scoped="" ref="0x100e61330"/>
        <function-ref name="getResistor" scoped="" ref="0x100e614b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e61640"/>
        <function-ref name="get" scoped="" ref="0x100e617c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e61950"/>
        <function-ref name="getRaw" scoped="" ref="0x100e61ad8"/>
        <function-ref name="set" scoped="" ref="0x100e61c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e61de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e60020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e602a8"/>
        <function-ref name="clr" scoped="" ref="0x100e60430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x100e80568" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x100e80568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e808b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e80a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e80bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e80d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e7e020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e7e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e7e330"/>
        <function-ref name="get" scoped="" ref="0x100e7e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e7e640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e7e7c8"/>
        <function-ref name="set" scoped="" ref="0x100e7e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e7ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e7ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e7d020"/>
        <function-ref name="clr" scoped="" ref="0x100e7d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x100e89568" loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x100e89568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e898b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e89a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e89bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e89d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e88020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e881a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e88330"/>
        <function-ref name="get" scoped="" ref="0x100e884b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e88640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e887c8"/>
        <function-ref name="set" scoped="" ref="0x100e88950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e88ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e88c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e87020"/>
        <function-ref name="clr" scoped="" ref="0x100e871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x100eb1568" loc="88:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x100eb1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eb18b8"/>
        <function-ref name="isInput" scoped="" ref="0x100eb1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100eb1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eb1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100eb0020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eb01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eb0330"/>
        <function-ref name="get" scoped="" ref="0x100eb04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eb0640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eb07c8"/>
        <function-ref name="set" scoped="" ref="0x100eb0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eb0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eb0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eaf020"/>
        <function-ref name="clr" scoped="" ref="0x100eaf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0CLK" ref="0x100eda570" loc="183:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0CLK" scoped="" ref="0x100eda570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eda8c0"/>
        <function-ref name="isInput" scoped="" ref="0x100edaa48"/>
        <function-ref name="setResistor" scoped="" ref="0x100edabd0"/>
        <function-ref name="toggle" scoped="" ref="0x100edad58"/>
        <function-ref name="isOutput" scoped="" ref="0x100ed9020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ed91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ed9330"/>
        <function-ref name="get" scoped="" ref="0x100ed94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ed9640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ed97c8"/>
        <function-ref name="set" scoped="" ref="0x100ed9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ed9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ed9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ed8020"/>
        <function-ref name="clr" scoped="" ref="0x100ed81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x100ef2558" loc="205:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x100ef2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ef28a8"/>
        <function-ref name="isInput" scoped="" ref="0x100ef2a30"/>
        <function-ref name="setResistor" scoped="" ref="0x100ef2bb8"/>
        <function-ref name="toggle" scoped="" ref="0x100ef2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x100ef1020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ef11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ef1330"/>
        <function-ref name="get" scoped="" ref="0x100ef14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ef1640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ef17c8"/>
        <function-ref name="set" scoped="" ref="0x100ef1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ef1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ef1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f10020"/>
        <function-ref name="clr" scoped="" ref="0x100f101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x100ead568" loc="93:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x100ead568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ead8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100eada40"/>
        <function-ref name="setResistor" scoped="" ref="0x100eadbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eadd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100eac020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eac330"/>
        <function-ref name="get" scoped="" ref="0x100eac4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eac640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eac7c8"/>
        <function-ref name="set" scoped="" ref="0x100eac950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eacad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eacc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eab020"/>
        <function-ref name="clr" scoped="" ref="0x100eab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1CLK" ref="0x100f00570" loc="197:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1CLK" scoped="" ref="0x100f00570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f008c0"/>
        <function-ref name="isInput" scoped="" ref="0x100f00a48"/>
        <function-ref name="setResistor" scoped="" ref="0x100f00bd0"/>
        <function-ref name="toggle" scoped="" ref="0x100f00d58"/>
        <function-ref name="isOutput" scoped="" ref="0x100eff020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eff330"/>
        <function-ref name="get" scoped="" ref="0x100eff4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eff640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eff7c8"/>
        <function-ref name="set" scoped="" ref="0x100eff950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100effad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100effc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100efe020"/>
        <function-ref name="clr" scoped="" ref="0x100efe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1STE" ref="0x100eea570" loc="191:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1STE" scoped="" ref="0x100eea570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eea8c0"/>
        <function-ref name="isInput" scoped="" ref="0x100eeaa48"/>
        <function-ref name="setResistor" scoped="" ref="0x100eeabd0"/>
        <function-ref name="toggle" scoped="" ref="0x100eead58"/>
        <function-ref name="isOutput" scoped="" ref="0x100ee9020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ee91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ee9330"/>
        <function-ref name="get" scoped="" ref="0x100ee94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ee9640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ee97c8"/>
        <function-ref name="set" scoped="" ref="0x100ee9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ee9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ee9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ee8020"/>
        <function-ref name="clr" scoped="" ref="0x100ee81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x100e70568" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x100e70568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e708b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e70a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e70bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e70d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e6f020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e6f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e6f330"/>
        <function-ref name="get" scoped="" ref="0x100e6f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e6f640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e6f7c8"/>
        <function-ref name="set" scoped="" ref="0x100e6f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e6fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e6fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e6e020"/>
        <function-ref name="clr" scoped="" ref="0x100e6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x100e79568" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x100e79568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e798b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e79a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e79bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e79d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e78020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e78330"/>
        <function-ref name="get" scoped="" ref="0x100e784b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e78640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e787c8"/>
        <function-ref name="set" scoped="" ref="0x100e78950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e78ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e78c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e95020"/>
        <function-ref name="clr" scoped="" ref="0x100e951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x100ea1568" loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x100ea1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ea18b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ea1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ea1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ea1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ea0020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ea01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ea0330"/>
        <function-ref name="get" scoped="" ref="0x100ea04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ea0640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ea07c8"/>
        <function-ref name="set" scoped="" ref="0x100ea0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ea0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ea0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e9f020"/>
        <function-ref name="clr" scoped="" ref="0x100e9f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1SOMI" ref="0x100ee2580" loc="195:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1SOMI" scoped="" ref="0x100ee2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ee28d0"/>
        <function-ref name="isInput" scoped="" ref="0x100ee2a58"/>
        <function-ref name="setResistor" scoped="" ref="0x100ee2be0"/>
        <function-ref name="toggle" scoped="" ref="0x100ee2d68"/>
        <function-ref name="isOutput" scoped="" ref="0x100ee1020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ee11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ee1330"/>
        <function-ref name="get" scoped="" ref="0x100ee14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ee1640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ee17c8"/>
        <function-ref name="set" scoped="" ref="0x100ee1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ee1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ee1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f00020"/>
        <function-ref name="clr" scoped="" ref="0x100f001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SIMO" ref="0x100ed6580" loc="185:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SIMO" scoped="" ref="0x100ed6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ed68d0"/>
        <function-ref name="isInput" scoped="" ref="0x100ed6a58"/>
        <function-ref name="setResistor" scoped="" ref="0x100ed6be0"/>
        <function-ref name="toggle" scoped="" ref="0x100ed6d68"/>
        <function-ref name="isOutput" scoped="" ref="0x100ed4020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ed41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ed4330"/>
        <function-ref name="get" scoped="" ref="0x100ed44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ed4640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ed47c8"/>
        <function-ref name="set" scoped="" ref="0x100ed4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ed4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ed4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ed3020"/>
        <function-ref name="clr" scoped="" ref="0x100ed31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1CLK" ref="0x100eec570" loc="190:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1CLK" scoped="" ref="0x100eec570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eec8c0"/>
        <function-ref name="isInput" scoped="" ref="0x100eeca48"/>
        <function-ref name="setResistor" scoped="" ref="0x100eecbd0"/>
        <function-ref name="toggle" scoped="" ref="0x100eecd58"/>
        <function-ref name="isOutput" scoped="" ref="0x100eeb020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eeb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eeb330"/>
        <function-ref name="get" scoped="" ref="0x100eeb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eeb640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eeb7c8"/>
        <function-ref name="set" scoped="" ref="0x100eeb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eebad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eebc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eea020"/>
        <function-ref name="clr" scoped="" ref="0x100eea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x100f0a558" loc="209:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x100f0a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f0a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x100f0aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x100f0abb8"/>
        <function-ref name="toggle" scoped="" ref="0x100f0ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x100f09020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f09330"/>
        <function-ref name="get" scoped="" ref="0x100f094b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f09640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f097c8"/>
        <function-ref name="set" scoped="" ref="0x100f09950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f09ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f09c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f08020"/>
        <function-ref name="clr" scoped="" ref="0x100f081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x100e9d668" loc="83:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x100e9d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e9d9b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e9db40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e9dcc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e9de50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e9c020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e9c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e9c330"/>
        <function-ref name="get" scoped="" ref="0x100e9c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e9c640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e9c7c8"/>
        <function-ref name="set" scoped="" ref="0x100e9c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e9cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e9cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e9b020"/>
        <function-ref name="clr" scoped="" ref="0x100e9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x100ea6568" loc="96:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x100ea6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ea68b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ea6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ea6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ea6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ea5020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ea51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ea5330"/>
        <function-ref name="get" scoped="" ref="0x100ea54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ea5640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ea57c8"/>
        <function-ref name="set" scoped="" ref="0x100ea5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ea5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ea5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ec2020"/>
        <function-ref name="clr" scoped="" ref="0x100ec21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x100eb4568" loc="107:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x100eb4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eb48b8"/>
        <function-ref name="isInput" scoped="" ref="0x100eb4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100eb4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eb4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ed1020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ed11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ed1330"/>
        <function-ref name="get" scoped="" ref="0x100ed14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ed1640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ed17c8"/>
        <function-ref name="set" scoped="" ref="0x100ed1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ed1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ed1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ed0020"/>
        <function-ref name="clr" scoped="" ref="0x100ed01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x100e6a568" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x100e6a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e6a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e6aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e6abc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e6ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e69020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e69330"/>
        <function-ref name="get" scoped="" ref="0x100e694b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e69640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e697c8"/>
        <function-ref name="set" scoped="" ref="0x100e69950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e69ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e69c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e86020"/>
        <function-ref name="clr" scoped="" ref="0x100e861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x100eb8568" loc="105:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x100eb8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eb88b8"/>
        <function-ref name="isInput" scoped="" ref="0x100eb8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100eb8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eb8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100eb7020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eb71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eb7330"/>
        <function-ref name="get" scoped="" ref="0x100eb74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eb7640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eb77c8"/>
        <function-ref name="set" scoped="" ref="0x100eb7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eb7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eb7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eb6020"/>
        <function-ref name="clr" scoped="" ref="0x100eb61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x100e84568" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x100e84568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e848b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e84a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e84bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e84d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e83020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e83330"/>
        <function-ref name="get" scoped="" ref="0x100e834b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e83640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e837c8"/>
        <function-ref name="set" scoped="" ref="0x100e83950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e83ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e83c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e82020"/>
        <function-ref name="clr" scoped="" ref="0x100e821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x100e8d568" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x100e8d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e8d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e8da40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e8dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e8dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e8c020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e8c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e8c330"/>
        <function-ref name="get" scoped="" ref="0x100e8c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e8c640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e8c7c8"/>
        <function-ref name="set" scoped="" ref="0x100e8c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e8cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e8cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e8b020"/>
        <function-ref name="clr" scoped="" ref="0x100e8b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x100e97568" loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x100e97568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e978b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e97a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e97bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e97d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e96020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e96330"/>
        <function-ref name="get" scoped="" ref="0x100e964b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e96640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e967c8"/>
        <function-ref name="set" scoped="" ref="0x100e96950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e96ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e96c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eb3020"/>
        <function-ref name="clr" scoped="" ref="0x100eb31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x100ebe568" loc="99:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x100ebe568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ebe8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ebea40"/>
        <function-ref name="setResistor" scoped="" ref="0x100ebebc8"/>
        <function-ref name="toggle" scoped="" ref="0x100ebed50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ebd020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ebd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ebd330"/>
        <function-ref name="get" scoped="" ref="0x100ebd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ebd640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ebd7c8"/>
        <function-ref name="set" scoped="" ref="0x100ebd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ebdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ebdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ebc020"/>
        <function-ref name="clr" scoped="" ref="0x100ebc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x100ecc568" loc="110:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x100ecc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ecc8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100ecca40"/>
        <function-ref name="setResistor" scoped="" ref="0x100eccbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eccd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ecb020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ecb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ecb330"/>
        <function-ref name="get" scoped="" ref="0x100ecb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ecb640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ecb7c8"/>
        <function-ref name="set" scoped="" ref="0x100ecb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ecbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ecbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eca020"/>
        <function-ref name="clr" scoped="" ref="0x100eca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x100e607f0" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x100e607f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e60b40"/>
        <function-ref name="isInput" scoped="" ref="0x100e60cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x100e60e50"/>
        <function-ref name="toggle" scoped="" ref="0x100e73020"/>
        <function-ref name="isOutput" scoped="" ref="0x100e731a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100e73330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e734b8"/>
        <function-ref name="get" scoped="" ref="0x100e73640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e737c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100e73950"/>
        <function-ref name="set" scoped="" ref="0x100e73ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e73c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e73de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e72120"/>
        <function-ref name="clr" scoped="" ref="0x100e722a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x100e7d568" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x100e7d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e7d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e7da40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e7dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e7dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100e7c020"/>
        <function-ref name="getResistor" scoped="" ref="0x100e7c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100e7c330"/>
        <function-ref name="get" scoped="" ref="0x100e7c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100e7c640"/>
        <function-ref name="getRaw" scoped="" ref="0x100e7c7c8"/>
        <function-ref name="set" scoped="" ref="0x100e7c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100e7cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100e7cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100e7b020"/>
        <function-ref name="clr" scoped="" ref="0x100e7b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x100e87568" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x100e87568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100e878b8"/>
        <function-ref name="isInput" scoped="" ref="0x100e87a40"/>
        <function-ref name="setResistor" scoped="" ref="0x100e87bc8"/>
        <function-ref name="toggle" scoped="" ref="0x100e87d50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ea4020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ea41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ea4330"/>
        <function-ref name="get" scoped="" ref="0x100ea44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ea4640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ea47c8"/>
        <function-ref name="set" scoped="" ref="0x100ea4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ea4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ea4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ea3020"/>
        <function-ref name="clr" scoped="" ref="0x100ea31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x100eaf568" loc="89:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x100eaf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eaf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100eafa40"/>
        <function-ref name="setResistor" scoped="" ref="0x100eafbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eafd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100eae020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eae330"/>
        <function-ref name="get" scoped="" ref="0x100eae4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eae640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eae7c8"/>
        <function-ref name="set" scoped="" ref="0x100eae950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eaead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eaec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ead020"/>
        <function-ref name="clr" scoped="" ref="0x100ead1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1RXD" ref="0x100ee6570" loc="193:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1RXD" scoped="" ref="0x100ee6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ee68c0"/>
        <function-ref name="isInput" scoped="" ref="0x100ee6a48"/>
        <function-ref name="setResistor" scoped="" ref="0x100ee6bd0"/>
        <function-ref name="toggle" scoped="" ref="0x100ee6d58"/>
        <function-ref name="isOutput" scoped="" ref="0x100ee5020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ee51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ee5330"/>
        <function-ref name="get" scoped="" ref="0x100ee54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ee5640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ee57c8"/>
        <function-ref name="set" scoped="" ref="0x100ee5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ee5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ee5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ee4020"/>
        <function-ref name="clr" scoped="" ref="0x100ee41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SOMI" ref="0x100efa580" loc="200:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SOMI" scoped="" ref="0x100efa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100efa8d0"/>
        <function-ref name="isInput" scoped="" ref="0x100efaa58"/>
        <function-ref name="setResistor" scoped="" ref="0x100efabe0"/>
        <function-ref name="toggle" scoped="" ref="0x100efad68"/>
        <function-ref name="isOutput" scoped="" ref="0x100ef9020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ef91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ef9330"/>
        <function-ref name="get" scoped="" ref="0x100ef94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ef9640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ef97c8"/>
        <function-ref name="set" scoped="" ref="0x100ef9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ef9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ef9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ef8020"/>
        <function-ref name="clr" scoped="" ref="0x100ef81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SCL" ref="0x100ef6570" loc="202:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SCL" scoped="" ref="0x100ef6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ef68c0"/>
        <function-ref name="isInput" scoped="" ref="0x100ef6a48"/>
        <function-ref name="setResistor" scoped="" ref="0x100ef6bd0"/>
        <function-ref name="toggle" scoped="" ref="0x100ef6d58"/>
        <function-ref name="isOutput" scoped="" ref="0x100ef5020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ef51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ef5330"/>
        <function-ref name="get" scoped="" ref="0x100ef54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ef5640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ef57c8"/>
        <function-ref name="set" scoped="" ref="0x100ef5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ef5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ef5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ef4020"/>
        <function-ref name="clr" scoped="" ref="0x100ef41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x100eab568" loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x100eab568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eab8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100eaba40"/>
        <function-ref name="setResistor" scoped="" ref="0x100eabbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100eabd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100ea9020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ea91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ea9330"/>
        <function-ref name="get" scoped="" ref="0x100ea94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ea9640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ea97c8"/>
        <function-ref name="set" scoped="" ref="0x100ea9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ea9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ea9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ea8020"/>
        <function-ref name="clr" scoped="" ref="0x100ea81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x100f10558" loc="206:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x100f10558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f108a8"/>
        <function-ref name="isInput" scoped="" ref="0x100f10a30"/>
        <function-ref name="setResistor" scoped="" ref="0x100f10bb8"/>
        <function-ref name="toggle" scoped="" ref="0x100f10d40"/>
        <function-ref name="isOutput" scoped="" ref="0x100f0f020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f0f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f0f330"/>
        <function-ref name="get" scoped="" ref="0x100f0f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f0f640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f0f7c8"/>
        <function-ref name="set" scoped="" ref="0x100f0f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f0fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f0fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f0e020"/>
        <function-ref name="clr" scoped="" ref="0x100f0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x100f03558" loc="213:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x100f03558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f038a8"/>
        <function-ref name="isInput" scoped="" ref="0x100f03a30"/>
        <function-ref name="setResistor" scoped="" ref="0x100f03bb8"/>
        <function-ref name="toggle" scoped="" ref="0x100f03d40"/>
        <function-ref name="isOutput" scoped="" ref="0x100f02020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f02330"/>
        <function-ref name="get" scoped="" ref="0x100f024b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f02640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f027c8"/>
        <function-ref name="set" scoped="" ref="0x100f02950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f02ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f02c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f01020"/>
        <function-ref name="clr" scoped="" ref="0x100f011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SOMI" ref="0x100ed3580" loc="186:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SOMI" scoped="" ref="0x100ed3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ed38d0"/>
        <function-ref name="isInput" scoped="" ref="0x100ed3a58"/>
        <function-ref name="setResistor" scoped="" ref="0x100ed3be0"/>
        <function-ref name="toggle" scoped="" ref="0x100ed3d68"/>
        <function-ref name="isOutput" scoped="" ref="0x100ed2020"/>
        <function-ref name="getResistor" scoped="" ref="0x100ed21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ed2330"/>
        <function-ref name="get" scoped="" ref="0x100ed24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ed2640"/>
        <function-ref name="getRaw" scoped="" ref="0x100ed27c8"/>
        <function-ref name="set" scoped="" ref="0x100ed2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ed2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ed2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ef0020"/>
        <function-ref name="clr" scoped="" ref="0x100ef01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x100f1d568" loc="217:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x100f1d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f1d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x100f1da40"/>
        <function-ref name="setResistor" scoped="" ref="0x100f1dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x100f1dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x100f1c020"/>
        <function-ref name="getResistor" scoped="" ref="0x100f1c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f1c330"/>
        <function-ref name="get" scoped="" ref="0x100f1c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f1c640"/>
        <function-ref name="getRaw" scoped="" ref="0x100f1c7c8"/>
        <function-ref name="set" scoped="" ref="0x100f1c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f1cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f1cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f1b020"/>
        <function-ref name="clr" scoped="" ref="0x100f1b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SIMO" ref="0x100efc580" loc="199:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SIMO" scoped="" ref="0x100efc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100efc8d0"/>
        <function-ref name="isInput" scoped="" ref="0x100efca58"/>
        <function-ref name="setResistor" scoped="" ref="0x100efcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x100efcd68"/>
        <function-ref name="isOutput" scoped="" ref="0x100efb020"/>
        <function-ref name="getResistor" scoped="" ref="0x100efb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100efb330"/>
        <function-ref name="get" scoped="" ref="0x100efb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100efb640"/>
        <function-ref name="getRaw" scoped="" ref="0x100efb7c8"/>
        <function-ref name="set" scoped="" ref="0x100efb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100efbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100efbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100efa020"/>
        <function-ref name="clr" scoped="" ref="0x100efa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SCL" ref="0x100eee570" loc="188:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SCL" scoped="" ref="0x100eee570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100eee8c0"/>
        <function-ref name="isInput" scoped="" ref="0x100eeea48"/>
        <function-ref name="setResistor" scoped="" ref="0x100eeebd0"/>
        <function-ref name="toggle" scoped="" ref="0x100eeed58"/>
        <function-ref name="isOutput" scoped="" ref="0x100eed020"/>
        <function-ref name="getResistor" scoped="" ref="0x100eed1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100eed330"/>
        <function-ref name="get" scoped="" ref="0x100eed4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100eed640"/>
        <function-ref name="getRaw" scoped="" ref="0x100eed7c8"/>
        <function-ref name="set" scoped="" ref="0x100eed950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100eedad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100eedc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100eec020"/>
        <function-ref name="clr" scoped="" ref="0x100eec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f456a8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f456a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f459f8"/>
        <function-ref name="isInput" scoped="" ref="0x100f45b80"/>
        <function-ref name="setResistor" scoped="" ref="0x100f45d08"/>
        <function-ref name="toggle" scoped="" ref="0x100f44020"/>
        <function-ref name="isOutput" scoped="" ref="0x100f441a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100f44330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f444b8"/>
        <function-ref name="get" scoped="" ref="0x100f44640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f447c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f44950"/>
        <function-ref name="set" scoped="" ref="0x100f44ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f44c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f44de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f43120"/>
        <function-ref name="clr" scoped="" ref="0x100f432a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f603e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f603e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f60730"/>
        <function-ref name="isInput" scoped="" ref="0x100f608b8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f60a40"/>
        <function-ref name="toggle" scoped="" ref="0x100f60bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x100f60d50"/>
        <function-ref name="getResistor" scoped="" ref="0x100f5f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f5f1a8"/>
        <function-ref name="get" scoped="" ref="0x100f5f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f5f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f5f640"/>
        <function-ref name="set" scoped="" ref="0x100f5f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f5f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f5fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f5fd60"/>
        <function-ref name="clr" scoped="" ref="0x100f5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f5b020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f5b370"/>
        <function-ref name="isInput" scoped="" ref="0x100f5b4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f5b680"/>
        <function-ref name="toggle" scoped="" ref="0x100f5b808"/>
        <function-ref name="isOutput" scoped="" ref="0x100f5b990"/>
        <function-ref name="getResistor" scoped="" ref="0x100f5bb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f5bca0"/>
        <function-ref name="get" scoped="" ref="0x100f5be28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f5a020"/>
        <function-ref name="getRaw" scoped="" ref="0x100f5a1a8"/>
        <function-ref name="set" scoped="" ref="0x100f5a330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f5a4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f5a640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f5a8c8"/>
        <function-ref name="clr" scoped="" ref="0x100f5aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f57ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f57ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f56020"/>
        <function-ref name="isInput" scoped="" ref="0x100f561a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f56330"/>
        <function-ref name="toggle" scoped="" ref="0x100f564b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100f56640"/>
        <function-ref name="getResistor" scoped="" ref="0x100f567c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f56950"/>
        <function-ref name="get" scoped="" ref="0x100f56ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f56c60"/>
        <function-ref name="getRaw" scoped="" ref="0x100f56de8"/>
        <function-ref name="set" scoped="" ref="0x100f55020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f551a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f55330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f555b8"/>
        <function-ref name="clr" scoped="" ref="0x100f55740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f52748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f52748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f52a98"/>
        <function-ref name="isInput" scoped="" ref="0x100f52c20"/>
        <function-ref name="setResistor" scoped="" ref="0x100f52da8"/>
        <function-ref name="toggle" scoped="" ref="0x100f51020"/>
        <function-ref name="isOutput" scoped="" ref="0x100f511a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100f51330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f514b8"/>
        <function-ref name="get" scoped="" ref="0x100f51640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f517c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f51950"/>
        <function-ref name="set" scoped="" ref="0x100f51ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f51c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f51de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f71120"/>
        <function-ref name="clr" scoped="" ref="0x100f712a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f6e3e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f6e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f6e730"/>
        <function-ref name="isInput" scoped="" ref="0x100f6e8b8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f6ea40"/>
        <function-ref name="toggle" scoped="" ref="0x100f6ebc8"/>
        <function-ref name="isOutput" scoped="" ref="0x100f6ed50"/>
        <function-ref name="getResistor" scoped="" ref="0x100f6d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f6d1a8"/>
        <function-ref name="get" scoped="" ref="0x100f6d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f6d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f6d640"/>
        <function-ref name="set" scoped="" ref="0x100f6d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f6d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f6dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f6dd60"/>
        <function-ref name="clr" scoped="" ref="0x100f6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f68020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f68370"/>
        <function-ref name="isInput" scoped="" ref="0x100f684f8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f68680"/>
        <function-ref name="toggle" scoped="" ref="0x100f68808"/>
        <function-ref name="isOutput" scoped="" ref="0x100f68990"/>
        <function-ref name="getResistor" scoped="" ref="0x100f68b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f68ca0"/>
        <function-ref name="get" scoped="" ref="0x100f68e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f67020"/>
        <function-ref name="getRaw" scoped="" ref="0x100f671a8"/>
        <function-ref name="set" scoped="" ref="0x100f67330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f674b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f67640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f678c8"/>
        <function-ref name="clr" scoped="" ref="0x100f67a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f64ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f64ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f63020"/>
        <function-ref name="isInput" scoped="" ref="0x100f631a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f63330"/>
        <function-ref name="toggle" scoped="" ref="0x100f634b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100f63640"/>
        <function-ref name="getResistor" scoped="" ref="0x100f637c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f63950"/>
        <function-ref name="get" scoped="" ref="0x100f63ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f63c60"/>
        <function-ref name="getRaw" scoped="" ref="0x100f63de8"/>
        <function-ref name="set" scoped="" ref="0x100f62020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f621a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f62330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f625b8"/>
        <function-ref name="clr" scoped="" ref="0x100f62740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f81748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f81748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f81a98"/>
        <function-ref name="isInput" scoped="" ref="0x100f81c20"/>
        <function-ref name="setResistor" scoped="" ref="0x100f81da8"/>
        <function-ref name="toggle" scoped="" ref="0x100f80020"/>
        <function-ref name="isOutput" scoped="" ref="0x100f801a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100f80330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f804b8"/>
        <function-ref name="get" scoped="" ref="0x100f80640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f807c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f80950"/>
        <function-ref name="set" scoped="" ref="0x100f80ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f80c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f80de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f7f120"/>
        <function-ref name="clr" scoped="" ref="0x100f7f2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f7c3e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f7c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f7c730"/>
        <function-ref name="isInput" scoped="" ref="0x100f7c8b8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f7ca40"/>
        <function-ref name="toggle" scoped="" ref="0x100f7cbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x100f7cd50"/>
        <function-ref name="getResistor" scoped="" ref="0x100f7b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f7b1a8"/>
        <function-ref name="get" scoped="" ref="0x100f7b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f7b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f7b640"/>
        <function-ref name="set" scoped="" ref="0x100f7b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f7b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f7bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f7bd60"/>
        <function-ref name="clr" scoped="" ref="0x100f7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f77020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f77370"/>
        <function-ref name="isInput" scoped="" ref="0x100f774f8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f77680"/>
        <function-ref name="toggle" scoped="" ref="0x100f77808"/>
        <function-ref name="isOutput" scoped="" ref="0x100f77990"/>
        <function-ref name="getResistor" scoped="" ref="0x100f77b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f77ca0"/>
        <function-ref name="get" scoped="" ref="0x100f77e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f76020"/>
        <function-ref name="getRaw" scoped="" ref="0x100f761a8"/>
        <function-ref name="set" scoped="" ref="0x100f76330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f764b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f76640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f768c8"/>
        <function-ref name="clr" scoped="" ref="0x100f76a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f73ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f73ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f72020"/>
        <function-ref name="isInput" scoped="" ref="0x100f721a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f72330"/>
        <function-ref name="toggle" scoped="" ref="0x100f724b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100f72640"/>
        <function-ref name="getResistor" scoped="" ref="0x100f727c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f72950"/>
        <function-ref name="get" scoped="" ref="0x100f72ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f72c60"/>
        <function-ref name="getRaw" scoped="" ref="0x100f72de8"/>
        <function-ref name="set" scoped="" ref="0x100f93020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f931a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f93330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f935b8"/>
        <function-ref name="clr" scoped="" ref="0x100f93740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f90820" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f90820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f90b70"/>
        <function-ref name="isInput" scoped="" ref="0x100f90cf8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f90e80"/>
        <function-ref name="toggle" scoped="" ref="0x100f8f030"/>
        <function-ref name="isOutput" scoped="" ref="0x100f8f1b8"/>
        <function-ref name="getResistor" scoped="" ref="0x100f8f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f8f4c8"/>
        <function-ref name="get" scoped="" ref="0x100f8f650"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f8f7d8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f8f960"/>
        <function-ref name="set" scoped="" ref="0x100f8fae8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f8fc70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f8fdf8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f8e120"/>
        <function-ref name="clr" scoped="" ref="0x100f8e2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f8b3e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f8b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f8b730"/>
        <function-ref name="isInput" scoped="" ref="0x100f8b8b8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f8ba40"/>
        <function-ref name="toggle" scoped="" ref="0x100f8bbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x100f8bd50"/>
        <function-ref name="getResistor" scoped="" ref="0x100f89020"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f891a8"/>
        <function-ref name="get" scoped="" ref="0x100f89330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f894b8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f89640"/>
        <function-ref name="set" scoped="" ref="0x100f897c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f89950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f89ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f89d60"/>
        <function-ref name="clr" scoped="" ref="0x100f88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f85020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f85370"/>
        <function-ref name="isInput" scoped="" ref="0x100f854f8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f85680"/>
        <function-ref name="toggle" scoped="" ref="0x100f85808"/>
        <function-ref name="isOutput" scoped="" ref="0x100f85990"/>
        <function-ref name="getResistor" scoped="" ref="0x100f85b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f85ca0"/>
        <function-ref name="get" scoped="" ref="0x100f85e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f84020"/>
        <function-ref name="getRaw" scoped="" ref="0x100f841a8"/>
        <function-ref name="set" scoped="" ref="0x100f84330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f844b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f84640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f848c8"/>
        <function-ref name="clr" scoped="" ref="0x100f84a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fa3ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fa3ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fa2020"/>
        <function-ref name="isInput" scoped="" ref="0x100fa21a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fa2330"/>
        <function-ref name="toggle" scoped="" ref="0x100fa24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fa2640"/>
        <function-ref name="getResistor" scoped="" ref="0x100fa27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fa2950"/>
        <function-ref name="get" scoped="" ref="0x100fa2ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fa2c60"/>
        <function-ref name="getRaw" scoped="" ref="0x100fa2de8"/>
        <function-ref name="set" scoped="" ref="0x100fa1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fa11a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fa1330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fa15b8"/>
        <function-ref name="clr" scoped="" ref="0x100fa1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f9e748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f9e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f9ea98"/>
        <function-ref name="isInput" scoped="" ref="0x100f9ec20"/>
        <function-ref name="setResistor" scoped="" ref="0x100f9eda8"/>
        <function-ref name="toggle" scoped="" ref="0x100f9d020"/>
        <function-ref name="isOutput" scoped="" ref="0x100f9d1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100f9d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f9d4b8"/>
        <function-ref name="get" scoped="" ref="0x100f9d640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f9d7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f9d950"/>
        <function-ref name="set" scoped="" ref="0x100f9dad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f9dc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f9dde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f9c120"/>
        <function-ref name="clr" scoped="" ref="0x100f9c2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f993e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f993e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f99730"/>
        <function-ref name="isInput" scoped="" ref="0x100f998b8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f99a40"/>
        <function-ref name="toggle" scoped="" ref="0x100f99bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x100f99d50"/>
        <function-ref name="getResistor" scoped="" ref="0x100f98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f981a8"/>
        <function-ref name="get" scoped="" ref="0x100f98330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100f984b8"/>
        <function-ref name="getRaw" scoped="" ref="0x100f98640"/>
        <function-ref name="set" scoped="" ref="0x100f987c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100f98950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100f98ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100f98d60"/>
        <function-ref name="clr" scoped="" ref="0x100f97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100f94020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100f94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100f94370"/>
        <function-ref name="isInput" scoped="" ref="0x100f944f8"/>
        <function-ref name="setResistor" scoped="" ref="0x100f94680"/>
        <function-ref name="toggle" scoped="" ref="0x100f94808"/>
        <function-ref name="isOutput" scoped="" ref="0x100f94990"/>
        <function-ref name="getResistor" scoped="" ref="0x100f94b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x100f94ca0"/>
        <function-ref name="get" scoped="" ref="0x100f94e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fb5020"/>
        <function-ref name="getRaw" scoped="" ref="0x100fb51a8"/>
        <function-ref name="set" scoped="" ref="0x100fb5330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fb54b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fb5640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fb58c8"/>
        <function-ref name="clr" scoped="" ref="0x100fb5a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fb2ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fb2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fb1020"/>
        <function-ref name="isInput" scoped="" ref="0x100fb11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fb1330"/>
        <function-ref name="toggle" scoped="" ref="0x100fb14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fb1640"/>
        <function-ref name="getResistor" scoped="" ref="0x100fb17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fb1950"/>
        <function-ref name="get" scoped="" ref="0x100fb1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fb1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x100fb1de8"/>
        <function-ref name="set" scoped="" ref="0x100fb0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fb01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fb0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fb05b8"/>
        <function-ref name="clr" scoped="" ref="0x100fb0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fad748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fad748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fada98"/>
        <function-ref name="isInput" scoped="" ref="0x100fadc20"/>
        <function-ref name="setResistor" scoped="" ref="0x100fadda8"/>
        <function-ref name="toggle" scoped="" ref="0x100fac020"/>
        <function-ref name="isOutput" scoped="" ref="0x100fac1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100fac330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fac4b8"/>
        <function-ref name="get" scoped="" ref="0x100fac640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fac7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100fac950"/>
        <function-ref name="set" scoped="" ref="0x100facad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100facc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100facde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fab120"/>
        <function-ref name="clr" scoped="" ref="0x100fab2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fa83e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fa83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fa8730"/>
        <function-ref name="isInput" scoped="" ref="0x100fa88b8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fa8a40"/>
        <function-ref name="toggle" scoped="" ref="0x100fa8bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fa8d50"/>
        <function-ref name="getResistor" scoped="" ref="0x100fa6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fa61a8"/>
        <function-ref name="get" scoped="" ref="0x100fa6330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fa64b8"/>
        <function-ref name="getRaw" scoped="" ref="0x100fa6640"/>
        <function-ref name="set" scoped="" ref="0x100fa67c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fa6950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fa6ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fa6d60"/>
        <function-ref name="clr" scoped="" ref="0x100fa5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fc4020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fc4370"/>
        <function-ref name="isInput" scoped="" ref="0x100fc44f8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fc4680"/>
        <function-ref name="toggle" scoped="" ref="0x100fc4808"/>
        <function-ref name="isOutput" scoped="" ref="0x100fc4990"/>
        <function-ref name="getResistor" scoped="" ref="0x100fc4b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fc4ca0"/>
        <function-ref name="get" scoped="" ref="0x100fc4e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fc3020"/>
        <function-ref name="getRaw" scoped="" ref="0x100fc31a8"/>
        <function-ref name="set" scoped="" ref="0x100fc3330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fc34b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fc3640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fc38c8"/>
        <function-ref name="clr" scoped="" ref="0x100fc3a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fc0ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fc0ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fbf020"/>
        <function-ref name="isInput" scoped="" ref="0x100fbf1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fbf330"/>
        <function-ref name="toggle" scoped="" ref="0x100fbf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fbf640"/>
        <function-ref name="getResistor" scoped="" ref="0x100fbf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fbf950"/>
        <function-ref name="get" scoped="" ref="0x100fbfad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fbfc60"/>
        <function-ref name="getRaw" scoped="" ref="0x100fbfde8"/>
        <function-ref name="set" scoped="" ref="0x100fbe020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fbe1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fbe330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fbe5b8"/>
        <function-ref name="clr" scoped="" ref="0x100fbe740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fbb9a8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fbb9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fbbcf8"/>
        <function-ref name="isInput" scoped="" ref="0x100fbbe80"/>
        <function-ref name="setResistor" scoped="" ref="0x100fba030"/>
        <function-ref name="toggle" scoped="" ref="0x100fba1b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fba340"/>
        <function-ref name="getResistor" scoped="" ref="0x100fba4c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fba650"/>
        <function-ref name="get" scoped="" ref="0x100fba7d8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fba960"/>
        <function-ref name="getRaw" scoped="" ref="0x100fbaae8"/>
        <function-ref name="set" scoped="" ref="0x100fbac70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fbadf8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fb9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fb92a8"/>
        <function-ref name="clr" scoped="" ref="0x100fb9430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fb63e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fb63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fb6730"/>
        <function-ref name="isInput" scoped="" ref="0x100fb68b8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fb6a40"/>
        <function-ref name="toggle" scoped="" ref="0x100fb6bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fb6d50"/>
        <function-ref name="getResistor" scoped="" ref="0x100fd7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fd71a8"/>
        <function-ref name="get" scoped="" ref="0x100fd7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fd74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x100fd7640"/>
        <function-ref name="set" scoped="" ref="0x100fd77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fd7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fd7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fd7d60"/>
        <function-ref name="clr" scoped="" ref="0x100fd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fd3020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fd3370"/>
        <function-ref name="isInput" scoped="" ref="0x100fd34f8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fd3680"/>
        <function-ref name="toggle" scoped="" ref="0x100fd3808"/>
        <function-ref name="isOutput" scoped="" ref="0x100fd3990"/>
        <function-ref name="getResistor" scoped="" ref="0x100fd3b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fd3ca0"/>
        <function-ref name="get" scoped="" ref="0x100fd3e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fd2020"/>
        <function-ref name="getRaw" scoped="" ref="0x100fd21a8"/>
        <function-ref name="set" scoped="" ref="0x100fd2330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fd24b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fd2640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fd28c8"/>
        <function-ref name="clr" scoped="" ref="0x100fd2a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fcfca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fcfca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fce020"/>
        <function-ref name="isInput" scoped="" ref="0x100fce1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fce330"/>
        <function-ref name="toggle" scoped="" ref="0x100fce4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fce640"/>
        <function-ref name="getResistor" scoped="" ref="0x100fce7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fce950"/>
        <function-ref name="get" scoped="" ref="0x100fcead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fcec60"/>
        <function-ref name="getRaw" scoped="" ref="0x100fcede8"/>
        <function-ref name="set" scoped="" ref="0x100fcd020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fcd1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fcd330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fcd5b8"/>
        <function-ref name="clr" scoped="" ref="0x100fcd740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fca748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fca748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fcaa98"/>
        <function-ref name="isInput" scoped="" ref="0x100fcac20"/>
        <function-ref name="setResistor" scoped="" ref="0x100fcada8"/>
        <function-ref name="toggle" scoped="" ref="0x100fc9020"/>
        <function-ref name="isOutput" scoped="" ref="0x100fc91a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100fc9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fc94b8"/>
        <function-ref name="get" scoped="" ref="0x100fc9640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fc97c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100fc9950"/>
        <function-ref name="set" scoped="" ref="0x100fc9ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fc9c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fc9de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fc8120"/>
        <function-ref name="clr" scoped="" ref="0x100fc82a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fe63e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fe63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fe6730"/>
        <function-ref name="isInput" scoped="" ref="0x100fe68b8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fe6a40"/>
        <function-ref name="toggle" scoped="" ref="0x100fe6bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fe6d50"/>
        <function-ref name="getResistor" scoped="" ref="0x100fe5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fe51a8"/>
        <function-ref name="get" scoped="" ref="0x100fe5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fe54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x100fe5640"/>
        <function-ref name="set" scoped="" ref="0x100fe57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fe5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fe5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fe5d60"/>
        <function-ref name="clr" scoped="" ref="0x100fe4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fe1020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fe1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fe1370"/>
        <function-ref name="isInput" scoped="" ref="0x100fe14f8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fe1680"/>
        <function-ref name="toggle" scoped="" ref="0x100fe1808"/>
        <function-ref name="isOutput" scoped="" ref="0x100fe1990"/>
        <function-ref name="getResistor" scoped="" ref="0x100fe1b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fe1ca0"/>
        <function-ref name="get" scoped="" ref="0x100fe1e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fe0020"/>
        <function-ref name="getRaw" scoped="" ref="0x100fe01a8"/>
        <function-ref name="set" scoped="" ref="0x100fe0330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fe04b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fe0640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fe08c8"/>
        <function-ref name="clr" scoped="" ref="0x100fe0a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fddca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fddca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fdc020"/>
        <function-ref name="isInput" scoped="" ref="0x100fdc1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fdc330"/>
        <function-ref name="toggle" scoped="" ref="0x100fdc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fdc640"/>
        <function-ref name="getResistor" scoped="" ref="0x100fdc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fdc950"/>
        <function-ref name="get" scoped="" ref="0x100fdcad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fdcc60"/>
        <function-ref name="getRaw" scoped="" ref="0x100fdcde8"/>
        <function-ref name="set" scoped="" ref="0x100fdb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100fdb1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100fdb330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100fdb5b8"/>
        <function-ref name="clr" scoped="" ref="0x100fdb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fd8748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fd8748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fd8a98"/>
        <function-ref name="isInput" scoped="" ref="0x100fd8c20"/>
        <function-ref name="setResistor" scoped="" ref="0x100fd8da8"/>
        <function-ref name="toggle" scoped="" ref="0x100ffa020"/>
        <function-ref name="isOutput" scoped="" ref="0x100ffa1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x100ffa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ffa4b8"/>
        <function-ref name="get" scoped="" ref="0x100ffa640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ffa7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x100ffa950"/>
        <function-ref name="set" scoped="" ref="0x100ffaad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ffac60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ffade8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ff9120"/>
        <function-ref name="clr" scoped="" ref="0x100ff92a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100ff63e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100ff63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ff6730"/>
        <function-ref name="isInput" scoped="" ref="0x100ff68b8"/>
        <function-ref name="setResistor" scoped="" ref="0x100ff6a40"/>
        <function-ref name="toggle" scoped="" ref="0x100ff6bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x100ff6d50"/>
        <function-ref name="getResistor" scoped="" ref="0x100ff5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ff51a8"/>
        <function-ref name="get" scoped="" ref="0x100ff5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ff54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x100ff5640"/>
        <function-ref name="set" scoped="" ref="0x100ff57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ff5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ff5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ff5d60"/>
        <function-ref name="clr" scoped="" ref="0x100ff4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100ff1020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100ff1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ff1370"/>
        <function-ref name="isInput" scoped="" ref="0x100ff14f8"/>
        <function-ref name="setResistor" scoped="" ref="0x100ff1680"/>
        <function-ref name="toggle" scoped="" ref="0x100ff1808"/>
        <function-ref name="isOutput" scoped="" ref="0x100ff1990"/>
        <function-ref name="getResistor" scoped="" ref="0x100ff1b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ff1ca0"/>
        <function-ref name="get" scoped="" ref="0x100ff1e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ff0020"/>
        <function-ref name="getRaw" scoped="" ref="0x100ff01a8"/>
        <function-ref name="set" scoped="" ref="0x100ff0330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ff04b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ff0640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ff08c8"/>
        <function-ref name="clr" scoped="" ref="0x100ff0a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100fedca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100fedca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100fec020"/>
        <function-ref name="isInput" scoped="" ref="0x100fec1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100fec330"/>
        <function-ref name="toggle" scoped="" ref="0x100fec4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100fec640"/>
        <function-ref name="getResistor" scoped="" ref="0x100fec7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100fec950"/>
        <function-ref name="get" scoped="" ref="0x100fecad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100fecc60"/>
        <function-ref name="getRaw" scoped="" ref="0x100fecde8"/>
        <function-ref name="set" scoped="" ref="0x100feb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100feb1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100feb330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100feb5b8"/>
        <function-ref name="clr" scoped="" ref="0x100feb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10100c748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10100c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10100ca98"/>
        <function-ref name="isInput" scoped="" ref="0x10100cc20"/>
        <function-ref name="setResistor" scoped="" ref="0x10100cda8"/>
        <function-ref name="toggle" scoped="" ref="0x10100a020"/>
        <function-ref name="isOutput" scoped="" ref="0x10100a1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10100a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10100a4b8"/>
        <function-ref name="get" scoped="" ref="0x10100a640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10100a7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10100a950"/>
        <function-ref name="set" scoped="" ref="0x10100aad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10100ac60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10100ade8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101009120"/>
        <function-ref name="clr" scoped="" ref="0x1010092a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1010063e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1010063e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101006730"/>
        <function-ref name="isInput" scoped="" ref="0x1010068b8"/>
        <function-ref name="setResistor" scoped="" ref="0x101006a40"/>
        <function-ref name="toggle" scoped="" ref="0x101006bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x101006d50"/>
        <function-ref name="getResistor" scoped="" ref="0x101005020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1010051a8"/>
        <function-ref name="get" scoped="" ref="0x101005330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1010054b8"/>
        <function-ref name="getRaw" scoped="" ref="0x101005640"/>
        <function-ref name="set" scoped="" ref="0x1010057c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101005950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101005ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101005d60"/>
        <function-ref name="clr" scoped="" ref="0x101004020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101001020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101001020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101001370"/>
        <function-ref name="isInput" scoped="" ref="0x1010014f8"/>
        <function-ref name="setResistor" scoped="" ref="0x101001680"/>
        <function-ref name="toggle" scoped="" ref="0x101001808"/>
        <function-ref name="isOutput" scoped="" ref="0x101001990"/>
        <function-ref name="getResistor" scoped="" ref="0x101001b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x101001ca0"/>
        <function-ref name="get" scoped="" ref="0x101001e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101000020"/>
        <function-ref name="getRaw" scoped="" ref="0x1010001a8"/>
        <function-ref name="set" scoped="" ref="0x101000330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1010004b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101000640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1010008c8"/>
        <function-ref name="clr" scoped="" ref="0x101000a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x100ffdca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x100ffdca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x100ffc020"/>
        <function-ref name="isInput" scoped="" ref="0x100ffc1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x100ffc330"/>
        <function-ref name="toggle" scoped="" ref="0x100ffc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x100ffc640"/>
        <function-ref name="getResistor" scoped="" ref="0x100ffc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x100ffc950"/>
        <function-ref name="get" scoped="" ref="0x100ffcad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x100ffcc60"/>
        <function-ref name="getRaw" scoped="" ref="0x100ffcde8"/>
        <function-ref name="set" scoped="" ref="0x100ffb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x100ffb1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x100ffb330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x100ffb5b8"/>
        <function-ref name="clr" scoped="" ref="0x100ffb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10101c748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10101c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10101ca98"/>
        <function-ref name="isInput" scoped="" ref="0x10101cc20"/>
        <function-ref name="setResistor" scoped="" ref="0x10101cda8"/>
        <function-ref name="toggle" scoped="" ref="0x10101b020"/>
        <function-ref name="isOutput" scoped="" ref="0x10101b1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10101b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10101b4b8"/>
        <function-ref name="get" scoped="" ref="0x10101b640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10101b7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10101b950"/>
        <function-ref name="set" scoped="" ref="0x10101bad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10101bc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10101bde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10101a120"/>
        <function-ref name="clr" scoped="" ref="0x10101a2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1010173e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1010173e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101017730"/>
        <function-ref name="isInput" scoped="" ref="0x1010178b8"/>
        <function-ref name="setResistor" scoped="" ref="0x101017a40"/>
        <function-ref name="toggle" scoped="" ref="0x101017bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x101017d50"/>
        <function-ref name="getResistor" scoped="" ref="0x101016020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1010161a8"/>
        <function-ref name="get" scoped="" ref="0x101016330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1010164b8"/>
        <function-ref name="getRaw" scoped="" ref="0x101016640"/>
        <function-ref name="set" scoped="" ref="0x1010167c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101016950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101016ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101016d60"/>
        <function-ref name="clr" scoped="" ref="0x101015020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101012020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101012020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101012370"/>
        <function-ref name="isInput" scoped="" ref="0x1010124f8"/>
        <function-ref name="setResistor" scoped="" ref="0x101012680"/>
        <function-ref name="toggle" scoped="" ref="0x101012808"/>
        <function-ref name="isOutput" scoped="" ref="0x101012990"/>
        <function-ref name="getResistor" scoped="" ref="0x101012b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x101012ca0"/>
        <function-ref name="get" scoped="" ref="0x101012e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101011020"/>
        <function-ref name="getRaw" scoped="" ref="0x1010111a8"/>
        <function-ref name="set" scoped="" ref="0x101011330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1010114b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101011640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1010118c8"/>
        <function-ref name="clr" scoped="" ref="0x101011a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10100eca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10100eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10100d020"/>
        <function-ref name="isInput" scoped="" ref="0x10100d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10100d330"/>
        <function-ref name="toggle" scoped="" ref="0x10100d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10100d640"/>
        <function-ref name="getResistor" scoped="" ref="0x10100d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10100d950"/>
        <function-ref name="get" scoped="" ref="0x10100dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10100dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10100dde8"/>
        <function-ref name="set" scoped="" ref="0x101030020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1010301a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101030330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1010305b8"/>
        <function-ref name="clr" scoped="" ref="0x101030740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10102d748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10102d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10102da98"/>
        <function-ref name="isInput" scoped="" ref="0x10102dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x10102dda8"/>
        <function-ref name="toggle" scoped="" ref="0x10102b020"/>
        <function-ref name="isOutput" scoped="" ref="0x10102b1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10102b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10102b4b8"/>
        <function-ref name="get" scoped="" ref="0x10102b640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10102b7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10102b950"/>
        <function-ref name="set" scoped="" ref="0x10102bad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10102bc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10102bde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10102a120"/>
        <function-ref name="clr" scoped="" ref="0x10102a2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1010273e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1010273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101027730"/>
        <function-ref name="isInput" scoped="" ref="0x1010278b8"/>
        <function-ref name="setResistor" scoped="" ref="0x101027a40"/>
        <function-ref name="toggle" scoped="" ref="0x101027bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x101027d50"/>
        <function-ref name="getResistor" scoped="" ref="0x101026020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1010261a8"/>
        <function-ref name="get" scoped="" ref="0x101026330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1010264b8"/>
        <function-ref name="getRaw" scoped="" ref="0x101026640"/>
        <function-ref name="set" scoped="" ref="0x1010267c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101026950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101026ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101026d60"/>
        <function-ref name="clr" scoped="" ref="0x101025020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101022020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101022020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101022370"/>
        <function-ref name="isInput" scoped="" ref="0x1010224f8"/>
        <function-ref name="setResistor" scoped="" ref="0x101022680"/>
        <function-ref name="toggle" scoped="" ref="0x101022808"/>
        <function-ref name="isOutput" scoped="" ref="0x101022990"/>
        <function-ref name="getResistor" scoped="" ref="0x101022b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x101022ca0"/>
        <function-ref name="get" scoped="" ref="0x101022e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101021020"/>
        <function-ref name="getRaw" scoped="" ref="0x1010211a8"/>
        <function-ref name="set" scoped="" ref="0x101021330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1010214b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101021640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1010218c8"/>
        <function-ref name="clr" scoped="" ref="0x101021a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101042ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101042ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101041020"/>
        <function-ref name="isInput" scoped="" ref="0x1010411a8"/>
        <function-ref name="setResistor" scoped="" ref="0x101041330"/>
        <function-ref name="toggle" scoped="" ref="0x1010414b8"/>
        <function-ref name="isOutput" scoped="" ref="0x101041640"/>
        <function-ref name="getResistor" scoped="" ref="0x1010417c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x101041950"/>
        <function-ref name="get" scoped="" ref="0x101041ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101041c60"/>
        <function-ref name="getRaw" scoped="" ref="0x101041de8"/>
        <function-ref name="set" scoped="" ref="0x101040020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1010401a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101040330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1010405b8"/>
        <function-ref name="clr" scoped="" ref="0x101040740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x101094a90" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x101094a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101094de0"/>
        <function-ref name="isInput" scoped="" ref="0x1010a9020"/>
        <function-ref name="setResistor" scoped="" ref="0x1010a91a8"/>
        <function-ref name="toggle" scoped="" ref="0x1010a9330"/>
        <function-ref name="isOutput" scoped="" ref="0x1010a94b8"/>
        <function-ref name="getResistor" scoped="" ref="0x1010a9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1010a97c8"/>
        <function-ref name="get" scoped="" ref="0x1010a9950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1010a9ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x1010a9c60"/>
        <function-ref name="set" scoped="" ref="0x1010a9de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1010a8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1010a81a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1010a8430"/>
        <function-ref name="clr" scoped="" ref="0x1010a85b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x101095958" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x101095958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101095ca8"/>
        <function-ref name="isInput" scoped="" ref="0x101095e30"/>
        <function-ref name="toggle" scoped="" ref="0x101094020"/>
        <function-ref name="isOutput" scoped="" ref="0x1010941a8"/>
        <function-ref name="get" scoped="" ref="0x101094330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1010944b8"/>
        <function-ref name="set" scoped="" ref="0x101094640"/>
        <function-ref name="clr" scoped="" ref="0x1010947c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1010a52e8" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1010a52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1010a5638"/>
        <function-ref name="isInput" scoped="" ref="0x1010a57c0"/>
        <function-ref name="setResistor" scoped="" ref="0x1010a5948"/>
        <function-ref name="toggle" scoped="" ref="0x1010a5ad0"/>
        <function-ref name="isOutput" scoped="" ref="0x1010a5c58"/>
        <function-ref name="getResistor" scoped="" ref="0x1010a5de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1010a4020"/>
        <function-ref name="get" scoped="" ref="0x1010a41a8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1010a4330"/>
        <function-ref name="getRaw" scoped="" ref="0x1010a44b8"/>
        <function-ref name="set" scoped="" ref="0x1010a4640"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1010a47c8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1010a4950"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1010a4bd8"/>
        <function-ref name="clr" scoped="" ref="0x1010a4d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1010a60e0" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1010a60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1010a6430"/>
        <function-ref name="isInput" scoped="" ref="0x1010a65b8"/>
        <function-ref name="toggle" scoped="" ref="0x1010a6740"/>
        <function-ref name="isOutput" scoped="" ref="0x1010a68c8"/>
        <function-ref name="get" scoped="" ref="0x1010a6a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1010a6bd8"/>
        <function-ref name="set" scoped="" ref="0x1010a6d60"/>
        <function-ref name="clr" scoped="" ref="0x1010a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1010a0a90" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1010a0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1010a0de0"/>
        <function-ref name="isInput" scoped="" ref="0x1010c5020"/>
        <function-ref name="setResistor" scoped="" ref="0x1010c51a8"/>
        <function-ref name="toggle" scoped="" ref="0x1010c5330"/>
        <function-ref name="isOutput" scoped="" ref="0x1010c54b8"/>
        <function-ref name="getResistor" scoped="" ref="0x1010c5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1010c57c8"/>
        <function-ref name="get" scoped="" ref="0x1010c5950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1010c5ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x1010c5c60"/>
        <function-ref name="set" scoped="" ref="0x1010c5de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1010c4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1010c41a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1010c4430"/>
        <function-ref name="clr" scoped="" ref="0x1010c45b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1010a2958" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1010a2958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1010a2ca8"/>
        <function-ref name="isInput" scoped="" ref="0x1010a2e30"/>
        <function-ref name="toggle" scoped="" ref="0x1010a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x1010a01a8"/>
        <function-ref name="get" scoped="" ref="0x1010a0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1010a04b8"/>
        <function-ref name="set" scoped="" ref="0x1010a0640"/>
        <function-ref name="clr" scoped="" ref="0x1010a07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1010b9a60" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliC.nc">
      <component-ref qname="PrintAppC.TimerPrint"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1010b9a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10125cd60"/>
        <function-ref name="fired" scoped="" ref="0x10125e470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10125c1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10125ed10"/>
        <function-ref name="getdt" scoped="" ref="0x10125b648"/>
        <function-ref name="gett0" scoped="" ref="0x10125b1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x10125e8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10125f620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10125c790"/>
        <function-ref name="startOneShot" scoped="" ref="0x10125fac0"/>
        <function-ref name="stop" scoped="" ref="0x10125e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x1010d55b8" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x1010d55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1010d18f0"/>
        <function-ref name="fired" scoped="" ref="0x1010d3020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1010d3d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x1010d38c0"/>
        <function-ref name="getdt" scoped="" ref="0x1010d01c0"/>
        <function-ref name="gett0" scoped="" ref="0x1010d1d40"/>
        <function-ref name="isRunning" scoped="" ref="0x1010d3470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1010d4158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1010d1320"/>
        <function-ref name="startOneShot" scoped="" ref="0x1010d45f8"/>
        <function-ref name="stop" scoped="" ref="0x1010d4a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x1010cdd18" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x1010cdd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1010c8088"/>
        <function-ref name="fired" scoped="" ref="0x1010ca688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1010c9470"/>
        <function-ref name="isOneShot" scoped="" ref="0x1010c9020"/>
        <function-ref name="getdt" scoped="" ref="0x1010c8928"/>
        <function-ref name="gett0" scoped="" ref="0x1010c84d8"/>
        <function-ref name="isRunning" scoped="" ref="0x1010caad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1010cb8b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1010c9a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x1010cbd58"/>
        <function-ref name="stop" scoped="" ref="0x1010ca238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x1010e9338" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x1010e9338"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1010eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1010cd020" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1010cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1010cd370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1011c6c00" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1011c6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1011c2410"/>
        <function-ref name="fired" scoped="" ref="0x1011c44a8"/>
        <function-ref name="startAt" scoped="" ref="0x1011c4db8"/>
        <function-ref name="isRunning" scoped="" ref="0x1011c4930"/>
        <function-ref name="getAlarm" scoped="" ref="0x1011c2898"/>
        <function-ref name="start" scoped="" ref="0x1011c59f0"/>
        <function-ref name="stop" scoped="" ref="0x1011c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1011c6418" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1011c6418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1011c6768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10189c808" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10189c808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101899020"/>
        <function-ref name="fired" scoped="" ref="0x10189a020"/>
        <function-ref name="startAt" scoped="" ref="0x10189a930"/>
        <function-ref name="isRunning" scoped="" ref="0x10189a4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x1018994a8"/>
        <function-ref name="start" scoped="" ref="0x10189b598"/>
        <function-ref name="stop" scoped="" ref="0x10189ba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10189c020" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10189c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10189c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1018ca020" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1018ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1018ca370"/>
        <function-ref name="setEvent" scoped="" ref="0x1018ca4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1018ca680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1018ca808"/>
        <function-ref name="fired" scoped="" ref="0x1018ca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x1018cd5e0" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1018cd5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1018cd930"/>
        <function-ref name="setClockSource" scoped="" ref="0x1018cdab8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1018cdc40"/>
        <function-ref name="get" scoped="" ref="0x1018cddc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x1018cc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1018cc1a8"/>
        <function-ref name="getMode" scoped="" ref="0x1018cc330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1018cc4b8"/>
        <function-ref name="overflow" scoped="" ref="0x1018cc640"/>
        <function-ref name="setMode" scoped="" ref="0x1018cc7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1018cc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1018ccbd8" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1018ccbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1018cb020"/>
        <function-ref name="getControl" scoped="" ref="0x1018cb1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1018cb330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1018cb4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1018cb640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1018cb7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1018cb950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1018cbad8"/>
        <function-ref name="setControl" scoped="" ref="0x1018cbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1010ee510" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1010ee510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1010ee860"/>
        <function-ref name="setEvent" scoped="" ref="0x1010ee9e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1010eeb70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1010eecf8"/>
        <function-ref name="fired" scoped="" ref="0x1010eee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x1010f21c8" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1010f21c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1010f2518"/>
        <function-ref name="setClockSource" scoped="" ref="0x1010f26a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1010f2828"/>
        <function-ref name="get" scoped="" ref="0x1010f29b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1010f2b38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1010f2cc0"/>
        <function-ref name="getMode" scoped="" ref="0x1010f2e48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1010f1020"/>
        <function-ref name="overflow" scoped="" ref="0x1010f11a8"/>
        <function-ref name="setMode" scoped="" ref="0x1010f1330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1010f14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1010f1ce8" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1010f1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1010ef0a0"/>
        <function-ref name="getControl" scoped="" ref="0x1010ef228"/>
        <function-ref name="enableEvents" scoped="" ref="0x1010ef3b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1010ef538"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1010ef6c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1010ef848"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1010ef9d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1010efb58"/>
        <function-ref name="setControl" scoped="" ref="0x1010efce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x1018c18c8" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1018c18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1018c1c18"/>
        <function-ref name="setEvent" scoped="" ref="0x1018c1da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1018c0020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1018c01a8"/>
        <function-ref name="fired" scoped="" ref="0x1018c0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x1018c3020" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1018c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1018c3370"/>
        <function-ref name="setClockSource" scoped="" ref="0x1018c34f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1018c3680"/>
        <function-ref name="get" scoped="" ref="0x1018c3808"/>
        <function-ref name="disableEvents" scoped="" ref="0x1018c3990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1018c3b18"/>
        <function-ref name="getMode" scoped="" ref="0x1018c3ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1018c3e28"/>
        <function-ref name="overflow" scoped="" ref="0x1018c2020"/>
        <function-ref name="setMode" scoped="" ref="0x1018c21a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1018c2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1018c7020" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1018c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1018c4690"/>
        <function-ref name="fired" scoped="" ref="0x1018c56f8"/>
        <function-ref name="startAt" scoped="" ref="0x1018c4088"/>
        <function-ref name="isRunning" scoped="" ref="0x1018c5b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x1018c4b18"/>
        <function-ref name="start" scoped="" ref="0x1018c7d70"/>
        <function-ref name="stop" scoped="" ref="0x1018c5270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1018c87a8" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1018c87a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1018c8af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x1018c25b8" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1018c25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1018c2908"/>
        <function-ref name="getControl" scoped="" ref="0x1018c2a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x1018c2c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1018c2da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1018c1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1018c11a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1018c1330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1018c14b8"/>
        <function-ref name="setControl" scoped="" ref="0x1018c1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1011419b0" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1011419b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101145730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101144088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101145bb8"/>
        <function-ref name="overflow" scoped="" ref="0x101144510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x10113f7e8" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10113f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101164578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101162020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101164a00"/>
        <function-ref name="overflow" scoped="" ref="0x1011624a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x101153d48" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x101153d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10117a0d8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10117a260"/>
        <function-ref name="enableEvents" scoped="" ref="0x10117a3e8"/>
        <function-ref name="get" scoped="" ref="0x10117a570"/>
        <function-ref name="disableEvents" scoped="" ref="0x10117a6f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10117a880"/>
        <function-ref name="getMode" scoped="" ref="0x10117aa08"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10117ab90"/>
        <function-ref name="overflow" scoped="" ref="0x10117ad18"/>
        <function-ref name="setMode" scoped="" ref="0x101179020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1011791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x101160db8" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x101160db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10115fb38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1011534a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101153020"/>
        <function-ref name="overflow" scoped="" ref="0x101153930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x101184b10" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x101184b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1011838f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101182230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101183d80"/>
        <function-ref name="overflow" scoped="" ref="0x1011826b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x101176878" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x101176878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101186660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101184020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101186ae8"/>
        <function-ref name="overflow" scoped="" ref="0x1011844a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x101896830" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x101896830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101893020"/>
        <function-ref name="fired" scoped="" ref="0x101894020"/>
        <function-ref name="startAt" scoped="" ref="0x101894930"/>
        <function-ref name="isRunning" scoped="" ref="0x1018944a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x1018934a8"/>
        <function-ref name="start" scoped="" ref="0x1018955e0"/>
        <function-ref name="stop" scoped="" ref="0x101895ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x101891ce8" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x101891ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a788"/>
            <typename><typedef-ref name="T32khz" ref="0x100e1aae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1018d3410"/>
        <function-ref name="fired" scoped="" ref="0x1018d44a8"/>
        <function-ref name="startAt" scoped="" ref="0x1018d4db8"/>
        <function-ref name="isRunning" scoped="" ref="0x1018d4930"/>
        <function-ref name="getAlarm" scoped="" ref="0x1018d3898"/>
        <function-ref name="start" scoped="" ref="0x10188fac0"/>
        <function-ref name="stop" scoped="" ref="0x1018d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x101893ad0" loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x101893ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101892860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1018911f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101892ce8"/>
        <function-ref name="overflow" scoped="" ref="0x101891680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x1011e6020" loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x1011e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1011e6370"/>
        <function-ref name="runTask" scoped="" ref="0x1011e64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x1011e9020" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1011e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1011e7690"/>
        <function-ref name="fired" scoped="" ref="0x1011e86f8"/>
        <function-ref name="startAt" scoped="" ref="0x1011e7088"/>
        <function-ref name="isRunning" scoped="" ref="0x1011e8b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x1011e7b18"/>
        <function-ref name="start" scoped="" ref="0x1011e9d70"/>
        <function-ref name="stop" scoped="" ref="0x1011e8270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1011bfd88" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1011bfd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1011eb088"/>
        <function-ref name="fired" scoped="" ref="0x1011ed6c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1011ec470"/>
        <function-ref name="isOneShot" scoped="" ref="0x1011ec020"/>
        <function-ref name="getdt" scoped="" ref="0x1011eb928"/>
        <function-ref name="gett0" scoped="" ref="0x1011eb4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x1011edb18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1011ee908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1011eca40"/>
        <function-ref name="startOneShot" scoped="" ref="0x1011eeda8"/>
        <function-ref name="stop" scoped="" ref="0x1011ed278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x101247478" loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x101247478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1012477c8"/>
        <function-ref name="runTask" scoped="" ref="0x101247950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x10124c208" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x10124c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1012495f0"/>
        <function-ref name="fired" scoped="" ref="0x10124bb28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10124a8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10124a470"/>
        <function-ref name="getdt" scoped="" ref="0x101247020"/>
        <function-ref name="gett0" scoped="" ref="0x101249a40"/>
        <function-ref name="isRunning" scoped="" ref="0x10124a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10124cd50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x101249020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10124b238"/>
        <function-ref name="stop" scoped="" ref="0x10124b6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x101226020" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101226020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10124e358"/>
        <function-ref name="fired" scoped="" ref="0x1012519b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10124f748"/>
        <function-ref name="isOneShot" scoped="" ref="0x10124f2d8"/>
        <function-ref name="getdt" scoped="" ref="0x10124ec38"/>
        <function-ref name="gett0" scoped="" ref="0x10124e7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x101251e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x101226b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10124fd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x101251088"/>
        <function-ref name="stop" scoped="" ref="0x101251548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x101245c38" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x101245c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101244820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x101244e48" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x101244e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x100e1a020"/>
            <typename><typedef-ref name="TMilli" ref="0x100e1a378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101266be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101265548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1012650c0"/>
        <function-ref name="overflow" scoped="" ref="0x1012659d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x100c36c10" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100a0a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x100c37808" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x100c49020" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x100c4c3e0" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x100c4b920" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x100c4dd20" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x100c4caf0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x100c4d020" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x100c4d6a0" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x100c4b258" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x100c29e00" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x100ae75d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x100cb6338" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x100cb60c8" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x100cba770" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x100c7c170"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x100c7cba8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x100cb6b40" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x100cb5980" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x100cb79a0" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x100cb5258" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x100cb9020" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x100cb9748" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x100cb7290" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x100c7c170"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x100c7cba8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x100cb7020" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x100c7c170"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x100c7cba8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x100cc2e60" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x100cd2290" loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x100cd2020" loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x100cd2da0" loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x100cd2b30" loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x100cd3868" loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x100cd30d8" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x100cd47c0" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x100cd4550" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x100cc5328" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x100cc5c30" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x100cc59c0" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x100cc45c8" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x100cc4358" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x100cc3020" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x100cc4ca8" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x100cc36a8" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x100caa0d8" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x100cbe828" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x100cbe5b8" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x100caa7a8" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x100cad540" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x100caae80" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x100cac378" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x100cab9d0" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x100cadc70" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x100caca20" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x100cab338" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x100cab0c8" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x100cbd290" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x100cbd020" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100781b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x100cf2418" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x100c05690" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x100c28760" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1009679c8" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x100a008b0" loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x100a00110" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x100a07608" loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100a0a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x100a07df8" loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x100e18948" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x100e18948"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x100e2d328" loc="136:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x100e16e68" loc="83:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x100e2fad8" loc="114:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x100e2f540" loc="114:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x100e2f858" loc="114:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x100e15da8" loc="98:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x100e2c290" loc="151:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x100e2da48" loc="144:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x100e15610" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x100e174a0" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x100e17230" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x100e2e9e0" loc="129:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x100e2e448" loc="129:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x100e2e760" loc="129:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x100e16020" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x100e17c70" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x100e167c8" loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x100e22070" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x100e227a8" loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x100e21020" loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x100e21e70" loc="83:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x100e1e480" loc="100:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="96:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x100e1ec18" loc="117:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x100e21738" loc="77:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x100e1d768" loc="134:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="120:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x100e1d4f8" loc="134:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x100e07900" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x100e20608" loc="89:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x100e20d20" loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
        <documentation loc="91:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x100e32828" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x100e31020" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x100e34a90" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x100e31db0" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x100e32178" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x100e316d8" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x100e37d50" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x100e34400" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x100e5c020" loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x100e5c708" loc="80:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x100e75cd0" loc="110:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100a0a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x100e75a60" loc="110:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x100e5f938" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x100e5b510" loc="87:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x100e74580" loc="117:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x100e5cde0" loc="85:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x100e5d870" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x100e77a90" loc="99:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x100e5d0d8" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100781790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x100e62b28" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x100e5bc28" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x100e75258" loc="101:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x100e773a0" loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x100e5f258" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1010c6568" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1010c6568"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1010c6df8" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100782020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1010e6e30" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1010e6e30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1010e30c8" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1010e30c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x1010e0958" loc="109:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1010e30c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1010e2af0" loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x1010e0020" loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1010e30c8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1010e30c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1010e1a40" loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1010e30c8"/></type-var>
          </variable>
          <variable name="dt" ref="0x1010e1d60" loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1010e30c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x1010e1290" loc="88:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x1010de110" loc="116:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1010e30c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1010e3b88" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1010e30c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1010e3918" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1010e30c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1010e23a0" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1011430f0" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1011430f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x101143320" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x101143320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x101143bb8" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x101143320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x101142c80" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x101142490" loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1009fac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1011413a0" loc="82:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsourceNXT_test/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
