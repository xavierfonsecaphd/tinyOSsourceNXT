<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="48:TestTmp102AppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10b6ee020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10b72d0f0"/></to>
    </wire>
    <wire loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10b72d0f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10b729930"/></to>
    </wire>
    <wire loc="49:TestTmp102AppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10b6ed5a8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10b53f3e0"/></to>
    </wire>
    <wire loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10b53f3e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10b5408c0"/></to>
    </wire>
    <wire loc="51:TestTmp102AppC.nc">
      <from><interface-ref name="TestTimer" scoped="" ref="0x10b70f598"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b9b3a60"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b9b3a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10b9d17d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:TestTmp102AppC.nc">
      <from><interface-ref name="TempSensor" scoped="" ref="0x10b724810"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x10be1be28"/></to>
    </wire>
    <wire loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102C.nc">
      <from><interface-ref name="Read" scoped="" ref="0x10be1be28"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x10bb53020"/></to>
    </wire>
    <wire loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10b53e808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10c5b8100"/></to>
    </wire>
    <wire loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10b53e808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10b9c80f0"/></to>
    </wire>
    <wire loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10b6e1020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10b2e6be8"/></to>
    </wire>
    <wire loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10b2e6be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10b4ef660"/></to>
    </wire>
    <wire loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x10b6e19f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10b541720"/></to>
    </wire>
    <wire loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10b541720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10b53c528"/></to>
    </wire>
    <wire loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10b6e0140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x10b53e808"/></to>
    </wire>
    <wire loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x10b53cc08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10b53b570"/></to>
    </wire>
    <wire loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10b53b570"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10b56f610"/></to>
    </wire>
    <wire loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x10b539370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10b7578f8"/></to>
    </wire>
    <wire loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x10b556980"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x10b56fc80"/></to>
    </wire>
    <wire loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x10b50b2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x10b56ee08"/></to>
    </wire>
    <wire loc="113:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x10b5b5a20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b6776a0"/></to>
    </wire>
    <wire loc="126:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x10b5cbba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b689820"/></to>
    </wire>
    <wire loc="108:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x10b5bc3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b67c470"/></to>
    </wire>
    <wire loc="149:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x10b5e7020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b68b780"/></to>
    </wire>
    <wire loc="107:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x10b5c2d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b67d780"/></to>
    </wire>
    <wire loc="148:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x10b5d76e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b68caa0"/></to>
    </wire>
    <wire loc="170:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x10b5e4020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b6a8780"/></to>
    </wire>
    <wire loc="154:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x10b5dd020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b69f820"/></to>
    </wire>
    <wire loc="99:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x10b5c51b0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b66c210"/></to>
    </wire>
    <wire loc="135:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x10b5e9020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b680780"/></to>
    </wire>
    <wire loc="134:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x10b5d9a70"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b681aa0"/></to>
    </wire>
    <wire loc="133:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x10b5c9060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b682820"/></to>
    </wire>
    <wire loc="115:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x10b5bb3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b675780"/></to>
    </wire>
    <wire loc="156:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x10b5e6020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b69d780"/></to>
    </wire>
    <wire loc="140:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x10b5c8588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b694820"/></to>
    </wire>
    <wire loc="114:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x10b5c1aa8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b676a90"/></to>
    </wire>
    <wire loc="93:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x10b5b8b88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b610798"/></to>
    </wire>
    <wire loc="155:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x10b5d6558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b69eaa0"/></to>
    </wire>
    <wire loc="106:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x10b5b6588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b6643d8"/></to>
    </wire>
    <wire loc="161:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x10b5dc400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b698820"/></to>
    </wire>
    <wire loc="101:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x10b5cd4e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b6692e8"/></to>
    </wire>
    <wire loc="142:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x10b5e8020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b692780"/></to>
    </wire>
    <wire loc="100:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x10b5c2020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b66b5f8"/></to>
    </wire>
    <wire loc="141:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x10b5d8868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b693aa0"/></to>
    </wire>
    <wire loc="163:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x10b5e5020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b6b0780"/></to>
    </wire>
    <wire loc="147:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x10b5c7a20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b68d820"/></to>
    </wire>
    <wire loc="120:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x10b5cc398"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b6211e8"/></to>
    </wire>
    <wire loc="162:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x10b5d43d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b6b1aa0"/></to>
    </wire>
    <wire loc="128:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x10b5d2060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10b687780"/></to>
    </wire>
    <wire loc="169:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x10b5d3120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b6a9aa0"/></to>
    </wire>
    <wire loc="127:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x10b5dad00"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10b688aa0"/></to>
    </wire>
    <wire loc="168:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x10b5db898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10b6aa820"/></to>
    </wire>
    <wire loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10b60e658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b60e020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10b60ec70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x10b6bb0e8"/></to>
    </wire>
    <wire loc="96:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10b6252e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x10b6bb830"/></to>
    </wire>
    <wire loc="102:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b668100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b610798"/></to>
    </wire>
    <wire loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b667780"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b60e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b67b2e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b610798"/></to>
    </wire>
    <wire loc="110:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b67a908"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b60e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b6735f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b610798"/></to>
    </wire>
    <wire loc="117:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b672c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b60e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10b61f020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b6208a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10b61f638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x10b6ba020"/></to>
    </wire>
    <wire loc="123:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10b61fc50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x10b6ba768"/></to>
    </wire>
    <wire loc="129:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b6865f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b6211e8"/></to>
    </wire>
    <wire loc="130:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b685c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b6208a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b67e5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b6211e8"/></to>
    </wire>
    <wire loc="137:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b697c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b6208a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b6915f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b6211e8"/></to>
    </wire>
    <wire loc="144:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b690c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b6208a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b6a45f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b6211e8"/></to>
    </wire>
    <wire loc="151:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b6a2c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b6208a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b69c5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b6211e8"/></to>
    </wire>
    <wire loc="158:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b69bc18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b6208a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b6af5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b6211e8"/></to>
    </wire>
    <wire loc="165:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b6adc18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b6208a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10b6a75f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10b6211e8"/></to>
    </wire>
    <wire loc="172:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10b6a6c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10b6208a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x10b2f8728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10b4ee4d0"/></to>
    </wire>
    <wire loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x10b4eb998"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x10b435698"/></to>
    </wire>
    <wire loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10b7578f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10b729368"/></to>
    </wire>
    <wire loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10b73dc58"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x10b72a4c8"/></to>
    </wire>
    <wire loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10b72a4c8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10b990958"/></to>
    </wire>
    <wire loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10b726df0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x10b759688"/></to>
    </wire>
    <wire loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10b759688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10b9a10e0"/></to>
    </wire>
    <wire loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10b73c020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x10b758810"/></to>
    </wire>
    <wire loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10b758810"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10b99c958"/></to>
    </wire>
    <wire loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10b98fa90"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x10b7b5568"/></to>
    </wire>
    <wire loc="486:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x10b7b5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b904748"/></to>
    </wire>
    <wire loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10b9a02e8"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x10b7b1568"/></to>
    </wire>
    <wire loc="488:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x10b7b1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8fa020"/></to>
    </wire>
    <wire loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10b99ba90"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x10b7b3568"/></to>
    </wire>
    <wire loc="487:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x10b7b3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8ff3e0"/></to>
    </wire>
    <wire loc="442:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x10b761c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b848748"/></to>
    </wire>
    <wire loc="455:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x10b788568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b87c020"/></to>
    </wire>
    <wire loc="596:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x10b7fc558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b91b020"/></to>
    </wire>
    <wire loc="584:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1STE" scoped="" ref="0x10b7f3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8d0748"/></to>
    </wire>
    <wire loc="460:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x10b784568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b895748"/></to>
    </wire>
    <wire loc="473:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x10b78e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8ca020"/></to>
    </wire>
    <wire loc="497:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x10b7c3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b925748"/></to>
    </wire>
    <wire loc="590:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x10b7e9558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b915748"/></to>
    </wire>
    <wire loc="602:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x10b814560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b917ca8"/></to>
    </wire>
    <wire loc="445:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x10b7797f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b85bca8"/></to>
    </wire>
    <wire loc="562:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0CLK" scoped="" ref="0x10b7bb5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b895748"/></to>
    </wire>
    <wire loc="580:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1SIMO" scoped="" ref="0x10b7d9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8bb020"/></to>
    </wire>
    <wire loc="450:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x10b774568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8733e0"/></to>
    </wire>
    <wire loc="463:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x10b77e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8a9ca8"/></to>
    </wire>
    <wire loc="476:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x10b7a6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8de3e0"/></to>
    </wire>
    <wire loc="489:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x10b7af568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8f6ca8"/></to>
    </wire>
    <wire loc="500:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x10b7bd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b917ca8"/></to>
    </wire>
    <wire loc="440:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x10b764020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b851020"/></to>
    </wire>
    <wire loc="453:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x10b76e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b887820"/></to>
    </wire>
    <wire loc="466:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x10b796568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8bb020"/></to>
    </wire>
    <wire loc="573:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0SDA" scoped="" ref="0x10b7e5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8903e0"/></to>
    </wire>
    <wire loc="593:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x10b803558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b907ca8"/></to>
    </wire>
    <wire loc="566:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0SIMO" scoped="" ref="0x10b7d2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8a4748"/></to>
    </wire>
    <wire loc="594:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x10b801558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b925748"/></to>
    </wire>
    <wire loc="471:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x10b792568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8b29a8"/></to>
    </wire>
    <wire loc="484:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x10b79b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8ea020"/></to>
    </wire>
    <wire loc="495:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x10b7a9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b90b020"/></to>
    </wire>
    <wire loc="564:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0TXD" scoped="" ref="0x10b7d67f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8a4748"/></to>
    </wire>
    <wire loc="563:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0STE" scoped="" ref="0x10b7b9980"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8a9ca8"/></to>
    </wire>
    <wire loc="570:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0STE" scoped="" ref="0x10b7cb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b895748"/></to>
    </wire>
    <wire loc="587:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1SDA" scoped="" ref="0x10b7ed570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8ef3e0"/></to>
    </wire>
    <wire loc="600:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x10b816558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b917ca8"/></to>
    </wire>
    <wire loc="565:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0RXD" scoped="" ref="0x10b7d4670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b89e3e0"/></to>
    </wire>
    <wire loc="578:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1TXD" scoped="" ref="0x10b7dd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8bb020"/></to>
    </wire>
    <wire loc="443:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x10b75fb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8653e0"/></to>
    </wire>
    <wire loc="456:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x10b786568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b89aca8"/></to>
    </wire>
    <wire loc="567:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA0SOMI" scoped="" ref="0x10b7d0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b89e3e0"/></to>
    </wire>
    <wire loc="493:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x10b7ad568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b915748"/></to>
    </wire>
    <wire loc="461:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x10b782568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8903e0"/></to>
    </wire>
    <wire loc="474:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x10b78c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8c6ca8"/></to>
    </wire>
    <wire loc="498:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x10b7c1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b9203e0"/></to>
    </wire>
    <wire loc="597:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x10b7fa558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b917ca8"/></to>
    </wire>
    <wire loc="438:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x10b766238"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b83a6a8"/></to>
    </wire>
    <wire loc="451:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x10b772568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b86e020"/></to>
    </wire>
    <wire loc="464:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x10b77c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8a4748"/></to>
    </wire>
    <wire loc="477:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x10b7a4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8d9020"/></to>
    </wire>
    <wire loc="569:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0CLK" scoped="" ref="0x10b7ce570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8a9ca8"/></to>
    </wire>
    <wire loc="591:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x10b7e7558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b9103e0"/></to>
    </wire>
    <wire loc="482:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x10b79f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8d0748"/></to>
    </wire>
    <wire loc="583:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1CLK" scoped="" ref="0x10b7f5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8e6ca8"/></to>
    </wire>
    <wire loc="577:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1STE" scoped="" ref="0x10b7df570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8e6ca8"/></to>
    </wire>
    <wire loc="441:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x10b763e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b84dca8"/></to>
    </wire>
    <wire loc="454:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x10b78a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8813e0"/></to>
    </wire>
    <wire loc="467:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x10b794568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8b7ca8"/></to>
    </wire>
    <wire loc="581:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1SOMI" scoped="" ref="0x10b7d7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8b7ca8"/></to>
    </wire>
    <wire loc="571:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0SIMO" scoped="" ref="0x10b7c9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8903e0"/></to>
    </wire>
    <wire loc="576:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1CLK" scoped="" ref="0x10b7e1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8d0748"/></to>
    </wire>
    <wire loc="595:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x10b7ff558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b9203e0"/></to>
    </wire>
    <wire loc="472:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x10b790668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8ad3e0"/></to>
    </wire>
    <wire loc="485:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x10b7b7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8e6ca8"/></to>
    </wire>
    <wire loc="496:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x10b7c5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b907ca8"/></to>
    </wire>
    <wire loc="444:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x10b77b978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b85f020"/></to>
    </wire>
    <wire loc="494:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x10b7ab568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b9103e0"/></to>
    </wire>
    <wire loc="449:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x10b777668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b878748"/></to>
    </wire>
    <wire loc="462:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x10b780568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b88b020"/></to>
    </wire>
    <wire loc="475:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x10b7a8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8c1748"/></to>
    </wire>
    <wire loc="499:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x10b7bf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b91b020"/></to>
    </wire>
    <wire loc="439:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x10b752140"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8563e0"/></to>
    </wire>
    <wire loc="452:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x10b770568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b86aca8"/></to>
    </wire>
    <wire loc="465:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x10b798568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b89e3e0"/></to>
    </wire>
    <wire loc="478:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x10b7a2568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8d5ca8"/></to>
    </wire>
    <wire loc="579:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCA1RXD" scoped="" ref="0x10b7db570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8b7ca8"/></to>
    </wire>
    <wire loc="586:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1SOMI" scoped="" ref="0x10b7ef580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8ea020"/></to>
    </wire>
    <wire loc="588:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1SCL" scoped="" ref="0x10b7eb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8ea020"/></to>
    </wire>
    <wire loc="483:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x10b79d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8ef3e0"/></to>
    </wire>
    <wire loc="592:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x10b805558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b90b020"/></to>
    </wire>
    <wire loc="599:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x10b7f8558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b91b020"/></to>
    </wire>
    <wire loc="572:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0SOMI" scoped="" ref="0x10b7c7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b88b020"/></to>
    </wire>
    <wire loc="603:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x10b812568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8f6ca8"/></to>
    </wire>
    <wire loc="585:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB1SIMO" scoped="" ref="0x10b7f1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b8ef3e0"/></to>
    </wire>
    <wire loc="574:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCB0SCL" scoped="" ref="0x10b7e3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10b88b020"/></to>
    </wire>
    <wire loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10b9d17d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10b9c8de8"/></to>
    </wire>
    <wire loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10b9c8de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10bb27020"/></to>
    </wire>
    <wire loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10b9c80f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10bac4418"/></to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x10b9bf338"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10bb46c38"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10bac4418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10c47ba08"/></to>
    </wire>
    <wire loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x10bb4d208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10babdd88"/></to>
    </wire>
    <wire loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10baea020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10bac4c00"/></to>
    </wire>
    <wire loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10bac4c00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10c474128"/></to>
    </wire>
    <wire loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10bb45e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10ba3c398"/></to>
    </wire>
    <wire loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10ba3c398"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10ba74878"/></to>
    </wire>
    <wire loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10c47ba08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10c460bd8"/></to>
    </wire>
    <wire loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x10c46e450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10c47a230"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10c47a230"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10c45f4f8"/></to>
    </wire>
    <wire loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10c470230"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10ba3c398"/></to>
    </wire>
    <wire loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10c4ad568"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10c466b88"/></to>
    </wire>
    <wire loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10c466b88"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10b9ef1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10c4acbd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10c4632a8"/></to>
    </wire>
    <wire loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10c4632a8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10b9eece8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10c4aa020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10c4625b8"/></to>
    </wire>
    <wire loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10c4625b8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10b9eb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10b9ef1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10b5cc398"/></to>
    </wire>
    <wire loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10b9eece8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x10b5cbba8"/></to>
    </wire>
    <wire loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10b9eb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x10b5dad00"/></to>
    </wire>
    <wire loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10b9ef1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10b5cc398"/></to>
    </wire>
    <wire loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10b9eece8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x10b5c8588"/></to>
    </wire>
    <wire loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10b9eb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x10b5d8868"/></to>
    </wire>
    <wire loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10b9ef1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10b5cc398"/></to>
    </wire>
    <wire loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10b9eece8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x10b5c7a20"/></to>
    </wire>
    <wire loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10b9eb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x10b5d76e0"/></to>
    </wire>
    <wire loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10b9ef1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10b5cc398"/></to>
    </wire>
    <wire loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10b9eece8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x10b5dd020"/></to>
    </wire>
    <wire loc="77:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10b9eb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x10b5d6558"/></to>
    </wire>
    <wire loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10b9ef1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10b5cc398"/></to>
    </wire>
    <wire loc="80:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10b9eece8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x10b5dc400"/></to>
    </wire>
    <wire loc="81:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10b9eb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x10b5d43d0"/></to>
    </wire>
    <wire loc="83:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10b9ef1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10b5cc398"/></to>
    </wire>
    <wire loc="84:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10b9eece8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x10b5db898"/></to>
    </wire>
    <wire loc="85:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10b9eb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x10b5d3120"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x10ba82b10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10ba392d8"/></to>
    </wire>
    <wire loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10ba392d8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10ba5d888"/></to>
    </wire>
    <wire loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10ba4f8c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10b5cc398"/></to>
    </wire>
    <wire loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x10bae6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10b2f8728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x10bb48478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10b2f8728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102C.nc">
      <from><interface-ref name="TimerSensor" scoped="" ref="0x10bb52808"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c4eba08"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c4eba08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10b9d17d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102C.nc">
      <from><interface-ref name="TimerFail" scoped="" ref="0x10bb7b8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10c538020"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10c538020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10b9d17d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10bb70bd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10c532460"/></to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10c532460"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10bc008c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10bb6d230"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10c5310c0"/></to>
    </wire>
    <wire loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10c5310c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10c51a740"/></to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102C.nc">
      <from><interface-ref name="I2CBasicAddr" scoped="" ref="0x10bb8e340"/></from>
      <to><interface-ref name="I2CBasicAddr" scoped="" ref="0x10c531968"/></to>
    </wire>
    <wire loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <from><interface-ref name="I2CBasicAddr" scoped="" ref="0x10c531968"/></from>
      <to><interface-ref name="I2CBasicAddr" scoped="" ref="0x10bbfbd10"/></to>
    </wire>
    <wire loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102P.nc">
      <from><interface-ref name="calculateTemp" scoped="" ref="0x10bb8ac80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10b2f8728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10c51a740"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10bd7b020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <from><interface-ref name="I2CBasicAddr" scoped="" ref="0x10bbfbd10"/></from>
      <to><interface-ref name="I2CBasicAddr" scoped="" ref="0x10bc9a8a8"/></to>
    </wire>
    <wire loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <from><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10bbf2020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10c52c420"/></to>
    </wire>
    <wire loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10c5665f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10bbfb300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <from><interface-ref name="UsciResource" scoped="" ref="0x10bbf4d60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x10c51baa0"/></to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10c51baa0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10bd7dcc8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x10bc1fd30"/></from>
      <to><interface-ref name="HplMsp430UsciInterrupts" scoped="" ref="0x10c513e50"/></to>
    </wire>
    <wire loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <from><interface-ref name="HplMsp430UsciInterrupts" scoped="" ref="0x10c513e50"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10bd7d020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10bbfb300"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10bc9a020"/></to>
    </wire>
    <wire loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10bc008c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10bc69220"/></to>
    </wire>
    <wire loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <from><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10bc94200"/></from>
      <to><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10bbf2020"/></to>
    </wire>
    <wire loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <from><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10bc94200"/></from>
      <to><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10bc88550"/></to>
    </wire>
    <wire loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <from><interface-ref name="UsciResource" scoped="" ref="0x10bc95498"/></from>
      <to><interface-ref name="UsciResource" scoped="" ref="0x10bbf4d60"/></to>
    </wire>
    <wire loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x10bc8ee50"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10bc1fd30"/></to>
    </wire>
    <wire loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <from><interface-ref name="UsciB" scoped="" ref="0x10bc947f8"/></from>
      <to><interface-ref name="HplMsp430UsciB" scoped="" ref="0x10bca92f8"/></to>
    </wire>
    <wire loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <from><interface-ref name="HplMsp430UsciB" scoped="" ref="0x10bca92f8"/></from>
      <to><interface-ref name="Usci" scoped="" ref="0x10bca2d58"/></to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <from><interface-ref name="HplMsp430UsciInterrupts" scoped="" ref="0x10bca37e8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10bccb3f8"/></to>
    </wire>
    <wire loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x10bccbcc0"/></from>
      <to><interface-ref name="UCB1SIMO" scoped="" ref="0x10b7f1580"/></to>
    </wire>
    <wire loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x10bcc9ab0"/></from>
      <to><interface-ref name="UCB1SOMI" scoped="" ref="0x10b7ef580"/></to>
    </wire>
    <wire loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x10bcc7928"/></from>
      <to><interface-ref name="UCB1CLK" scoped="" ref="0x10b7f5570"/></to>
    </wire>
    <wire loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <from><interface-ref name="USDA" scoped="" ref="0x10bcc57a0"/></from>
      <to><interface-ref name="UCB1SDA" scoped="" ref="0x10b7ed570"/></to>
    </wire>
    <wire loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <from><interface-ref name="USCL" scoped="" ref="0x10bcc3618"/></from>
      <to><interface-ref name="UCB1SCL" scoped="" ref="0x10b7eb570"/></to>
    </wire>
    <wire loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <from><interface-ref name="UsciRawInterrupts" scoped="" ref="0x10bcbdb40"/></from>
      <to><interface-ref name="UsciB" scoped="" ref="0x10bd40ca8"/></to>
    </wire>
    <wire loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <from><interface-ref name="HplMsp430UsciB" scoped="" ref="0x10c519780"/></from>
      <to><interface-ref name="HplMsp430UsciB" scoped="" ref="0x10bca92f8"/></to>
    </wire>
    <wire loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10c519020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10bd7b7f0"/></to>
    </wire>
    <wire loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10bd7b7f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10be053f0"/></to>
    </wire>
    <wire loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10bd79570"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10c5665f8"/></to>
    </wire>
    <wire loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10bd7b020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10be070c8"/></to>
    </wire>
    <wire loc="106:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10be070c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10c5b5698"/></to>
    </wire>
    <wire loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x10bd7d020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10bd77c40"/></to>
    </wire>
    <wire loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10bd7dcc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10be08378"/></to>
    </wire>
    <wire loc="105:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10be08378"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10c5b6830"/></to>
    </wire>
    <wire loc="108:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10be053f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10c5b49d8"/></to>
    </wire>
    <wire loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10be05c70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10bd79570"/></to>
    </wire>
    <wire loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10bd76bd0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10be053f0"/></to>
    </wire>
    <wire loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x10bd76470"/></from>
      <to><interface-ref name="HplMsp430UsciInterrupts" scoped="" ref="0x10bca37e8"/></to>
    </wire>
    <wire loc="107:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10be07808"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10c5b5dd8"/></to>
    </wire>
    <wire loc="109:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10c5b33e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10be05c70"/></to>
    </wire>
    <wire loc="111:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x10c5b3b68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x10c5b86d8"/></to>
    </wire>
    <wire loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x10c5b0da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10b2f8728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/MainC.nc">
      <documentation loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformP.nc">
      <module/>
    </component>
    <component qname="Msp430ClockC" loc="37:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestTmp102C" loc="45:TestTmp102C.nc">
      <documentation loc="1:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/PrintfUART.h">
        <short>&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2008 The Regents of the University  of California.</short>
        <long>&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2008 The Regents of the University  of California.&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE&#10; COPYRIGHT HOLDER OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, &#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="29(HplMsp430GeneralIOC.P10):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="29(HplMsp430GeneralIOC.P11):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="29(HplMsp430GeneralIOC.P12):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="29(HplMsp430GeneralIOC.P13):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="29(HplMsp430GeneralIOC.P14):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="29(HplMsp430GeneralIOC.P15):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="29(HplMsp430GeneralIOC.P16):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="29(HplMsp430GeneralIOC.P17):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="29(HplMsp430GeneralIOC.P20):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="29(HplMsp430GeneralIOC.P21):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="29(HplMsp430GeneralIOC.P22):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="29(HplMsp430GeneralIOC.P23):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="29(HplMsp430GeneralIOC.P24):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="29(HplMsp430GeneralIOC.P25):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="29(HplMsp430GeneralIOC.P26):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="29(HplMsp430GeneralIOC.P27):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="29(HplMsp430GeneralIOC.P30):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="29(HplMsp430GeneralIOC.P31):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="29(HplMsp430GeneralIOC.P32):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="29(HplMsp430GeneralIOC.P33):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="29(HplMsp430GeneralIOC.P34):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="29(HplMsp430GeneralIOC.P35):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="29(HplMsp430GeneralIOC.P36):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="29(HplMsp430GeneralIOC.P37):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="29(HplMsp430GeneralIOC.P40):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="29(HplMsp430GeneralIOC.P41):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="29(HplMsp430GeneralIOC.P42):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="29(HplMsp430GeneralIOC.P43):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="29(HplMsp430GeneralIOC.P44):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="29(HplMsp430GeneralIOC.P45):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="29(HplMsp430GeneralIOC.P46):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="29(HplMsp430GeneralIOC.P47):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="29(HplMsp430GeneralIOC.P50):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="29(HplMsp430GeneralIOC.P51):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="29(HplMsp430GeneralIOC.P52):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="29(HplMsp430GeneralIOC.P53):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="29(HplMsp430GeneralIOC.P54):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="29(HplMsp430GeneralIOC.P55):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="29(HplMsp430GeneralIOC.P56):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="29(HplMsp430GeneralIOC.P57):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:18">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="29(HplMsp430GeneralIOC.P60):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="29(HplMsp430GeneralIOC.P61):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="29(HplMsp430GeneralIOC.P62):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="29(HplMsp430GeneralIOC.P63):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="29(HplMsp430GeneralIOC.P64):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="29(HplMsp430GeneralIOC.P65):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="29(HplMsp430GeneralIOC.P66):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="29(HplMsp430GeneralIOC.P67):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestTmp102AppC.TestTimer" loc="44(TestTmp102AppC.TestTimer):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestTmp102AppC.Temperature" loc="43(TestTmp102AppC.Temperature):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102C.nc">
      <instance number="0">
        <component-ref qname="SimpleTMP102C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleTMP102P" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102P.nc">
      <module/>
    </component>
    <component qname="TestTmp102AppC.Temperature.TimerSensor" loc="44(TestTmp102AppC.Temperature.TimerSensor):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestTmp102AppC.Temperature.TimerFail" loc="44(TestTmp102AppC.Temperature.TimerFail):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestTmp102AppC.Temperature.I2C" loc="42(TestTmp102AppC.Temperature.I2C):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <instance number="0">
        <component-ref qname="Msp430I2C1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430I2C1P" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:11 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430I2C1P.I2CP" loc="50(Msp430I2C1P.I2CP):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CP.nc">
      <documentation loc="32:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430I2CP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430I2C1P.Z1UsciP" loc="40(Msp430I2C1P.Z1UsciP):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Z1UsciP.nc">
      <instance number="0">
        <component-ref qname="Z1UsciP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430UsciB1C" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430UsciB1P" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1P.nc" safe="">
      <module/>
    </component>
    <component qname="HplMsp430UsciAB1RawInterruptsP" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciAB1RawInterruptsP.nc" safe="">
      <module/>
    </component>
    <component qname="TestTmp102AppC.Temperature.I2C.UsciC" loc="39(TestTmp102AppC.Temperature.I2C.UsciC):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <documentation loc="32:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/05/21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsciB1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsciShareB1P" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @version $Revision: 1.5 $ $Date: 2008/05/21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsciShareB1P.UsciShareP" loc="39(Msp430UsciShareB1P.UsciShareP):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareP.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:11 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsciShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsciShareB1P.ArbiterC" loc="89(Msp430UsciShareB1P.ArbiterC):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430UsciB1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsciShareB1P.ArbiterC.Queue" loc="42(Msp430UsciShareB1P.ArbiterC.Queue):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsciShareB1P.ArbiterC.Arbiter" loc="52(Msp430UsciShareB1P.ArbiterC.Arbiter):/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <documentation loc="30:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x10b5e0878" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x10b5e0bf0" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x10b5df020" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x10b5df378" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x10b5df6d0" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x10b5dfa20" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x10b5dfd88" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x10b5de150" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x10b5de500" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x10b61cb50" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x10b631020" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIORenP" loc="29:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc" abstract="" safe="">
      <documentation loc="2:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x10b80fab8" loc="30:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x10b80fe40" loc="31:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x10b80c200" loc="32:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x10b80c588" loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_ren_addr" ref="0x10b80c910" loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x10b80cc60" loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10ba23be8" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10ba23be8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10ba5c1d8" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10ba5c1d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10ba3ad08" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10ba3ad08"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10ba734a0" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10ba734a0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10ba73868" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10ba73868"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10ba71020" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10ba71020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10ba713c8" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x10ba71b58" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x10ba71b58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10ba43be8" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10ba43be8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10ba7b380" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10ba7b380"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10ba7b748" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10ba7b748"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10ba7a020" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10ba7a020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10ba7a3c8" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10babc068" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10babc068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10bae24e0" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10bae24e0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x10bae27f0" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10bb44510" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10bb44510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleTMP102C" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430I2C1C" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430I2CP" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CP.nc" abstract="">
      <documentation loc="32:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Z1UsciP" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Z1UsciP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430UsciB1C" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc" abstract="">
      <documentation loc="32:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/05/21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsciShareP" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareP.nc" abstract="" safe="">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:11 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x10bd9c020" loc="89:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x10bd93970" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x10bdab1b0" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x10b53e808" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10b53e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b53eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10b53f3e0" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10b53f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10b53f730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10b541720" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10b541720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b541a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x10b53cc08" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10b53cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b539020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10b53c528" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10b53c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b53c878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x10b539370" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x10b539370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b5396c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10b556980" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10b556980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10b5477c8"/>
        <function-ref name="initTimerB" scoped="" ref="0x10b556e58"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10b547020"/>
        <function-ref name="initTimerA" scoped="" ref="0x10b5471a8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10b556cd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10b547330"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10b5474b8"/>
        <function-ref name="initClocks" scoped="" ref="0x10b547640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10b53b570" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10b53b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b53b8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10b56fc80" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10b56fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10b56ead8"/>
        <function-ref name="initTimerB" scoped="" ref="0x10b56e1a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10b56e330"/>
        <function-ref name="initTimerA" scoped="" ref="0x10b56e4b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10b56e020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10b56e640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10b56e7c8"/>
        <function-ref name="initClocks" scoped="" ref="0x10b56e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x10b56ee08" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10b56ee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10b5831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10b56f610" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10b56f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b56f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x10b5b5a20" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x10b5b5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5b5d70"/>
        <function-ref name="getControl" scoped="" ref="0x10b5c4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5c41a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5c4330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5c44b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5c4640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5c47c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5c4950"/>
        <function-ref name="setControl" scoped="" ref="0x10b5c4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x10b5cbba8" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x10b5cbba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5ca020"/>
        <function-ref name="getControl" scoped="" ref="0x10b5ca1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5ca330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5ca4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5ca640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5ca7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5ca950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5caad8"/>
        <function-ref name="setControl" scoped="" ref="0x10b5cac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x10b5bc3d0" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x10b5bc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5bc720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5bc8a8"/>
        <function-ref name="captured" scoped="" ref="0x10b5bca30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5bcbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5bcd40"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x10b5e7020" loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x10b5e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5e7370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5e74f8"/>
        <function-ref name="captured" scoped="" ref="0x10b5e7680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5e7808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5e7990"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5e7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x10b5c2d40" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x10b5c2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5c10d8"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5c1260"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5c13e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5c1570"/>
        <function-ref name="fired" scoped="" ref="0x10b5c16f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x10b5d76e0" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x10b5d76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5d7a30"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5d7bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5d7d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5d6020"/>
        <function-ref name="fired" scoped="" ref="0x10b5d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x10b5e4020" loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x10b5e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5e4370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5e44f8"/>
        <function-ref name="captured" scoped="" ref="0x10b5e4680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5e4808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5e4990"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5e4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x10b5dd020" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x10b5dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5dd370"/>
        <function-ref name="getControl" scoped="" ref="0x10b5dd4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5dd680"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5dd808"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5dd990"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5ddb18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5ddca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5dde28"/>
        <function-ref name="setControl" scoped="" ref="0x10b5dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x10b5c51b0" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x10b5c51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5c5500"/>
        <function-ref name="getControl" scoped="" ref="0x10b5c5688"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5c5810"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5c5998"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5c5b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5c5ca8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5c5e30"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5b6020"/>
        <function-ref name="setControl" scoped="" ref="0x10b5b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x10b5e9020" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x10b5e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5e9370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5e94f8"/>
        <function-ref name="captured" scoped="" ref="0x10b5e9680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5e9808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5e9990"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5e9b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x10b5d9a70" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x10b5d9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5d9dc0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5d8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5d81a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5d8330"/>
        <function-ref name="fired" scoped="" ref="0x10b5d84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x10b5c9060" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x10b5c9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5c94b0"/>
        <function-ref name="getControl" scoped="" ref="0x10b5c9638"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5c97c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5c9948"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5c9ad0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5c9c58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5c9de0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5c8020"/>
        <function-ref name="setControl" scoped="" ref="0x10b5c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x10b5bb3d0" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x10b5bb3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5bb720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5bb8a8"/>
        <function-ref name="captured" scoped="" ref="0x10b5bba30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5bbbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5bbd40"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x10b5e6020" loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x10b5e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5e6370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5e64f8"/>
        <function-ref name="captured" scoped="" ref="0x10b5e6680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5e6808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5e6990"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5e6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x10b5c8588" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x10b5c8588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5c88d8"/>
        <function-ref name="getControl" scoped="" ref="0x10b5c8a60"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5c8be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5c8d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5c7020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5c71a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5c7330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5c74b8"/>
        <function-ref name="setControl" scoped="" ref="0x10b5c7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x10b5c1aa8" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x10b5c1aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5c1df8"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5bd020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5bd1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5bd330"/>
        <function-ref name="fired" scoped="" ref="0x10b5bd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x10b5b8b88" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x10b5b8b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b5a9020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b5a91a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5a9330"/>
        <function-ref name="get" scoped="" ref="0x10b5a94b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5a9640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5a97c8"/>
        <function-ref name="getMode" scoped="" ref="0x10b5a9950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5a9ad8"/>
        <function-ref name="overflow" scoped="" ref="0x10b5a9c60"/>
        <function-ref name="setMode" scoped="" ref="0x10b5a9de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b5a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x10b5d6558" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x10b5d6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5d68a8"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5d6a30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5d6bb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5d6d40"/>
        <function-ref name="fired" scoped="" ref="0x10b5d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x10b5b6588" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x10b5b6588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5b68d8"/>
        <function-ref name="getControl" scoped="" ref="0x10b5b6a60"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5b6be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5b6d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5b5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5b51a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5b5330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5b54b8"/>
        <function-ref name="setControl" scoped="" ref="0x10b5b5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x10b5dc400" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x10b5dc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5dc750"/>
        <function-ref name="getControl" scoped="" ref="0x10b5dc8d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5dca60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5dcbe8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5dcd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5db020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5db1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5db330"/>
        <function-ref name="setControl" scoped="" ref="0x10b5db4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x10b5cd4e0" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x10b5cd4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5cd830"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5cd9b8"/>
        <function-ref name="captured" scoped="" ref="0x10b5cdb40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5cdcc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5cde50"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x10b5e8020" loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x10b5e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5e8370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5e84f8"/>
        <function-ref name="captured" scoped="" ref="0x10b5e8680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5e8808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5e8990"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5e8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x10b5c2020" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x10b5c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5c2370"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5c24f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5c2680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5c2808"/>
        <function-ref name="fired" scoped="" ref="0x10b5c2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x10b5d8868" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x10b5d8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5d8bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5d8d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5d7020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5d71a8"/>
        <function-ref name="fired" scoped="" ref="0x10b5d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x10b5e5020" loc="70:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x10b5e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5e5370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5e54f8"/>
        <function-ref name="captured" scoped="" ref="0x10b5e5680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5e5808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5e5990"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5e5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x10b5c7a20" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x10b5c7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5c7d70"/>
        <function-ref name="getControl" scoped="" ref="0x10b5c6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5c61a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5c6330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5c64b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5c6640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5c67c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5c6950"/>
        <function-ref name="setControl" scoped="" ref="0x10b5c6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x10b5cc398" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x10b5cc398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b5cc6e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b5cc870"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5cc9f8"/>
        <function-ref name="get" scoped="" ref="0x10b5ccb80"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5ccd08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5cb020"/>
        <function-ref name="getMode" scoped="" ref="0x10b5cb1a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5cb330"/>
        <function-ref name="overflow" scoped="" ref="0x10b5cb4b8"/>
        <function-ref name="setMode" scoped="" ref="0x10b5cb640"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b5cb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x10b5d43d0" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x10b5d43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5d4720"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5d48a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5d4a30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5d4bb8"/>
        <function-ref name="fired" scoped="" ref="0x10b5d4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x10b5d2060" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x10b5d2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5d23b0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b5d2538"/>
        <function-ref name="captured" scoped="" ref="0x10b5d26c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b5d2848"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b5d29d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10b5d2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x10b5d3120" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x10b5d3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5d3670"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5d37f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5d3980"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5d3b08"/>
        <function-ref name="fired" scoped="" ref="0x10b5d3c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x10b5dad00" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x10b5dad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b5d90a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b5d9228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b5d93b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b5d9538"/>
        <function-ref name="fired" scoped="" ref="0x10b5d96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x10b5db898" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x10b5db898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b5dbbe8"/>
        <function-ref name="getControl" scoped="" ref="0x10b5dbd70"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b5da020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b5da1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b5da330"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b5da4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b5da640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b5da7c8"/>
        <function-ref name="setControl" scoped="" ref="0x10b5da950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10b60ec70" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10b60ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b625020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10b60e658" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10b60e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b60e9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10b6252e8" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10b6252e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b625638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10b60e020" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b60e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b60e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10b610798" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b610798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b610ae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b610c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b610df8"/>
        <function-ref name="get" scoped="" ref="0x10b60f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b60f1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b60f330"/>
        <function-ref name="getMode" scoped="" ref="0x10b60f4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b60f640"/>
        <function-ref name="overflow" scoped="" ref="0x10b60f7c8"/>
        <function-ref name="setMode" scoped="" ref="0x10b60f950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b60fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10b61f638" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10b61f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b61f988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10b61f020" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10b61f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b61f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10b61fc50" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10b61fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b61d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10b6208a0" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b6208a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b620c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10b6211e8" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b6211e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b621538"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b6216c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b621848"/>
        <function-ref name="get" scoped="" ref="0x10b6219d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b621b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b621ce0"/>
        <function-ref name="getMode" scoped="" ref="0x10b621e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b620020"/>
        <function-ref name="overflow" scoped="" ref="0x10b6201a8"/>
        <function-ref name="setMode" scoped="" ref="0x10b620330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b6204b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b6692e8" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b6692e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b669638"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b6697c0"/>
        <function-ref name="captured" scoped="" ref="0x10b669948"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b669ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b669c58"/>
        <function-ref name="setEdge" scoped="" ref="0x10b669de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b66c210" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b66c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b66c560"/>
        <function-ref name="getControl" scoped="" ref="0x10b66c6e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b66c870"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b66c9f8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b66cb80"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b66cd08"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b66b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b66b1a8"/>
        <function-ref name="setControl" scoped="" ref="0x10b66b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b667780" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b667780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b667ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b66b5f8" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b66b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b66b948"/>
        <function-ref name="setEvent" scoped="" ref="0x10b66bad0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b66bc58"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b66bde0"/>
        <function-ref name="fired" scoped="" ref="0x10b669020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b668100" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b668100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b668450"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b6685d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b668760"/>
        <function-ref name="get" scoped="" ref="0x10b6688e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b668a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b668bf8"/>
        <function-ref name="getMode" scoped="" ref="0x10b668d80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b667020"/>
        <function-ref name="overflow" scoped="" ref="0x10b6671a8"/>
        <function-ref name="setMode" scoped="" ref="0x10b667330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b6674b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b67c470" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b67c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b67c7c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b67c948"/>
        <function-ref name="captured" scoped="" ref="0x10b67cad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b67cc58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b67cde0"/>
        <function-ref name="setEdge" scoped="" ref="0x10b67b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b6643d8" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b6643d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b664728"/>
        <function-ref name="getControl" scoped="" ref="0x10b6648b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b664a38"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b664bc0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b664d48"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b67d020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b67d1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b67d330"/>
        <function-ref name="setControl" scoped="" ref="0x10b67d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b67a908" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b67a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b67ac58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b67d780" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b67d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b67dad0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b67dc58"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b67dde0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b67c020"/>
        <function-ref name="fired" scoped="" ref="0x10b67c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b67b2e8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b67b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b67b638"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b67b7c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b67b948"/>
        <function-ref name="get" scoped="" ref="0x10b67bad0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b67bc58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b67bde0"/>
        <function-ref name="getMode" scoped="" ref="0x10b67a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b67a1a8"/>
        <function-ref name="overflow" scoped="" ref="0x10b67a330"/>
        <function-ref name="setMode" scoped="" ref="0x10b67a4b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b67a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b675780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b675780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b675ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b675c58"/>
        <function-ref name="captured" scoped="" ref="0x10b675de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b673020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6731a8"/>
        <function-ref name="setEdge" scoped="" ref="0x10b673330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b6776a0" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b6776a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b6779f0"/>
        <function-ref name="getControl" scoped="" ref="0x10b677b78"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b677d00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b676020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b6761a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b676330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b6764b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b676640"/>
        <function-ref name="setControl" scoped="" ref="0x10b6767c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b672c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b672c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b671020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b676a90" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b676a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b676de0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b675020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b6751a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b675330"/>
        <function-ref name="fired" scoped="" ref="0x10b6754b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b6735f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b6735f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b673948"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b673ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b673c58"/>
        <function-ref name="get" scoped="" ref="0x10b673de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b672020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6721a8"/>
        <function-ref name="getMode" scoped="" ref="0x10b672330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6724b8"/>
        <function-ref name="overflow" scoped="" ref="0x10b672640"/>
        <function-ref name="setMode" scoped="" ref="0x10b6727c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b672950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b687780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b687780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b687ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b687c58"/>
        <function-ref name="captured" scoped="" ref="0x10b687de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b686020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6861a8"/>
        <function-ref name="setEdge" scoped="" ref="0x10b686330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b689820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b689820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b689b70"/>
        <function-ref name="getControl" scoped="" ref="0x10b689cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b689e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b688030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b6881b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b688340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b6884c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b688650"/>
        <function-ref name="setControl" scoped="" ref="0x10b6887d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b685c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b685c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b684020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b688aa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b688aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b688df0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b687020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b6871a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b687330"/>
        <function-ref name="fired" scoped="" ref="0x10b6874b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b6865f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b6865f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b686948"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b686ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b686c58"/>
        <function-ref name="get" scoped="" ref="0x10b686de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b685020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6851a8"/>
        <function-ref name="getMode" scoped="" ref="0x10b685330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6854b8"/>
        <function-ref name="overflow" scoped="" ref="0x10b685640"/>
        <function-ref name="setMode" scoped="" ref="0x10b6857c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b685950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b680780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b680780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b680ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b680c58"/>
        <function-ref name="captured" scoped="" ref="0x10b680de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b67e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b67e1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x10b67e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b682820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b682820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b682b70"/>
        <function-ref name="getControl" scoped="" ref="0x10b682cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b682e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b681030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b6811b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b681340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b6814c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b681650"/>
        <function-ref name="setControl" scoped="" ref="0x10b6817d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b697c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b697c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b696020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b681aa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b681aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b681df0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b680020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b6801a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b680330"/>
        <function-ref name="fired" scoped="" ref="0x10b6804b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b67e5f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b67e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b67e948"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b67ead0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b67ec58"/>
        <function-ref name="get" scoped="" ref="0x10b67ede0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b697020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6971a8"/>
        <function-ref name="getMode" scoped="" ref="0x10b697330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6974b8"/>
        <function-ref name="overflow" scoped="" ref="0x10b697640"/>
        <function-ref name="setMode" scoped="" ref="0x10b6977c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b697950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b692780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b692780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b692ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b692c58"/>
        <function-ref name="captured" scoped="" ref="0x10b692de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b691020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6911a8"/>
        <function-ref name="setEdge" scoped="" ref="0x10b691330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b694820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b694820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b694b70"/>
        <function-ref name="getControl" scoped="" ref="0x10b694cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b694e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b693030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b6931b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b693340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b6934c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b693650"/>
        <function-ref name="setControl" scoped="" ref="0x10b6937d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b690c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b690c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b68f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b693aa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b693aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b693df0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b692020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b6921a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b692330"/>
        <function-ref name="fired" scoped="" ref="0x10b6924b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b6915f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b6915f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b691948"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b691ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b691c58"/>
        <function-ref name="get" scoped="" ref="0x10b691de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b690020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6901a8"/>
        <function-ref name="getMode" scoped="" ref="0x10b690330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6904b8"/>
        <function-ref name="overflow" scoped="" ref="0x10b690640"/>
        <function-ref name="setMode" scoped="" ref="0x10b6907c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b690950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b68b780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b68b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b68bad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b68bc58"/>
        <function-ref name="captured" scoped="" ref="0x10b68bde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6a4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6a41a8"/>
        <function-ref name="setEdge" scoped="" ref="0x10b6a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b68d820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b68d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b68db70"/>
        <function-ref name="getControl" scoped="" ref="0x10b68dcf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b68de80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b68c030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b68c1b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b68c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b68c4c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b68c650"/>
        <function-ref name="setControl" scoped="" ref="0x10b68c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b6a2c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b6a2c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b6a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b68caa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b68caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b68cdf0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b68b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b68b1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b68b330"/>
        <function-ref name="fired" scoped="" ref="0x10b68b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b6a45f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b6a45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b6a4948"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b6a4ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b6a4c58"/>
        <function-ref name="get" scoped="" ref="0x10b6a4de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b6a2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6a21a8"/>
        <function-ref name="getMode" scoped="" ref="0x10b6a2330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6a24b8"/>
        <function-ref name="overflow" scoped="" ref="0x10b6a2640"/>
        <function-ref name="setMode" scoped="" ref="0x10b6a27c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b6a2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b69d780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b69d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b69dad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b69dc58"/>
        <function-ref name="captured" scoped="" ref="0x10b69dde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b69c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b69c1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x10b69c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b69f820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b69f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b69fb70"/>
        <function-ref name="getControl" scoped="" ref="0x10b69fcf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b69fe80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b69e030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b69e1b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b69e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b69e4c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b69e650"/>
        <function-ref name="setControl" scoped="" ref="0x10b69e7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b69bc18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b69bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b69a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b69eaa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b69eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b69edf0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b69d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b69d1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b69d330"/>
        <function-ref name="fired" scoped="" ref="0x10b69d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b69c5f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b69c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b69c948"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b69cad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b69cc58"/>
        <function-ref name="get" scoped="" ref="0x10b69cde0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b69b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b69b1a8"/>
        <function-ref name="getMode" scoped="" ref="0x10b69b330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b69b4b8"/>
        <function-ref name="overflow" scoped="" ref="0x10b69b640"/>
        <function-ref name="setMode" scoped="" ref="0x10b69b7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b69b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b6b0780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b6b0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b6b0ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b6b0c58"/>
        <function-ref name="captured" scoped="" ref="0x10b6b0de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6af020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6af1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x10b6af330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b698820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b698820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b698b70"/>
        <function-ref name="getControl" scoped="" ref="0x10b698cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b698e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b6b1030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b6b11b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b6b1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b6b14c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b6b1650"/>
        <function-ref name="setControl" scoped="" ref="0x10b6b17d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b6adc18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b6adc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b6ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b6b1aa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b6b1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b6b1df0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b6b0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b6b01a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b6b0330"/>
        <function-ref name="fired" scoped="" ref="0x10b6b04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b6af5f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b6af5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b6af948"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b6afad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b6afc58"/>
        <function-ref name="get" scoped="" ref="0x10b6afde0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b6ad020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6ad1a8"/>
        <function-ref name="getMode" scoped="" ref="0x10b6ad330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6ad4b8"/>
        <function-ref name="overflow" scoped="" ref="0x10b6ad640"/>
        <function-ref name="setMode" scoped="" ref="0x10b6ad7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b6ad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10b6a8780" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10b6a8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b6a8ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10b6a8c58"/>
        <function-ref name="captured" scoped="" ref="0x10b6a8de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6a7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6a71a8"/>
        <function-ref name="setEdge" scoped="" ref="0x10b6a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10b6aa820" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10b6aa820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b6aab70"/>
        <function-ref name="getControl" scoped="" ref="0x10b6aacf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b6aae80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b6a9030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b6a91b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b6a9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b6a94c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b6a9650"/>
        <function-ref name="setControl" scoped="" ref="0x10b6a97d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10b6a6c18" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10b6a6c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b6a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10b6a9aa0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10b6a9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b6a9df0"/>
        <function-ref name="setEvent" scoped="" ref="0x10b6a8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b6a81a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b6a8330"/>
        <function-ref name="fired" scoped="" ref="0x10b6a84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10b6a75f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b6a75f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b6a7948"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b6a7ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b6a7c58"/>
        <function-ref name="get" scoped="" ref="0x10b6a7de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b6a6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b6a61a8"/>
        <function-ref name="getMode" scoped="" ref="0x10b6a6330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b6a64b8"/>
        <function-ref name="overflow" scoped="" ref="0x10b6a6640"/>
        <function-ref name="setMode" scoped="" ref="0x10b6a67c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b6a6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x10b6ba768" loc="7:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x10b6ba768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b6baab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x10b6bb0e8" loc="4:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x10b6bb0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b6bb438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x10b6bb830" loc="5:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x10b6bb830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b6bbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x10b6ba020" loc="6:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x10b6ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10b6ba370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x10b50b2b0" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10b50b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10b50b600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x10b435698" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10b435698"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10b4359e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x10b50eb08" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x10b50eb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x10b50ee58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x10b6e0140" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10b6e0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b6e0490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10b5408c0" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10b5408c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10b540c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x10b6e19f8" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x10b6e19f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b6e1d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x10b6e1020" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10b6e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b6e1370"/>
        <function-ref name="taskLoop" scoped="" ref="0x10b6e14f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x10b6e1680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10b2f8728" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10b2f8728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10b2f8a78"/>
        <function-ref name="runTask" scoped="" ref="0x10b2f8c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10b2e6be8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10b2e6be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b2af020"/>
        <function-ref name="taskLoop" scoped="" ref="0x10b2af1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x10b2af330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10b4ee4d0" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10b4ee4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10b4ee820"/>
        <function-ref name="runTask" scoped="" ref="0x10b4ee9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x10b4eb998" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10b4eb998"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10b4ebce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10b4ef660" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10b4ef660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b4ef9b0"/>
        <function-ref name="taskLoop" scoped="" ref="0x10b4efb38"/>
        <function-ref name="runNextTask" scoped="" ref="0x10b4efcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x10b6ed5a8" loc="48:TestTmp102C.nc">
      <component-ref qname="TestTmp102C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10b6ed5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10b6ed8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TestTimer" ref="0x10b70f598" loc="49:TestTmp102C.nc">
      <component-ref qname="TestTmp102C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TestTimer" scoped="" ref="0x10b70f598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10b70e8f0"/>
        <function-ref name="fired" scoped="" ref="0x10b6fd020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10b6fdd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x10b6fd8c0"/>
        <function-ref name="getdt" scoped="" ref="0x10b70d1c0"/>
        <function-ref name="gett0" scoped="" ref="0x10b70ed40"/>
        <function-ref name="isRunning" scoped="" ref="0x10b6fd470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10b6fe118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10b70e320"/>
        <function-ref name="startOneShot" scoped="" ref="0x10b6fe5b8"/>
        <function-ref name="stop" scoped="" ref="0x10b6fea58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10b6ee020" loc="47:TestTmp102C.nc">
      <component-ref qname="TestTmp102C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10b6ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10b6ee370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10b6ee4f8"/>
        <function-ref name="led1On" scoped="" ref="0x10b6ee680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10b6ee808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10b6ee990"/>
        <function-ref name="get" scoped="" ref="0x10b6eeb18"/>
        <function-ref name="led1Off" scoped="" ref="0x10b6eeca0"/>
        <function-ref name="led2Off" scoped="" ref="0x10b6ed330"/>
        <function-ref name="set" scoped="" ref="0x10b6eee28"/>
        <function-ref name="led0On" scoped="" ref="0x10b6ed020"/>
        <function-ref name="led2On" scoped="" ref="0x10b6ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempSensor" ref="0x10b724810" loc="50:TestTmp102C.nc">
      <component-ref qname="TestTmp102C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempSensor" scoped="" ref="0x10b724810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10b70b390"/>
        <function-ref name="readDone" scoped="" ref="0x10b70b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10b72d0f0" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10b72d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10b72d440"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10b72d5c8"/>
        <function-ref name="led1On" scoped="" ref="0x10b72d750"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10b72d8d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10b72da60"/>
        <function-ref name="get" scoped="" ref="0x10b72dbe8"/>
        <function-ref name="led1Off" scoped="" ref="0x10b72dd70"/>
        <function-ref name="led2Off" scoped="" ref="0x10b72c4b8"/>
        <function-ref name="set" scoped="" ref="0x10b72c020"/>
        <function-ref name="led0On" scoped="" ref="0x10b72c1a8"/>
        <function-ref name="led2On" scoped="" ref="0x10b72c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x10b73dc58" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10b73dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b726020"/>
        <function-ref name="isInput" scoped="" ref="0x10b7261a8"/>
        <function-ref name="toggle" scoped="" ref="0x10b726330"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7264b8"/>
        <function-ref name="get" scoped="" ref="0x10b726640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7267c8"/>
        <function-ref name="set" scoped="" ref="0x10b726950"/>
        <function-ref name="clr" scoped="" ref="0x10b726ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10b729368" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10b729368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b7296b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x10b726df0" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10b726df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b725170"/>
        <function-ref name="isInput" scoped="" ref="0x10b7252f8"/>
        <function-ref name="toggle" scoped="" ref="0x10b725480"/>
        <function-ref name="isOutput" scoped="" ref="0x10b725608"/>
        <function-ref name="get" scoped="" ref="0x10b725790"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b725918"/>
        <function-ref name="set" scoped="" ref="0x10b725aa0"/>
        <function-ref name="clr" scoped="" ref="0x10b725c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10b729930" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10b729930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10b729c80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10b729e08"/>
        <function-ref name="led1On" scoped="" ref="0x10b728020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10b7281a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10b728330"/>
        <function-ref name="get" scoped="" ref="0x10b7284b8"/>
        <function-ref name="led1Off" scoped="" ref="0x10b728640"/>
        <function-ref name="led2Off" scoped="" ref="0x10b728c60"/>
        <function-ref name="set" scoped="" ref="0x10b7287c8"/>
        <function-ref name="led0On" scoped="" ref="0x10b728950"/>
        <function-ref name="led2On" scoped="" ref="0x10b728ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x10b73c020" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10b73c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b73c370"/>
        <function-ref name="isInput" scoped="" ref="0x10b73c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x10b73c680"/>
        <function-ref name="isOutput" scoped="" ref="0x10b73c808"/>
        <function-ref name="get" scoped="" ref="0x10b73c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b73cb18"/>
        <function-ref name="set" scoped="" ref="0x10b73cca0"/>
        <function-ref name="clr" scoped="" ref="0x10b73ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x10b72a4c8" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10b72a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b72a818"/>
        <function-ref name="isInput" scoped="" ref="0x10b72a9a0"/>
        <function-ref name="toggle" scoped="" ref="0x10b72ab28"/>
        <function-ref name="isOutput" scoped="" ref="0x10b72acb0"/>
        <function-ref name="get" scoped="" ref="0x10b72ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b759020"/>
        <function-ref name="set" scoped="" ref="0x10b7591a8"/>
        <function-ref name="clr" scoped="" ref="0x10b759330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x10b759688" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10b759688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7599d8"/>
        <function-ref name="isInput" scoped="" ref="0x10b759b60"/>
        <function-ref name="toggle" scoped="" ref="0x10b759ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b759e70"/>
        <function-ref name="get" scoped="" ref="0x10b758020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7581a8"/>
        <function-ref name="set" scoped="" ref="0x10b758330"/>
        <function-ref name="clr" scoped="" ref="0x10b7584b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x10b7578f8" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10b7578f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b757c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x10b758810" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10b758810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b758b60"/>
        <function-ref name="isInput" scoped="" ref="0x10b758ce8"/>
        <function-ref name="toggle" scoped="" ref="0x10b758e70"/>
        <function-ref name="isOutput" scoped="" ref="0x10b757020"/>
        <function-ref name="get" scoped="" ref="0x10b7571a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b757330"/>
        <function-ref name="set" scoped="" ref="0x10b7574b8"/>
        <function-ref name="clr" scoped="" ref="0x10b757640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10b761c88" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10b761c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b760020"/>
        <function-ref name="isInput" scoped="" ref="0x10b7601a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b760330"/>
        <function-ref name="toggle" scoped="" ref="0x10b7604b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b760640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7607c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b760950"/>
        <function-ref name="get" scoped="" ref="0x10b760ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b760c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b760de8"/>
        <function-ref name="set" scoped="" ref="0x10b75f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b75f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b75f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b75f5b8"/>
        <function-ref name="clr" scoped="" ref="0x10b75f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10b788568" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10b788568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7888b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b788a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b788bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b788d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b787020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b787330"/>
        <function-ref name="get" scoped="" ref="0x10b7874b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b787640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7877c8"/>
        <function-ref name="set" scoped="" ref="0x10b787950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b787ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b787c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b786020"/>
        <function-ref name="clr" scoped="" ref="0x10b7861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x10b7fc558" loc="210:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x10b7fc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7fc8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7fca30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7fcbb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7fcd40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7fb020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7fb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7fb330"/>
        <function-ref name="get" scoped="" ref="0x10b7fb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7fb640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7fb7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7fb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7fbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7fbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7fa020"/>
        <function-ref name="clr" scoped="" ref="0x10b7fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1STE" ref="0x10b7f3570" loc="198:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1STE" scoped="" ref="0x10b7f3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7f38c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7f3a48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7f3bd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7f3d58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7f2020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7f21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7f2330"/>
        <function-ref name="get" scoped="" ref="0x10b7f24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7f2640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7f27c8"/>
        <function-ref name="set" scoped="" ref="0x10b7f2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7f2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7f2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7f1020"/>
        <function-ref name="clr" scoped="" ref="0x10b7f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x10b784568" loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x10b784568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7848b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b784a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b784bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b784d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b783020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b783330"/>
        <function-ref name="get" scoped="" ref="0x10b7834b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b783640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7837c8"/>
        <function-ref name="set" scoped="" ref="0x10b783950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b783ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b783c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b782020"/>
        <function-ref name="clr" scoped="" ref="0x10b7821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x10b78e568" loc="84:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x10b78e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b78e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b78ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b78ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b78ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b78d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b78d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b78d330"/>
        <function-ref name="get" scoped="" ref="0x10b78d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b78d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b78d7c8"/>
        <function-ref name="set" scoped="" ref="0x10b78d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b78dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b78dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b78c020"/>
        <function-ref name="clr" scoped="" ref="0x10b78c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x10b7b5568" loc="97:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x10b7b5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7b58b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7b5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7b5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7b5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7b4020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7b41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7b4330"/>
        <function-ref name="get" scoped="" ref="0x10b7b44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7b4640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7b47c8"/>
        <function-ref name="set" scoped="" ref="0x10b7b4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7b4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7b4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7b3020"/>
        <function-ref name="clr" scoped="" ref="0x10b7b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x10b7c3568" loc="108:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x10b7c3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7c38b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7c3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7c3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7c3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7c2020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7c21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7c2330"/>
        <function-ref name="get" scoped="" ref="0x10b7c24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7c2640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7c27c8"/>
        <function-ref name="set" scoped="" ref="0x10b7c2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7c2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7c2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7c1020"/>
        <function-ref name="clr" scoped="" ref="0x10b7c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x10b7e9558" loc="204:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x10b7e9558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7e98a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7e9a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7e9bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7e9d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7e8020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7e81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7e8330"/>
        <function-ref name="get" scoped="" ref="0x10b7e84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7e8640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7e87c8"/>
        <function-ref name="set" scoped="" ref="0x10b7e8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7e8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7e8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7e7020"/>
        <function-ref name="clr" scoped="" ref="0x10b7e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x10b814560" loc="216:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x10b814560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8148b0"/>
        <function-ref name="isInput" scoped="" ref="0x10b814a38"/>
        <function-ref name="setResistor" scoped="" ref="0x10b814bc0"/>
        <function-ref name="toggle" scoped="" ref="0x10b814d48"/>
        <function-ref name="isOutput" scoped="" ref="0x10b813020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b813330"/>
        <function-ref name="get" scoped="" ref="0x10b8134b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b813640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8137c8"/>
        <function-ref name="set" scoped="" ref="0x10b813950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b813ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b813c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b812020"/>
        <function-ref name="clr" scoped="" ref="0x10b8121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10b7797f0" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10b7797f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b779b40"/>
        <function-ref name="isInput" scoped="" ref="0x10b779cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b779e50"/>
        <function-ref name="toggle" scoped="" ref="0x10b778020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7781a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b778330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7784b8"/>
        <function-ref name="get" scoped="" ref="0x10b778640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7787c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b778950"/>
        <function-ref name="set" scoped="" ref="0x10b778ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b778c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b778de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b777120"/>
        <function-ref name="clr" scoped="" ref="0x10b7772a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0CLK" ref="0x10b7bb5d0" loc="176:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0CLK" scoped="" ref="0x10b7bb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7bbd20"/>
        <function-ref name="isInput" scoped="" ref="0x10b7ba020"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7ba1a8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7ba330"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7ba4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7ba640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7ba7c8"/>
        <function-ref name="get" scoped="" ref="0x10b7ba950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7baad8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7bac60"/>
        <function-ref name="set" scoped="" ref="0x10b7bade8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7b9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7b91a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7b9430"/>
        <function-ref name="clr" scoped="" ref="0x10b7b95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1SIMO" ref="0x10b7d9580" loc="194:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1SIMO" scoped="" ref="0x10b7d9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7d98d0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7d9a58"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7d9be0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7d9d68"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7d8020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7d8330"/>
        <function-ref name="get" scoped="" ref="0x10b7d84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7d8640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7d87c8"/>
        <function-ref name="set" scoped="" ref="0x10b7d8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7d8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7d8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7d7020"/>
        <function-ref name="clr" scoped="" ref="0x10b7d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10b774568" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10b774568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7748b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b774a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b774bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b774d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b773020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b773330"/>
        <function-ref name="get" scoped="" ref="0x10b7734b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b773640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7737c8"/>
        <function-ref name="set" scoped="" ref="0x10b773950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b773ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b773c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b772020"/>
        <function-ref name="clr" scoped="" ref="0x10b7721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x10b77e568" loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x10b77e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b77e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b77ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b77ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b77ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b77d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b77d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b77d330"/>
        <function-ref name="get" scoped="" ref="0x10b77d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b77d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b77d7c8"/>
        <function-ref name="set" scoped="" ref="0x10b77d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b77dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b77dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b77c020"/>
        <function-ref name="clr" scoped="" ref="0x10b77c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x10b7a6568" loc="87:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x10b7a6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7a68b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7a6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7a6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7a6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7a5020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7a5330"/>
        <function-ref name="get" scoped="" ref="0x10b7a54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7a5640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7a57c8"/>
        <function-ref name="set" scoped="" ref="0x10b7a5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7a5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7a5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7a4020"/>
        <function-ref name="clr" scoped="" ref="0x10b7a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x10b7af568" loc="100:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x10b7af568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7af8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7afa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7afbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7afd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7ae020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7ae330"/>
        <function-ref name="get" scoped="" ref="0x10b7ae4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7ae640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7ae7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7ae950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7aead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7aec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7ad020"/>
        <function-ref name="clr" scoped="" ref="0x10b7ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x10b7bd568" loc="111:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x10b7bd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7bd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7bda40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7bdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7bdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7bc020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7bc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7bc330"/>
        <function-ref name="get" scoped="" ref="0x10b7bc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7bc640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7bc7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7bc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7bcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7bcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7bb020"/>
        <function-ref name="clr" scoped="" ref="0x10b7bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10b764020" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10b764020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b764370"/>
        <function-ref name="isInput" scoped="" ref="0x10b7644f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b764680"/>
        <function-ref name="toggle" scoped="" ref="0x10b764808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b764990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b764b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b764ca0"/>
        <function-ref name="get" scoped="" ref="0x10b764e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b763020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7631a8"/>
        <function-ref name="set" scoped="" ref="0x10b763330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7634b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b763640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7638c8"/>
        <function-ref name="clr" scoped="" ref="0x10b763a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10b76e568" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10b76e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b76e9b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b76eb40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b76ecc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b76ee50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b76d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b76d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b76d330"/>
        <function-ref name="get" scoped="" ref="0x10b76d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b76d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b76d7c8"/>
        <function-ref name="set" scoped="" ref="0x10b76d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b76dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b76dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b78a020"/>
        <function-ref name="clr" scoped="" ref="0x10b78a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x10b796568" loc="77:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x10b796568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7968b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b796a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b796bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b796d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b795020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b795330"/>
        <function-ref name="get" scoped="" ref="0x10b7954b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b795640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7957c8"/>
        <function-ref name="set" scoped="" ref="0x10b795950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b795ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b795c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b794020"/>
        <function-ref name="clr" scoped="" ref="0x10b7941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SDA" ref="0x10b7e5570" loc="187:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SDA" scoped="" ref="0x10b7e5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7e58c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7e5a48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7e5bd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7e5d58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7e41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7e4330"/>
        <function-ref name="get" scoped="" ref="0x10b7e44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7e4640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7e47c8"/>
        <function-ref name="set" scoped="" ref="0x10b7e4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7e4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7e4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7e3020"/>
        <function-ref name="clr" scoped="" ref="0x10b7e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x10b803558" loc="207:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x10b803558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8038a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b803a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b803bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b803d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b802020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b802330"/>
        <function-ref name="get" scoped="" ref="0x10b8024b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b802640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8027c8"/>
        <function-ref name="set" scoped="" ref="0x10b802950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b802ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b802c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b801020"/>
        <function-ref name="clr" scoped="" ref="0x10b8011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0SIMO" ref="0x10b7d2580" loc="180:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0SIMO" scoped="" ref="0x10b7d2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7d28d0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7d2a58"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7d2be0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7d2d68"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7d1020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7d11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7d1330"/>
        <function-ref name="get" scoped="" ref="0x10b7d14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7d1640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7d17c8"/>
        <function-ref name="set" scoped="" ref="0x10b7d1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7d1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7d1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7d0020"/>
        <function-ref name="clr" scoped="" ref="0x10b7d01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x10b801558" loc="208:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x10b801558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8018a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b801a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b801bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b801d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b800020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8001a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b800330"/>
        <function-ref name="get" scoped="" ref="0x10b8004b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b800640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8007c8"/>
        <function-ref name="set" scoped="" ref="0x10b800950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b800ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b800c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7ff020"/>
        <function-ref name="clr" scoped="" ref="0x10b7ff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x10b792568" loc="82:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x10b792568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b792ab8"/>
        <function-ref name="isInput" scoped="" ref="0x10b792c40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b792dc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b791020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7911a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b791330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7914b8"/>
        <function-ref name="get" scoped="" ref="0x10b791640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7917c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b791950"/>
        <function-ref name="set" scoped="" ref="0x10b791ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b791c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b791de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b790120"/>
        <function-ref name="clr" scoped="" ref="0x10b7902a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x10b79b568" loc="95:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x10b79b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b79b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b79ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b79bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b79bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b79a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b79a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b79a330"/>
        <function-ref name="get" scoped="" ref="0x10b79a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b79a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b79a7c8"/>
        <function-ref name="set" scoped="" ref="0x10b79a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b79aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b79ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7b7020"/>
        <function-ref name="clr" scoped="" ref="0x10b7b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x10b7a9568" loc="106:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x10b7a9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7a98b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7a9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7a9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7a9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7c6020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7c61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7c6330"/>
        <function-ref name="get" scoped="" ref="0x10b7c64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7c6640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7c67c8"/>
        <function-ref name="set" scoped="" ref="0x10b7c6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7c6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7c6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7c5020"/>
        <function-ref name="clr" scoped="" ref="0x10b7c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0TXD" ref="0x10b7d67f8" loc="178:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0TXD" scoped="" ref="0x10b7d67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7d6b48"/>
        <function-ref name="isInput" scoped="" ref="0x10b7d6cd0"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7d6e58"/>
        <function-ref name="toggle" scoped="" ref="0x10b7d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7d51a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7d5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7d54b8"/>
        <function-ref name="get" scoped="" ref="0x10b7d5640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7d57c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7d5950"/>
        <function-ref name="set" scoped="" ref="0x10b7d5ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7d5c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7d5de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7d4120"/>
        <function-ref name="clr" scoped="" ref="0x10b7d42a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0STE" ref="0x10b7b9980" loc="177:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0STE" scoped="" ref="0x10b7b9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7b9cd0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7b9e58"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7b8020"/>
        <function-ref name="toggle" scoped="" ref="0x10b7b81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7b8330"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7b84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7b8640"/>
        <function-ref name="get" scoped="" ref="0x10b7b87c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7b8950"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7b8ad8"/>
        <function-ref name="set" scoped="" ref="0x10b7b8c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7b8de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7d6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7d62a8"/>
        <function-ref name="clr" scoped="" ref="0x10b7d6430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0STE" ref="0x10b7cb570" loc="184:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0STE" scoped="" ref="0x10b7cb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7cb8c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7cba48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7cbbd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7cbd58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7ca020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7ca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7ca330"/>
        <function-ref name="get" scoped="" ref="0x10b7ca4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7ca640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7ca7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7ca950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7caad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7cac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7c9020"/>
        <function-ref name="clr" scoped="" ref="0x10b7c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SDA" ref="0x10b7ed570" loc="201:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SDA" scoped="" ref="0x10b7ed570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7ed8c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7eda48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7edbd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7edd58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7ec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7ec330"/>
        <function-ref name="get" scoped="" ref="0x10b7ec4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7ec640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7ec7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7ec950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7ecad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7ecc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7eb020"/>
        <function-ref name="clr" scoped="" ref="0x10b7eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x10b816558" loc="214:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x10b816558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8168a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b816a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b816bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b816d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b815020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b815330"/>
        <function-ref name="get" scoped="" ref="0x10b8154b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b815640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8157c8"/>
        <function-ref name="set" scoped="" ref="0x10b815950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b815ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b815c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b814020"/>
        <function-ref name="clr" scoped="" ref="0x10b8141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0RXD" ref="0x10b7d4670" loc="179:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0RXD" scoped="" ref="0x10b7d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7d49c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7d4b48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7d4cd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7d4e58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7d3020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7d31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7d3330"/>
        <function-ref name="get" scoped="" ref="0x10b7d34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7d3640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7d37c8"/>
        <function-ref name="set" scoped="" ref="0x10b7d3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7d3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7d3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7d2020"/>
        <function-ref name="clr" scoped="" ref="0x10b7d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1TXD" ref="0x10b7dd570" loc="192:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1TXD" scoped="" ref="0x10b7dd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7dd8c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7dda48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7ddbd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7ddd58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7dc020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7dc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7dc330"/>
        <function-ref name="get" scoped="" ref="0x10b7dc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7dc640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7dc7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7dc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7dcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7dcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7db020"/>
        <function-ref name="clr" scoped="" ref="0x10b7db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x10b75fb00" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x10b75fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b75fe50"/>
        <function-ref name="isInput" scoped="" ref="0x10b75e020"/>
        <function-ref name="setResistor" scoped="" ref="0x10b75e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x10b75e330"/>
        <function-ref name="isOutput" scoped="" ref="0x10b75e4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b75e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b75e7c8"/>
        <function-ref name="get" scoped="" ref="0x10b75e950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b75ead8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b75ec60"/>
        <function-ref name="set" scoped="" ref="0x10b75ede8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b77b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b77b1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b77b430"/>
        <function-ref name="clr" scoped="" ref="0x10b77b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10b786568" loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10b786568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7868b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b786a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b786bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b786d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b785020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b785330"/>
        <function-ref name="get" scoped="" ref="0x10b7854b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b785640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7857c8"/>
        <function-ref name="set" scoped="" ref="0x10b785950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b785ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b785c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b784020"/>
        <function-ref name="clr" scoped="" ref="0x10b7841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0SOMI" ref="0x10b7d0580" loc="181:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0SOMI" scoped="" ref="0x10b7d0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7d08d0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7d0a58"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7d0be0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7d0d68"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7cf020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7cf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7cf330"/>
        <function-ref name="get" scoped="" ref="0x10b7cf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7cf640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7cf7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7cf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7cfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7cfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7ce020"/>
        <function-ref name="clr" scoped="" ref="0x10b7ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x10b7ad568" loc="104:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x10b7ad568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7ad8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7ada40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7adbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7add50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7ac020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7ac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7ac330"/>
        <function-ref name="get" scoped="" ref="0x10b7ac4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7ac640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7ac7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7ac950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7acad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7acc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7ab020"/>
        <function-ref name="clr" scoped="" ref="0x10b7ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x10b782568" loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x10b782568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7828b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b782a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b782bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b782d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b781020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b781330"/>
        <function-ref name="get" scoped="" ref="0x10b7814b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b781640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7817c8"/>
        <function-ref name="set" scoped="" ref="0x10b781950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b781ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b781c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b780020"/>
        <function-ref name="clr" scoped="" ref="0x10b7801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x10b78c568" loc="85:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x10b78c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b78c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b78ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b78cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b78cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b78b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b78b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b78b330"/>
        <function-ref name="get" scoped="" ref="0x10b78b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b78b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b78b7c8"/>
        <function-ref name="set" scoped="" ref="0x10b78b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b78bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b78bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7a8020"/>
        <function-ref name="clr" scoped="" ref="0x10b7a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x10b7b3568" loc="98:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x10b7b3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7b38b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7b3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7b3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7b3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7b2020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7b2330"/>
        <function-ref name="get" scoped="" ref="0x10b7b24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7b2640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7b27c8"/>
        <function-ref name="set" scoped="" ref="0x10b7b2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7b2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7b2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7b1020"/>
        <function-ref name="clr" scoped="" ref="0x10b7b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x10b7c1568" loc="109:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x10b7c1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7c18b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7c1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7c1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7c1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7c0020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7c01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7c0330"/>
        <function-ref name="get" scoped="" ref="0x10b7c04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7c0640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7c07c8"/>
        <function-ref name="set" scoped="" ref="0x10b7c0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7c0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7c0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7bf020"/>
        <function-ref name="clr" scoped="" ref="0x10b7bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x10b7fa558" loc="211:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x10b7fa558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7fa8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7faa30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7fabb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7fad40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7f9020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7f9330"/>
        <function-ref name="get" scoped="" ref="0x10b7f94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7f9640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7f97c8"/>
        <function-ref name="set" scoped="" ref="0x10b7f9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7f9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7f9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7f8020"/>
        <function-ref name="clr" scoped="" ref="0x10b7f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10b766238" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10b766238"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b766588"/>
        <function-ref name="isInput" scoped="" ref="0x10b766710"/>
        <function-ref name="setResistor" scoped="" ref="0x10b766898"/>
        <function-ref name="toggle" scoped="" ref="0x10b766a20"/>
        <function-ref name="isOutput" scoped="" ref="0x10b766ba8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b766d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b753020"/>
        <function-ref name="get" scoped="" ref="0x10b7531a8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b753330"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7534b8"/>
        <function-ref name="set" scoped="" ref="0x10b753640"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7537c8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b753950"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b753bd8"/>
        <function-ref name="clr" scoped="" ref="0x10b753d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10b772568" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10b772568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7728b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b772a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b772bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b772d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b771020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b771330"/>
        <function-ref name="get" scoped="" ref="0x10b7714b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b771640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7717c8"/>
        <function-ref name="set" scoped="" ref="0x10b771950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b771ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b771c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b770020"/>
        <function-ref name="clr" scoped="" ref="0x10b7701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x10b77c568" loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x10b77c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b77c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b77ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b77cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b77cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b799020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b799330"/>
        <function-ref name="get" scoped="" ref="0x10b7994b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b799640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7997c8"/>
        <function-ref name="set" scoped="" ref="0x10b799950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b799ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b799c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b798020"/>
        <function-ref name="clr" scoped="" ref="0x10b7981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x10b7a4568" loc="88:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x10b7a4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7a48b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7a4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7a4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7a4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7a3020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7a3330"/>
        <function-ref name="get" scoped="" ref="0x10b7a34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7a3640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7a37c8"/>
        <function-ref name="set" scoped="" ref="0x10b7a3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7a3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7a3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7a2020"/>
        <function-ref name="clr" scoped="" ref="0x10b7a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0CLK" ref="0x10b7ce570" loc="183:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0CLK" scoped="" ref="0x10b7ce570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7ce8c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7cea48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7cebd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7ced58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7cc020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7cc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7cc330"/>
        <function-ref name="get" scoped="" ref="0x10b7cc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7cc640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7cc7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7cc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7ccad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7ccc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7cb020"/>
        <function-ref name="clr" scoped="" ref="0x10b7cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x10b7e7558" loc="205:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x10b7e7558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7e78a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7e7a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7e7bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7e7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b806020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b806330"/>
        <function-ref name="get" scoped="" ref="0x10b8064b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b806640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8067c8"/>
        <function-ref name="set" scoped="" ref="0x10b806950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b806ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b806c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b805020"/>
        <function-ref name="clr" scoped="" ref="0x10b8051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x10b79f568" loc="93:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x10b79f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b79f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b79fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b79fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b79fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b79e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b79e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b79e330"/>
        <function-ref name="get" scoped="" ref="0x10b79e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b79e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b79e7c8"/>
        <function-ref name="set" scoped="" ref="0x10b79e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b79ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b79ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b79d020"/>
        <function-ref name="clr" scoped="" ref="0x10b79d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1CLK" ref="0x10b7f5570" loc="197:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1CLK" scoped="" ref="0x10b7f5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7f58c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7f5a48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7f5bd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7f5d58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7f4020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7f4330"/>
        <function-ref name="get" scoped="" ref="0x10b7f44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7f4640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7f47c8"/>
        <function-ref name="set" scoped="" ref="0x10b7f4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7f4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7f4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7f3020"/>
        <function-ref name="clr" scoped="" ref="0x10b7f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1STE" ref="0x10b7df570" loc="191:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1STE" scoped="" ref="0x10b7df570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7df8c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7dfa48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7dfbd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7dfd58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7de020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7de1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7de330"/>
        <function-ref name="get" scoped="" ref="0x10b7de4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7de640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7de7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7de950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7dead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7dec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7dd020"/>
        <function-ref name="clr" scoped="" ref="0x10b7dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10b763e10" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10b763e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7621a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b762330"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7624b8"/>
        <function-ref name="toggle" scoped="" ref="0x10b762640"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7627c8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b762950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b762ad8"/>
        <function-ref name="get" scoped="" ref="0x10b762c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b762de8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b761020"/>
        <function-ref name="set" scoped="" ref="0x10b7611a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b761330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7614b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b761740"/>
        <function-ref name="clr" scoped="" ref="0x10b7618c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10b78a568" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10b78a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b78a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b78aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b78abc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b78ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b789020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b789330"/>
        <function-ref name="get" scoped="" ref="0x10b7894b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b789640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7897c8"/>
        <function-ref name="set" scoped="" ref="0x10b789950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b789ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b789c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b788020"/>
        <function-ref name="clr" scoped="" ref="0x10b7881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x10b794568" loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x10b794568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7948b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b794a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b794bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b794d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b793020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b793330"/>
        <function-ref name="get" scoped="" ref="0x10b7934b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b793640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7937c8"/>
        <function-ref name="set" scoped="" ref="0x10b793950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b793ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b793c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b792020"/>
        <function-ref name="clr" scoped="" ref="0x10b7921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1SOMI" ref="0x10b7d7580" loc="195:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1SOMI" scoped="" ref="0x10b7d7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7d78d0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7d7a58"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7d7be0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7d7d68"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7f6020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7f61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7f6330"/>
        <function-ref name="get" scoped="" ref="0x10b7f64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7f6640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7f67c8"/>
        <function-ref name="set" scoped="" ref="0x10b7f6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7f6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7f6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7f5020"/>
        <function-ref name="clr" scoped="" ref="0x10b7f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SIMO" ref="0x10b7c9580" loc="185:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SIMO" scoped="" ref="0x10b7c9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7c98d0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7c9a58"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7c9be0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7c9d68"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7c8020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7c81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7c8330"/>
        <function-ref name="get" scoped="" ref="0x10b7c84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7c8640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7c87c8"/>
        <function-ref name="set" scoped="" ref="0x10b7c8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7c8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7c8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7c7020"/>
        <function-ref name="clr" scoped="" ref="0x10b7c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1CLK" ref="0x10b7e1570" loc="190:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1CLK" scoped="" ref="0x10b7e1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7e18c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7e1a48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7e1bd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7e1d58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7e0020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7e01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7e0330"/>
        <function-ref name="get" scoped="" ref="0x10b7e04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7e0640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7e07c8"/>
        <function-ref name="set" scoped="" ref="0x10b7e0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7e0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7e0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7df020"/>
        <function-ref name="clr" scoped="" ref="0x10b7df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x10b7ff558" loc="209:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x10b7ff558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7ff8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7ffa30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7ffbb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7ffd40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7fd020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7fd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7fd330"/>
        <function-ref name="get" scoped="" ref="0x10b7fd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7fd640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7fd7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7fd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7fdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7fdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7fc020"/>
        <function-ref name="clr" scoped="" ref="0x10b7fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x10b790668" loc="83:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x10b790668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7909b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b790b40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b790cc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b790e50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b78f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b78f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b78f330"/>
        <function-ref name="get" scoped="" ref="0x10b78f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b78f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b78f7c8"/>
        <function-ref name="set" scoped="" ref="0x10b78f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b78fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b78fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b78e020"/>
        <function-ref name="clr" scoped="" ref="0x10b78e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x10b7b7568" loc="96:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x10b7b7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7b78b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7b7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7b7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7b7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7b6020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7b61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7b6330"/>
        <function-ref name="get" scoped="" ref="0x10b7b64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7b6640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7b67c8"/>
        <function-ref name="set" scoped="" ref="0x10b7b6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7b6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7b6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7b5020"/>
        <function-ref name="clr" scoped="" ref="0x10b7b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x10b7c5568" loc="107:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x10b7c5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7c58b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7c5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7c5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7c5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7c4020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7c41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7c4330"/>
        <function-ref name="get" scoped="" ref="0x10b7c44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7c4640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7c47c8"/>
        <function-ref name="set" scoped="" ref="0x10b7c4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7c4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7c4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7c3020"/>
        <function-ref name="clr" scoped="" ref="0x10b7c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10b77b978" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10b77b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b77bcc8"/>
        <function-ref name="isInput" scoped="" ref="0x10b77be50"/>
        <function-ref name="setResistor" scoped="" ref="0x10b77a020"/>
        <function-ref name="toggle" scoped="" ref="0x10b77a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b77a330"/>
        <function-ref name="getResistor" scoped="" ref="0x10b77a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b77a640"/>
        <function-ref name="get" scoped="" ref="0x10b77a7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b77a950"/>
        <function-ref name="getRaw" scoped="" ref="0x10b77aad8"/>
        <function-ref name="set" scoped="" ref="0x10b77ac60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b77ade8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b779020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7792a8"/>
        <function-ref name="clr" scoped="" ref="0x10b779430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x10b7ab568" loc="105:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x10b7ab568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7ab8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7aba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7abbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7abd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7aa020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7aa330"/>
        <function-ref name="get" scoped="" ref="0x10b7aa4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7aa640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7aa7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7aa950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7aaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7aac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7a9020"/>
        <function-ref name="clr" scoped="" ref="0x10b7a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10b777668" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10b777668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7779b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b777b40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b777cc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b777e50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b775020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b775330"/>
        <function-ref name="get" scoped="" ref="0x10b7754b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b775640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7757c8"/>
        <function-ref name="set" scoped="" ref="0x10b775950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b775ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b775c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b774020"/>
        <function-ref name="clr" scoped="" ref="0x10b7741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x10b780568" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x10b780568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7808b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b780a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b780bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b780d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b77f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b77f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b77f330"/>
        <function-ref name="get" scoped="" ref="0x10b77f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b77f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b77f7c8"/>
        <function-ref name="set" scoped="" ref="0x10b77f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b77fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b77fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b77e020"/>
        <function-ref name="clr" scoped="" ref="0x10b77e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x10b7a8568" loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x10b7a8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7a88b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7a8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7a8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7a8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7a7020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7a71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7a7330"/>
        <function-ref name="get" scoped="" ref="0x10b7a74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7a7640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7a77c8"/>
        <function-ref name="set" scoped="" ref="0x10b7a7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7a7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7a7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7a6020"/>
        <function-ref name="clr" scoped="" ref="0x10b7a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x10b7b1568" loc="99:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x10b7b1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7b18b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7b1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7b1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7b1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7b0020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7b01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7b0330"/>
        <function-ref name="get" scoped="" ref="0x10b7b04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7b0640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7b07c8"/>
        <function-ref name="set" scoped="" ref="0x10b7b0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7b0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7b0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7af020"/>
        <function-ref name="clr" scoped="" ref="0x10b7af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x10b7bf568" loc="110:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x10b7bf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7bf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7bfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7bfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7bfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7be020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7be1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7be330"/>
        <function-ref name="get" scoped="" ref="0x10b7be4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7be640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7be7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7be950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7bead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7bec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7bd020"/>
        <function-ref name="clr" scoped="" ref="0x10b7bd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10b752140" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10b752140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b752490"/>
        <function-ref name="isInput" scoped="" ref="0x10b752618"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7527a0"/>
        <function-ref name="toggle" scoped="" ref="0x10b752928"/>
        <function-ref name="isOutput" scoped="" ref="0x10b752ab0"/>
        <function-ref name="getResistor" scoped="" ref="0x10b752c38"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b752dc0"/>
        <function-ref name="get" scoped="" ref="0x10b765020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7651a8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b765330"/>
        <function-ref name="set" scoped="" ref="0x10b7654b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b765640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7657c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b765a50"/>
        <function-ref name="clr" scoped="" ref="0x10b765bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10b770568" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10b770568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7708b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b770a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b770bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b770d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b76f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b76f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b76f330"/>
        <function-ref name="get" scoped="" ref="0x10b76f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b76f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b76f7c8"/>
        <function-ref name="set" scoped="" ref="0x10b76f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b76fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b76fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b76e020"/>
        <function-ref name="clr" scoped="" ref="0x10b76e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x10b798568" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x10b798568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7988b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b798a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b798bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b798d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b797020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b797330"/>
        <function-ref name="get" scoped="" ref="0x10b7974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b797640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7977c8"/>
        <function-ref name="set" scoped="" ref="0x10b797950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b797ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b797c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b796020"/>
        <function-ref name="clr" scoped="" ref="0x10b7961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x10b7a2568" loc="89:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x10b7a2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7a28b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7a2a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7a2bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7a2d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7a0020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7a01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7a0330"/>
        <function-ref name="get" scoped="" ref="0x10b7a04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7a0640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7a07c8"/>
        <function-ref name="set" scoped="" ref="0x10b7a0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7a0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7a0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b79f020"/>
        <function-ref name="clr" scoped="" ref="0x10b79f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1RXD" ref="0x10b7db570" loc="193:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1RXD" scoped="" ref="0x10b7db570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7db8c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7dba48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7dbbd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7dbd58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7da020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7da1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7da330"/>
        <function-ref name="get" scoped="" ref="0x10b7da4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7da640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7da7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7da950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7daad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7dac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7d9020"/>
        <function-ref name="clr" scoped="" ref="0x10b7d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SOMI" ref="0x10b7ef580" loc="200:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SOMI" scoped="" ref="0x10b7ef580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7ef8d0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7efa58"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7efbe0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7efd68"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7ee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7ee330"/>
        <function-ref name="get" scoped="" ref="0x10b7ee4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7ee640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7ee7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7ee950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7eead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7eec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7ed020"/>
        <function-ref name="clr" scoped="" ref="0x10b7ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SCL" ref="0x10b7eb570" loc="202:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SCL" scoped="" ref="0x10b7eb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7eb8c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7eba48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7ebbd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7ebd58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7ea020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7ea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7ea330"/>
        <function-ref name="get" scoped="" ref="0x10b7ea4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7ea640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7ea7c8"/>
        <function-ref name="set" scoped="" ref="0x10b7ea950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7eaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7eac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7e9020"/>
        <function-ref name="clr" scoped="" ref="0x10b7e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x10b79d568" loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x10b79d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b79d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b79da40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b79dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b79dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b79c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b79c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b79c330"/>
        <function-ref name="get" scoped="" ref="0x10b79c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b79c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b79c7c8"/>
        <function-ref name="set" scoped="" ref="0x10b79c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b79cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b79cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b79b020"/>
        <function-ref name="clr" scoped="" ref="0x10b79b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x10b805558" loc="206:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x10b805558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8058a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b805a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b805bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b805d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b804020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b804330"/>
        <function-ref name="get" scoped="" ref="0x10b8044b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b804640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8047c8"/>
        <function-ref name="set" scoped="" ref="0x10b804950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b804ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b804c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b803020"/>
        <function-ref name="clr" scoped="" ref="0x10b8031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x10b7f8558" loc="213:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x10b7f8558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7f88a8"/>
        <function-ref name="isInput" scoped="" ref="0x10b7f8a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7f8bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10b7f8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7f7020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7f7330"/>
        <function-ref name="get" scoped="" ref="0x10b7f74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7f7640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7f77c8"/>
        <function-ref name="set" scoped="" ref="0x10b7f7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7f7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7f7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b816020"/>
        <function-ref name="clr" scoped="" ref="0x10b8161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SOMI" ref="0x10b7c7580" loc="186:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SOMI" scoped="" ref="0x10b7c7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7c78d0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7c7a58"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7c7be0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7c7d68"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7e6020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7e61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7e6330"/>
        <function-ref name="get" scoped="" ref="0x10b7e64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7e6640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7e67c8"/>
        <function-ref name="set" scoped="" ref="0x10b7e6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7e6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7e6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7e5020"/>
        <function-ref name="clr" scoped="" ref="0x10b7e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x10b812568" loc="217:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x10b812568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8128b8"/>
        <function-ref name="isInput" scoped="" ref="0x10b812a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10b812bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10b812d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10b811020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b811330"/>
        <function-ref name="get" scoped="" ref="0x10b8114b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b811640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8117c8"/>
        <function-ref name="set" scoped="" ref="0x10b811950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b811ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b811c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b810020"/>
        <function-ref name="clr" scoped="" ref="0x10b8101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SIMO" ref="0x10b7f1580" loc="199:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SIMO" scoped="" ref="0x10b7f1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7f18d0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7f1a58"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7f1be0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7f1d68"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7f0020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7f01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7f0330"/>
        <function-ref name="get" scoped="" ref="0x10b7f04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7f0640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7f07c8"/>
        <function-ref name="set" scoped="" ref="0x10b7f0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7f0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7f0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7ef020"/>
        <function-ref name="clr" scoped="" ref="0x10b7ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SCL" ref="0x10b7e3570" loc="188:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SCL" scoped="" ref="0x10b7e3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b7e38c0"/>
        <function-ref name="isInput" scoped="" ref="0x10b7e3a48"/>
        <function-ref name="setResistor" scoped="" ref="0x10b7e3bd0"/>
        <function-ref name="toggle" scoped="" ref="0x10b7e3d58"/>
        <function-ref name="isOutput" scoped="" ref="0x10b7e2020"/>
        <function-ref name="getResistor" scoped="" ref="0x10b7e21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b7e2330"/>
        <function-ref name="get" scoped="" ref="0x10b7e24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b7e2640"/>
        <function-ref name="getRaw" scoped="" ref="0x10b7e27c8"/>
        <function-ref name="set" scoped="" ref="0x10b7e2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b7e2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b7e2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b7e1020"/>
        <function-ref name="clr" scoped="" ref="0x10b7e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b83a6a8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b83a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b83a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x10b83ab80"/>
        <function-ref name="setResistor" scoped="" ref="0x10b83ad08"/>
        <function-ref name="toggle" scoped="" ref="0x10b839020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8391a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b839330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8394b8"/>
        <function-ref name="get" scoped="" ref="0x10b839640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8397c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b839950"/>
        <function-ref name="set" scoped="" ref="0x10b839ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b839c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b839de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b838120"/>
        <function-ref name="clr" scoped="" ref="0x10b8382a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8563e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8563e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b856730"/>
        <function-ref name="isInput" scoped="" ref="0x10b8568b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b856a40"/>
        <function-ref name="toggle" scoped="" ref="0x10b856bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b856d50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b855020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8551a8"/>
        <function-ref name="get" scoped="" ref="0x10b855330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8554b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b855640"/>
        <function-ref name="set" scoped="" ref="0x10b8557c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b855950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b855ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b855d60"/>
        <function-ref name="clr" scoped="" ref="0x10b854020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b851020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b851020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b851370"/>
        <function-ref name="isInput" scoped="" ref="0x10b8514f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b851680"/>
        <function-ref name="toggle" scoped="" ref="0x10b851808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b851990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b851b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b851ca0"/>
        <function-ref name="get" scoped="" ref="0x10b851e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b850020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8501a8"/>
        <function-ref name="set" scoped="" ref="0x10b850330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8504b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b850640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8508c8"/>
        <function-ref name="clr" scoped="" ref="0x10b850a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b84dca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b84dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b84c020"/>
        <function-ref name="isInput" scoped="" ref="0x10b84c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b84c330"/>
        <function-ref name="toggle" scoped="" ref="0x10b84c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b84c640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b84c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b84c950"/>
        <function-ref name="get" scoped="" ref="0x10b84cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b84cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b84cde8"/>
        <function-ref name="set" scoped="" ref="0x10b84b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b84b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b84b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b84b5b8"/>
        <function-ref name="clr" scoped="" ref="0x10b84b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b848748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b848748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b848a98"/>
        <function-ref name="isInput" scoped="" ref="0x10b848c20"/>
        <function-ref name="setResistor" scoped="" ref="0x10b848da8"/>
        <function-ref name="toggle" scoped="" ref="0x10b847020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8471a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b847330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8474b8"/>
        <function-ref name="get" scoped="" ref="0x10b847640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8477c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b847950"/>
        <function-ref name="set" scoped="" ref="0x10b847ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b847c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b847de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b868120"/>
        <function-ref name="clr" scoped="" ref="0x10b8682a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8653e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8653e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b865730"/>
        <function-ref name="isInput" scoped="" ref="0x10b8658b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b865a40"/>
        <function-ref name="toggle" scoped="" ref="0x10b865bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b865d50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b863020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8631a8"/>
        <function-ref name="get" scoped="" ref="0x10b863330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8634b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b863640"/>
        <function-ref name="set" scoped="" ref="0x10b8637c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b863950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b863ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b863d60"/>
        <function-ref name="clr" scoped="" ref="0x10b862020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b85f020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b85f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b85f370"/>
        <function-ref name="isInput" scoped="" ref="0x10b85f4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b85f680"/>
        <function-ref name="toggle" scoped="" ref="0x10b85f808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b85f990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b85fb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b85fca0"/>
        <function-ref name="get" scoped="" ref="0x10b85fe28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b85e020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b85e1a8"/>
        <function-ref name="set" scoped="" ref="0x10b85e330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b85e4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b85e640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b85e8c8"/>
        <function-ref name="clr" scoped="" ref="0x10b85ea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b85bca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b85bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b85a020"/>
        <function-ref name="isInput" scoped="" ref="0x10b85a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b85a330"/>
        <function-ref name="toggle" scoped="" ref="0x10b85a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b85a640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b85a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b85a950"/>
        <function-ref name="get" scoped="" ref="0x10b85aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b85ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b85ade8"/>
        <function-ref name="set" scoped="" ref="0x10b859020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8591a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b859330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8595b8"/>
        <function-ref name="clr" scoped="" ref="0x10b859740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b878748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b878748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b878a98"/>
        <function-ref name="isInput" scoped="" ref="0x10b878c20"/>
        <function-ref name="setResistor" scoped="" ref="0x10b878da8"/>
        <function-ref name="toggle" scoped="" ref="0x10b877020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8771a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b877330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8774b8"/>
        <function-ref name="get" scoped="" ref="0x10b877640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8777c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b877950"/>
        <function-ref name="set" scoped="" ref="0x10b877ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b877c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b877de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b876120"/>
        <function-ref name="clr" scoped="" ref="0x10b8762a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8733e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8733e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b873730"/>
        <function-ref name="isInput" scoped="" ref="0x10b8738b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b873a40"/>
        <function-ref name="toggle" scoped="" ref="0x10b873bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b873d50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b872020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8721a8"/>
        <function-ref name="get" scoped="" ref="0x10b872330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8724b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b872640"/>
        <function-ref name="set" scoped="" ref="0x10b8727c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b872950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b872ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b872d60"/>
        <function-ref name="clr" scoped="" ref="0x10b871020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b86e020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b86e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b86e370"/>
        <function-ref name="isInput" scoped="" ref="0x10b86e4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b86e680"/>
        <function-ref name="toggle" scoped="" ref="0x10b86e808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b86e990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b86eb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b86eca0"/>
        <function-ref name="get" scoped="" ref="0x10b86ee28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b86d020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b86d1a8"/>
        <function-ref name="set" scoped="" ref="0x10b86d330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b86d4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b86d640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b86d8c8"/>
        <function-ref name="clr" scoped="" ref="0x10b86da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b86aca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b86aca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b869020"/>
        <function-ref name="isInput" scoped="" ref="0x10b8691a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b869330"/>
        <function-ref name="toggle" scoped="" ref="0x10b8694b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b869640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8697c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b869950"/>
        <function-ref name="get" scoped="" ref="0x10b869ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b869c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b869de8"/>
        <function-ref name="set" scoped="" ref="0x10b88a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b88a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b88a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b88a5b8"/>
        <function-ref name="clr" scoped="" ref="0x10b88a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b887820" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b887820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b887b70"/>
        <function-ref name="isInput" scoped="" ref="0x10b887cf8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b887e80"/>
        <function-ref name="toggle" scoped="" ref="0x10b886030"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8861b8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b886340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8864c8"/>
        <function-ref name="get" scoped="" ref="0x10b886650"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8867d8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b886960"/>
        <function-ref name="set" scoped="" ref="0x10b886ae8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b886c70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b886df8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b885120"/>
        <function-ref name="clr" scoped="" ref="0x10b8852a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8813e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8813e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b881730"/>
        <function-ref name="isInput" scoped="" ref="0x10b8818b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b881a40"/>
        <function-ref name="toggle" scoped="" ref="0x10b881bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b881d50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b880020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8801a8"/>
        <function-ref name="get" scoped="" ref="0x10b880330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8804b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b880640"/>
        <function-ref name="set" scoped="" ref="0x10b8807c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b880950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b880ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b880d60"/>
        <function-ref name="clr" scoped="" ref="0x10b87f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b87c020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b87c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b87c370"/>
        <function-ref name="isInput" scoped="" ref="0x10b87c4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b87c680"/>
        <function-ref name="toggle" scoped="" ref="0x10b87c808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b87c990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b87cb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b87cca0"/>
        <function-ref name="get" scoped="" ref="0x10b87ce28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b87b020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b87b1a8"/>
        <function-ref name="set" scoped="" ref="0x10b87b330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b87b4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b87b640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b87b8c8"/>
        <function-ref name="clr" scoped="" ref="0x10b87ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b89aca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b89aca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b899020"/>
        <function-ref name="isInput" scoped="" ref="0x10b8991a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b899330"/>
        <function-ref name="toggle" scoped="" ref="0x10b8994b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b899640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8997c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b899950"/>
        <function-ref name="get" scoped="" ref="0x10b899ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b899c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b899de8"/>
        <function-ref name="set" scoped="" ref="0x10b898020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8981a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b898330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8985b8"/>
        <function-ref name="clr" scoped="" ref="0x10b898740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b895748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b895748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b895a98"/>
        <function-ref name="isInput" scoped="" ref="0x10b895c20"/>
        <function-ref name="setResistor" scoped="" ref="0x10b895da8"/>
        <function-ref name="toggle" scoped="" ref="0x10b894020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8941a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b894330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8944b8"/>
        <function-ref name="get" scoped="" ref="0x10b894640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8947c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b894950"/>
        <function-ref name="set" scoped="" ref="0x10b894ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b894c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b894de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b893120"/>
        <function-ref name="clr" scoped="" ref="0x10b8932a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8903e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8903e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b890730"/>
        <function-ref name="isInput" scoped="" ref="0x10b8908b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b890a40"/>
        <function-ref name="toggle" scoped="" ref="0x10b890bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b890d50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b88f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b88f1a8"/>
        <function-ref name="get" scoped="" ref="0x10b88f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b88f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b88f640"/>
        <function-ref name="set" scoped="" ref="0x10b88f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b88f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b88fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b88fd60"/>
        <function-ref name="clr" scoped="" ref="0x10b88e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b88b020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b88b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b88b370"/>
        <function-ref name="isInput" scoped="" ref="0x10b88b4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b88b680"/>
        <function-ref name="toggle" scoped="" ref="0x10b88b808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b88b990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b88bb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b88bca0"/>
        <function-ref name="get" scoped="" ref="0x10b88be28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8ac020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8ac1a8"/>
        <function-ref name="set" scoped="" ref="0x10b8ac330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8ac4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8ac640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8ac8c8"/>
        <function-ref name="clr" scoped="" ref="0x10b8aca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8a9ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8a9ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8a8020"/>
        <function-ref name="isInput" scoped="" ref="0x10b8a81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8a8330"/>
        <function-ref name="toggle" scoped="" ref="0x10b8a84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8a8640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8a87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8a8950"/>
        <function-ref name="get" scoped="" ref="0x10b8a8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8a8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8a8de8"/>
        <function-ref name="set" scoped="" ref="0x10b8a7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8a71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8a7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8a75b8"/>
        <function-ref name="clr" scoped="" ref="0x10b8a7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8a4748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8a4748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8a4a98"/>
        <function-ref name="isInput" scoped="" ref="0x10b8a4c20"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8a4da8"/>
        <function-ref name="toggle" scoped="" ref="0x10b8a2020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8a21a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8a2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8a24b8"/>
        <function-ref name="get" scoped="" ref="0x10b8a2640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8a27c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8a2950"/>
        <function-ref name="set" scoped="" ref="0x10b8a2ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8a2c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8a2de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8a1120"/>
        <function-ref name="clr" scoped="" ref="0x10b8a12a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b89e3e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b89e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b89e730"/>
        <function-ref name="isInput" scoped="" ref="0x10b89e8b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b89ea40"/>
        <function-ref name="toggle" scoped="" ref="0x10b89ebc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b89ed50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b89d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b89d1a8"/>
        <function-ref name="get" scoped="" ref="0x10b89d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b89d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b89d640"/>
        <function-ref name="set" scoped="" ref="0x10b89d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b89d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b89dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b89dd60"/>
        <function-ref name="clr" scoped="" ref="0x10b89c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8bb020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8bb370"/>
        <function-ref name="isInput" scoped="" ref="0x10b8bb4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8bb680"/>
        <function-ref name="toggle" scoped="" ref="0x10b8bb808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8bb990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8bbb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8bbca0"/>
        <function-ref name="get" scoped="" ref="0x10b8bbe28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8ba020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8ba1a8"/>
        <function-ref name="set" scoped="" ref="0x10b8ba330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8ba4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8ba640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8ba8c8"/>
        <function-ref name="clr" scoped="" ref="0x10b8baa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8b7ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8b7ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8b6020"/>
        <function-ref name="isInput" scoped="" ref="0x10b8b61a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8b6330"/>
        <function-ref name="toggle" scoped="" ref="0x10b8b64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8b6640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8b67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8b6950"/>
        <function-ref name="get" scoped="" ref="0x10b8b6ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8b6c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8b6de8"/>
        <function-ref name="set" scoped="" ref="0x10b8b5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8b51a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8b5330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8b55b8"/>
        <function-ref name="clr" scoped="" ref="0x10b8b5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8b29a8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8b29a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8b2cf8"/>
        <function-ref name="isInput" scoped="" ref="0x10b8b2e80"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8b1030"/>
        <function-ref name="toggle" scoped="" ref="0x10b8b11b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8b1340"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8b14c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8b1650"/>
        <function-ref name="get" scoped="" ref="0x10b8b17d8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8b1960"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8b1ae8"/>
        <function-ref name="set" scoped="" ref="0x10b8b1c70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8b1df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8b0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8b02a8"/>
        <function-ref name="clr" scoped="" ref="0x10b8b0430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8ad3e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8ad3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8ad730"/>
        <function-ref name="isInput" scoped="" ref="0x10b8ad8b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8ada40"/>
        <function-ref name="toggle" scoped="" ref="0x10b8adbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8add50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8ce1a8"/>
        <function-ref name="get" scoped="" ref="0x10b8ce330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8ce4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8ce640"/>
        <function-ref name="set" scoped="" ref="0x10b8ce7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8ce950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8cead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8ced60"/>
        <function-ref name="clr" scoped="" ref="0x10b8cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8ca020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8ca370"/>
        <function-ref name="isInput" scoped="" ref="0x10b8ca4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8ca680"/>
        <function-ref name="toggle" scoped="" ref="0x10b8ca808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8ca990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8cab18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8caca0"/>
        <function-ref name="get" scoped="" ref="0x10b8cae28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8c9020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8c91a8"/>
        <function-ref name="set" scoped="" ref="0x10b8c9330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8c94b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8c9640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8c98c8"/>
        <function-ref name="clr" scoped="" ref="0x10b8c9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8c6ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8c6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8c5020"/>
        <function-ref name="isInput" scoped="" ref="0x10b8c51a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8c5330"/>
        <function-ref name="toggle" scoped="" ref="0x10b8c54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8c5640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8c57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8c5950"/>
        <function-ref name="get" scoped="" ref="0x10b8c5ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8c5c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8c5de8"/>
        <function-ref name="set" scoped="" ref="0x10b8c4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8c41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8c4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8c45b8"/>
        <function-ref name="clr" scoped="" ref="0x10b8c4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8c1748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8c1748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8c1a98"/>
        <function-ref name="isInput" scoped="" ref="0x10b8c1c20"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8c1da8"/>
        <function-ref name="toggle" scoped="" ref="0x10b8bf020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8bf1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8bf330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8bf4b8"/>
        <function-ref name="get" scoped="" ref="0x10b8bf640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8bf7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8bf950"/>
        <function-ref name="set" scoped="" ref="0x10b8bfad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8bfc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8bfde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8be120"/>
        <function-ref name="clr" scoped="" ref="0x10b8be2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8de3e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8de3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8de730"/>
        <function-ref name="isInput" scoped="" ref="0x10b8de8b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8dea40"/>
        <function-ref name="toggle" scoped="" ref="0x10b8debc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8ded50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8dd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8dd1a8"/>
        <function-ref name="get" scoped="" ref="0x10b8dd330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8dd4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8dd640"/>
        <function-ref name="set" scoped="" ref="0x10b8dd7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8dd950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8ddad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8ddd60"/>
        <function-ref name="clr" scoped="" ref="0x10b8dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8d9020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8d9370"/>
        <function-ref name="isInput" scoped="" ref="0x10b8d94f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8d9680"/>
        <function-ref name="toggle" scoped="" ref="0x10b8d9808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8d9990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8d9b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8d9ca0"/>
        <function-ref name="get" scoped="" ref="0x10b8d9e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8d8020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8d81a8"/>
        <function-ref name="set" scoped="" ref="0x10b8d8330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8d84b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8d8640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8d88c8"/>
        <function-ref name="clr" scoped="" ref="0x10b8d8a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8d5ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8d5ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8d4020"/>
        <function-ref name="isInput" scoped="" ref="0x10b8d41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8d4330"/>
        <function-ref name="toggle" scoped="" ref="0x10b8d44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8d4640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8d47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8d4950"/>
        <function-ref name="get" scoped="" ref="0x10b8d4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8d4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8d4de8"/>
        <function-ref name="set" scoped="" ref="0x10b8d3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8d31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8d3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8d35b8"/>
        <function-ref name="clr" scoped="" ref="0x10b8d3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8d0748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8d0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8d0a98"/>
        <function-ref name="isInput" scoped="" ref="0x10b8d0c20"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8d0da8"/>
        <function-ref name="toggle" scoped="" ref="0x10b8cf020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8cf1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8cf330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8cf4b8"/>
        <function-ref name="get" scoped="" ref="0x10b8cf640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8cf7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8cf950"/>
        <function-ref name="set" scoped="" ref="0x10b8cfad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8cfc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8cfde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8f2120"/>
        <function-ref name="clr" scoped="" ref="0x10b8f22a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8ef3e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8ef3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8ef730"/>
        <function-ref name="isInput" scoped="" ref="0x10b8ef8b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8efa40"/>
        <function-ref name="toggle" scoped="" ref="0x10b8efbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8efd50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8ee1a8"/>
        <function-ref name="get" scoped="" ref="0x10b8ee330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8ee4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8ee640"/>
        <function-ref name="set" scoped="" ref="0x10b8ee7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8ee950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8eead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8eed60"/>
        <function-ref name="clr" scoped="" ref="0x10b8ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8ea020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8ea370"/>
        <function-ref name="isInput" scoped="" ref="0x10b8ea4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8ea680"/>
        <function-ref name="toggle" scoped="" ref="0x10b8ea808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8ea990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8eab18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8eaca0"/>
        <function-ref name="get" scoped="" ref="0x10b8eae28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8e9020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8e91a8"/>
        <function-ref name="set" scoped="" ref="0x10b8e9330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8e94b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8e9640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8e98c8"/>
        <function-ref name="clr" scoped="" ref="0x10b8e9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8e6ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8e6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8e5020"/>
        <function-ref name="isInput" scoped="" ref="0x10b8e51a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8e5330"/>
        <function-ref name="toggle" scoped="" ref="0x10b8e54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8e5640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8e57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8e5950"/>
        <function-ref name="get" scoped="" ref="0x10b8e5ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8e5c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8e5de8"/>
        <function-ref name="set" scoped="" ref="0x10b8e4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8e41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8e4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8e45b8"/>
        <function-ref name="clr" scoped="" ref="0x10b8e4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b904748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b904748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b904a98"/>
        <function-ref name="isInput" scoped="" ref="0x10b904c20"/>
        <function-ref name="setResistor" scoped="" ref="0x10b904da8"/>
        <function-ref name="toggle" scoped="" ref="0x10b903020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b9031a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b903330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b9034b8"/>
        <function-ref name="get" scoped="" ref="0x10b903640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b9037c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b903950"/>
        <function-ref name="set" scoped="" ref="0x10b903ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b903c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b903de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b902120"/>
        <function-ref name="clr" scoped="" ref="0x10b9022a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8ff3e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8ff3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8ff730"/>
        <function-ref name="isInput" scoped="" ref="0x10b8ff8b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8ffa40"/>
        <function-ref name="toggle" scoped="" ref="0x10b8ffbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8ffd50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8fe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8fe1a8"/>
        <function-ref name="get" scoped="" ref="0x10b8fe330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8fe4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8fe640"/>
        <function-ref name="set" scoped="" ref="0x10b8fe7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8fe950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8fead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8fed60"/>
        <function-ref name="clr" scoped="" ref="0x10b8fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8fa020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8fa370"/>
        <function-ref name="isInput" scoped="" ref="0x10b8fa4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8fa680"/>
        <function-ref name="toggle" scoped="" ref="0x10b8fa808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8fa990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8fab18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8faca0"/>
        <function-ref name="get" scoped="" ref="0x10b8fae28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8f9020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8f91a8"/>
        <function-ref name="set" scoped="" ref="0x10b8f9330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8f94b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8f9640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8f98c8"/>
        <function-ref name="clr" scoped="" ref="0x10b8f9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b8f6ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b8f6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b8f5020"/>
        <function-ref name="isInput" scoped="" ref="0x10b8f51a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b8f5330"/>
        <function-ref name="toggle" scoped="" ref="0x10b8f54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b8f5640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b8f57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b8f5950"/>
        <function-ref name="get" scoped="" ref="0x10b8f5ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b8f5c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b8f5de8"/>
        <function-ref name="set" scoped="" ref="0x10b8f4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b8f41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b8f4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b8f45b8"/>
        <function-ref name="clr" scoped="" ref="0x10b8f4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b915748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b915748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b915a98"/>
        <function-ref name="isInput" scoped="" ref="0x10b915c20"/>
        <function-ref name="setResistor" scoped="" ref="0x10b915da8"/>
        <function-ref name="toggle" scoped="" ref="0x10b914020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b9141a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b914330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b9144b8"/>
        <function-ref name="get" scoped="" ref="0x10b914640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b9147c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b914950"/>
        <function-ref name="set" scoped="" ref="0x10b914ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b914c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b914de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b913120"/>
        <function-ref name="clr" scoped="" ref="0x10b9132a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b9103e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b9103e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b910730"/>
        <function-ref name="isInput" scoped="" ref="0x10b9108b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b910a40"/>
        <function-ref name="toggle" scoped="" ref="0x10b910bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b910d50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b90f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b90f1a8"/>
        <function-ref name="get" scoped="" ref="0x10b90f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b90f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b90f640"/>
        <function-ref name="set" scoped="" ref="0x10b90f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b90f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b90fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b90fd60"/>
        <function-ref name="clr" scoped="" ref="0x10b90e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b90b020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b90b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b90b370"/>
        <function-ref name="isInput" scoped="" ref="0x10b90b4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b90b680"/>
        <function-ref name="toggle" scoped="" ref="0x10b90b808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b90b990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b90bb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b90bca0"/>
        <function-ref name="get" scoped="" ref="0x10b90be28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b90a020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b90a1a8"/>
        <function-ref name="set" scoped="" ref="0x10b90a330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b90a4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b90a640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b90a8c8"/>
        <function-ref name="clr" scoped="" ref="0x10b90aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b907ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b907ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b905020"/>
        <function-ref name="isInput" scoped="" ref="0x10b9051a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b905330"/>
        <function-ref name="toggle" scoped="" ref="0x10b9054b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b905640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b9057c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b905950"/>
        <function-ref name="get" scoped="" ref="0x10b905ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b905c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b905de8"/>
        <function-ref name="set" scoped="" ref="0x10b928020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b9281a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b928330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b9285b8"/>
        <function-ref name="clr" scoped="" ref="0x10b928740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b925748" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b925748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b925a98"/>
        <function-ref name="isInput" scoped="" ref="0x10b925c20"/>
        <function-ref name="setResistor" scoped="" ref="0x10b925da8"/>
        <function-ref name="toggle" scoped="" ref="0x10b924020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b9241a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b924330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b9244b8"/>
        <function-ref name="get" scoped="" ref="0x10b924640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b9247c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b924950"/>
        <function-ref name="set" scoped="" ref="0x10b924ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b924c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b924de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b923120"/>
        <function-ref name="clr" scoped="" ref="0x10b9232a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b9203e0" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b9203e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b920730"/>
        <function-ref name="isInput" scoped="" ref="0x10b9208b8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b920a40"/>
        <function-ref name="toggle" scoped="" ref="0x10b920bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b920d50"/>
        <function-ref name="getResistor" scoped="" ref="0x10b91f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b91f1a8"/>
        <function-ref name="get" scoped="" ref="0x10b91f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b91f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b91f640"/>
        <function-ref name="set" scoped="" ref="0x10b91f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b91f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b91fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b91fd60"/>
        <function-ref name="clr" scoped="" ref="0x10b91e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b91b020" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b91b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b91b370"/>
        <function-ref name="isInput" scoped="" ref="0x10b91b4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b91b680"/>
        <function-ref name="toggle" scoped="" ref="0x10b91b808"/>
        <function-ref name="isOutput" scoped="" ref="0x10b91b990"/>
        <function-ref name="getResistor" scoped="" ref="0x10b91bb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b91bca0"/>
        <function-ref name="get" scoped="" ref="0x10b91be28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b91a020"/>
        <function-ref name="getRaw" scoped="" ref="0x10b91a1a8"/>
        <function-ref name="set" scoped="" ref="0x10b91a330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b91a4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b91a640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b91a8c8"/>
        <function-ref name="clr" scoped="" ref="0x10b91aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10b917ca8" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10b917ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b93a020"/>
        <function-ref name="isInput" scoped="" ref="0x10b93a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10b93a330"/>
        <function-ref name="toggle" scoped="" ref="0x10b93a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10b93a640"/>
        <function-ref name="getResistor" scoped="" ref="0x10b93a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b93a950"/>
        <function-ref name="get" scoped="" ref="0x10b93aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b93ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x10b93ade8"/>
        <function-ref name="set" scoped="" ref="0x10b939020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b9391a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b939330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b9395b8"/>
        <function-ref name="clr" scoped="" ref="0x10b939740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10b98fa90" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10b98fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b98fde0"/>
        <function-ref name="isInput" scoped="" ref="0x10b9a4020"/>
        <function-ref name="setResistor" scoped="" ref="0x10b9a41a8"/>
        <function-ref name="toggle" scoped="" ref="0x10b9a4330"/>
        <function-ref name="isOutput" scoped="" ref="0x10b9a44b8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b9a4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b9a47c8"/>
        <function-ref name="get" scoped="" ref="0x10b9a4950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b9a4ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b9a4c60"/>
        <function-ref name="set" scoped="" ref="0x10b9a4de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b9a3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b9a31a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b9a3430"/>
        <function-ref name="clr" scoped="" ref="0x10b9a35b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10b990958" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10b990958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b990ca8"/>
        <function-ref name="isInput" scoped="" ref="0x10b990e30"/>
        <function-ref name="toggle" scoped="" ref="0x10b98f020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b98f1a8"/>
        <function-ref name="get" scoped="" ref="0x10b98f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b98f4b8"/>
        <function-ref name="set" scoped="" ref="0x10b98f640"/>
        <function-ref name="clr" scoped="" ref="0x10b98f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10b9a02e8" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10b9a02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b9a0638"/>
        <function-ref name="isInput" scoped="" ref="0x10b9a07c0"/>
        <function-ref name="setResistor" scoped="" ref="0x10b9a0948"/>
        <function-ref name="toggle" scoped="" ref="0x10b9a0ad0"/>
        <function-ref name="isOutput" scoped="" ref="0x10b9a0c58"/>
        <function-ref name="getResistor" scoped="" ref="0x10b9a0de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b99f020"/>
        <function-ref name="get" scoped="" ref="0x10b99f1a8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b99f330"/>
        <function-ref name="getRaw" scoped="" ref="0x10b99f4b8"/>
        <function-ref name="set" scoped="" ref="0x10b99f640"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b99f7c8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b99f950"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b99fbd8"/>
        <function-ref name="clr" scoped="" ref="0x10b99fd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10b9a10e0" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10b9a10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b9a1430"/>
        <function-ref name="isInput" scoped="" ref="0x10b9a15b8"/>
        <function-ref name="toggle" scoped="" ref="0x10b9a1740"/>
        <function-ref name="isOutput" scoped="" ref="0x10b9a18c8"/>
        <function-ref name="get" scoped="" ref="0x10b9a1a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b9a1bd8"/>
        <function-ref name="set" scoped="" ref="0x10b9a1d60"/>
        <function-ref name="clr" scoped="" ref="0x10b9a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10b99ba90" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10b99ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b99bde0"/>
        <function-ref name="isInput" scoped="" ref="0x10b99a020"/>
        <function-ref name="setResistor" scoped="" ref="0x10b99a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x10b99a330"/>
        <function-ref name="isOutput" scoped="" ref="0x10b99a4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x10b99a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b99a7c8"/>
        <function-ref name="get" scoped="" ref="0x10b99a950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10b99aad8"/>
        <function-ref name="getRaw" scoped="" ref="0x10b99ac60"/>
        <function-ref name="set" scoped="" ref="0x10b99ade8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10b999020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10b9991a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10b999430"/>
        <function-ref name="clr" scoped="" ref="0x10b9995b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10b99c958" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10b99c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10b99cca8"/>
        <function-ref name="isInput" scoped="" ref="0x10b99ce30"/>
        <function-ref name="toggle" scoped="" ref="0x10b99b020"/>
        <function-ref name="isOutput" scoped="" ref="0x10b99b1a8"/>
        <function-ref name="get" scoped="" ref="0x10b99b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10b99b4b8"/>
        <function-ref name="set" scoped="" ref="0x10b99b640"/>
        <function-ref name="clr" scoped="" ref="0x10b99b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10b9b3a60" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
      <component-ref qname="TestTmp102AppC.TestTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10b9b3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10bb5ed60"/>
        <function-ref name="fired" scoped="" ref="0x10bb5f470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10bb5e1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10bb5fd10"/>
        <function-ref name="getdt" scoped="" ref="0x10bb5d648"/>
        <function-ref name="gett0" scoped="" ref="0x10bb5d1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x10bb5f8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10bb61620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10bb5e790"/>
        <function-ref name="startOneShot" scoped="" ref="0x10bb61ac0"/>
        <function-ref name="stop" scoped="" ref="0x10bb5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10b9d17d8" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10b9d17d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10b9cda18"/>
        <function-ref name="fired" scoped="" ref="0x10b9cf158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10b9cfe48"/>
        <function-ref name="isOneShot" scoped="" ref="0x10b9cf9f8"/>
        <function-ref name="getdt" scoped="" ref="0x10b9cc2e8"/>
        <function-ref name="gett0" scoped="" ref="0x10b9cde68"/>
        <function-ref name="isRunning" scoped="" ref="0x10b9cf5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10b9d0370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10b9cd448"/>
        <function-ref name="startOneShot" scoped="" ref="0x10b9d0810"/>
        <function-ref name="stop" scoped="" ref="0x10b9d0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10b9c8de8" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10b9c8de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10b9c40c0"/>
        <function-ref name="fired" scoped="" ref="0x10b9c6798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10b9c54d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x10b9c5088"/>
        <function-ref name="getdt" scoped="" ref="0x10b9c4960"/>
        <function-ref name="gett0" scoped="" ref="0x10b9c4510"/>
        <function-ref name="isRunning" scoped="" ref="0x10b9c6be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10b9c79e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10b9c5aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x10b9c7e80"/>
        <function-ref name="stop" scoped="" ref="0x10b9c6348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10b9bf338" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10b9bf338"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10b9c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10b9c80f0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10b9c80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10b9c8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10bac4c00" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10bac4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10bac0410"/>
        <function-ref name="fired" scoped="" ref="0x10bac24a8"/>
        <function-ref name="startAt" scoped="" ref="0x10bac2db8"/>
        <function-ref name="isRunning" scoped="" ref="0x10bac2930"/>
        <function-ref name="getAlarm" scoped="" ref="0x10bac0898"/>
        <function-ref name="start" scoped="" ref="0x10bac39f0"/>
        <function-ref name="stop" scoped="" ref="0x10bac2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10bac4418" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10bac4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10bac4768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10c47a230" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10c47a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10c477918"/>
        <function-ref name="fired" scoped="" ref="0x10c479980"/>
        <function-ref name="startAt" scoped="" ref="0x10c477310"/>
        <function-ref name="isRunning" scoped="" ref="0x10c479e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x10c477da0"/>
        <function-ref name="start" scoped="" ref="0x10c479020"/>
        <function-ref name="stop" scoped="" ref="0x10c4794f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10c47ba08" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10c47ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c47bd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10c4625b8" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10c4625b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c462908"/>
        <function-ref name="setEvent" scoped="" ref="0x10c462a90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c462c18"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c462da0"/>
        <function-ref name="fired" scoped="" ref="0x10c461020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10c466b88" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10c466b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c464020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c4641a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c464330"/>
        <function-ref name="get" scoped="" ref="0x10c4644b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c464640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c4647c8"/>
        <function-ref name="getMode" scoped="" ref="0x10c464950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c464ad8"/>
        <function-ref name="overflow" scoped="" ref="0x10c464c60"/>
        <function-ref name="setMode" scoped="" ref="0x10c464de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c463020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10c4632a8" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10c4632a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c4635f8"/>
        <function-ref name="getControl" scoped="" ref="0x10c463780"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c463908"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c463a90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c463c18"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c463da0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c462020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c4621a8"/>
        <function-ref name="setControl" scoped="" ref="0x10c462330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10b9eb510" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10b9eb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10b9eb860"/>
        <function-ref name="setEvent" scoped="" ref="0x10b9eb9e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10b9ebb70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10b9ebcf8"/>
        <function-ref name="fired" scoped="" ref="0x10b9ebe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10b9ef1c8" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10b9ef1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10b9ef518"/>
        <function-ref name="setClockSource" scoped="" ref="0x10b9ef6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b9ef828"/>
        <function-ref name="get" scoped="" ref="0x10b9ef9b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b9efb38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10b9efcc0"/>
        <function-ref name="getMode" scoped="" ref="0x10b9efe48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10b9ee020"/>
        <function-ref name="overflow" scoped="" ref="0x10b9ee1a8"/>
        <function-ref name="setMode" scoped="" ref="0x10b9ee330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10b9ee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10b9eece8" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10b9eece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10b9ec0a0"/>
        <function-ref name="getControl" scoped="" ref="0x10b9ec228"/>
        <function-ref name="enableEvents" scoped="" ref="0x10b9ec3b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10b9ec538"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10b9ec6c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10b9ec848"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10b9ec9d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10b9ecb58"/>
        <function-ref name="setControl" scoped="" ref="0x10b9ecce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x10c4aa020" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10c4aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10c4aa370"/>
        <function-ref name="setEvent" scoped="" ref="0x10c4aa4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10c4aa680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10c4aa808"/>
        <function-ref name="fired" scoped="" ref="0x10c4aa990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10c4ad568" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10c4ad568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10c4ad8b8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10c4ada40"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c4adbc8"/>
        <function-ref name="get" scoped="" ref="0x10c4add50"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c4ac020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c4ac1a8"/>
        <function-ref name="getMode" scoped="" ref="0x10c4ac330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c4ac4b8"/>
        <function-ref name="overflow" scoped="" ref="0x10c4ac640"/>
        <function-ref name="setMode" scoped="" ref="0x10c4ac7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10c4ac950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10c45f4f8" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10c45f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10c45dc88"/>
        <function-ref name="fired" scoped="" ref="0x10c45ed08"/>
        <function-ref name="startAt" scoped="" ref="0x10c45d680"/>
        <function-ref name="isRunning" scoped="" ref="0x10c45d1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x10c4ad150"/>
        <function-ref name="start" scoped="" ref="0x10c45e3a8"/>
        <function-ref name="stop" scoped="" ref="0x10c45e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10c460bd8" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10c460bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c45f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10c4acbd8" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10c4acbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10c4ab020"/>
        <function-ref name="getControl" scoped="" ref="0x10c4ab1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10c4ab330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10c4ab4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10c4ab640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10c4ab7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10c4ab950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10c4abad8"/>
        <function-ref name="setControl" scoped="" ref="0x10c4abc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10ba3c398" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10ba3c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10ba41130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ba41a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ba415b8"/>
        <function-ref name="overflow" scoped="" ref="0x10ba40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x10ba392d8" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10ba392d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10ba38088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ba38998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ba38510"/>
        <function-ref name="overflow" scoped="" ref="0x10ba38e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10ba4f8c0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10ba4f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10ba4fc10"/>
        <function-ref name="setClockSource" scoped="" ref="0x10ba4fd98"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ba4e020"/>
        <function-ref name="get" scoped="" ref="0x10ba4e1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ba4e330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ba4e4b8"/>
        <function-ref name="getMode" scoped="" ref="0x10ba4e640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ba4e7c8"/>
        <function-ref name="overflow" scoped="" ref="0x10ba4e950"/>
        <function-ref name="setMode" scoped="" ref="0x10ba4ead8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10ba4ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10ba5d888" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10ba5d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10ba51660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ba4f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ba51ae8"/>
        <function-ref name="overflow" scoped="" ref="0x10ba4f4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x10ba82b10" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x10ba82b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10ba818f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ba80230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ba81d80"/>
        <function-ref name="overflow" scoped="" ref="0x10ba806b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10ba74878" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10ba74878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10ba84660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ba82020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ba84ae8"/>
        <function-ref name="overflow" scoped="" ref="0x10ba824a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10c474128" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10c474128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10c472758"/>
        <function-ref name="fired" scoped="" ref="0x10c473808"/>
        <function-ref name="startAt" scoped="" ref="0x10c472150"/>
        <function-ref name="isRunning" scoped="" ref="0x10c473c90"/>
        <function-ref name="getAlarm" scoped="" ref="0x10c472be0"/>
        <function-ref name="start" scoped="" ref="0x10c474e78"/>
        <function-ref name="stop" scoped="" ref="0x10c473380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x10c46e450" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x10c46e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f1190"/>
            <typename><typedef-ref name="T32khz" ref="0x10b6f14e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10c46bab0"/>
        <function-ref name="fired" scoped="" ref="0x10c46db30"/>
        <function-ref name="startAt" scoped="" ref="0x10c46b4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x10c46b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x10c46a020"/>
        <function-ref name="start" scoped="" ref="0x10c46d1d0"/>
        <function-ref name="stop" scoped="" ref="0x10c46d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10c470230" loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10c470230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10c46f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10c46f930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10c46f4a8"/>
        <function-ref name="overflow" scoped="" ref="0x10c46fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x10bae6020" loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x10bae6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10bae6370"/>
        <function-ref name="runTask" scoped="" ref="0x10bae64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x10baea020" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10baea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10bae8690"/>
        <function-ref name="fired" scoped="" ref="0x10bae96f8"/>
        <function-ref name="startAt" scoped="" ref="0x10bae8088"/>
        <function-ref name="isRunning" scoped="" ref="0x10bae9b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x10bae8b18"/>
        <function-ref name="start" scoped="" ref="0x10baead70"/>
        <function-ref name="stop" scoped="" ref="0x10bae9270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10babdd88" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10babdd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10baec088"/>
        <function-ref name="fired" scoped="" ref="0x10baee6c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10baed470"/>
        <function-ref name="isOneShot" scoped="" ref="0x10baed020"/>
        <function-ref name="getdt" scoped="" ref="0x10baec928"/>
        <function-ref name="gett0" scoped="" ref="0x10baec4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x10baeeb18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10baef908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10baeda40"/>
        <function-ref name="startOneShot" scoped="" ref="0x10baefda8"/>
        <function-ref name="stop" scoped="" ref="0x10baee278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x10bb48478" loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x10bb48478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10bb487c8"/>
        <function-ref name="runTask" scoped="" ref="0x10bb48950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x10bb4d208" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x10bb4d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10bb495f0"/>
        <function-ref name="fired" scoped="" ref="0x10bb4cb28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10bb4b8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10bb4b470"/>
        <function-ref name="getdt" scoped="" ref="0x10bb48020"/>
        <function-ref name="gett0" scoped="" ref="0x10bb49a40"/>
        <function-ref name="isRunning" scoped="" ref="0x10bb4b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10bb4dd50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10bb49020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10bb4c238"/>
        <function-ref name="stop" scoped="" ref="0x10bb4c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10bb27020" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10bb27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10bb23358"/>
        <function-ref name="fired" scoped="" ref="0x10bb269b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10bb24748"/>
        <function-ref name="isOneShot" scoped="" ref="0x10bb242d8"/>
        <function-ref name="getdt" scoped="" ref="0x10bb23c38"/>
        <function-ref name="gett0" scoped="" ref="0x10bb237c8"/>
        <function-ref name="isRunning" scoped="" ref="0x10bb26e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10bb27b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10bb24d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x10bb26088"/>
        <function-ref name="stop" scoped="" ref="0x10bb26548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10bb46c38" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10bb46c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10bb45820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10bb45e48" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10bb45e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10bb3bbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10bb3a548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10bb3a0c0"/>
        <function-ref name="overflow" scoped="" ref="0x10bb3a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x10be1be28" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102C.nc">
      <component-ref qname="TestTmp102AppC.Temperature"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x10be1be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10be1a9e0"/>
        <function-ref name="readDone" scoped="" ref="0x10be1ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRequested" ref="0x10bb6d230" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102P.nc">
      <component-ref qname="SimpleTMP102P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10bb6d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10bb6d580"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10bb6d708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x10bb53020" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102P.nc">
      <component-ref qname="SimpleTMP102P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x10bb53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10bb53b68"/>
        <function-ref name="readDone" scoped="" ref="0x10bb52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSensor" ref="0x10bb52808" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102P.nc">
      <component-ref qname="SimpleTMP102P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerSensor" scoped="" ref="0x10bb52808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10bb4ea18"/>
        <function-ref name="fired" scoped="" ref="0x10bb50158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10bb50e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x10bb509f8"/>
        <function-ref name="getdt" scoped="" ref="0x10bb7b2e8"/>
        <function-ref name="gett0" scoped="" ref="0x10bb4ee68"/>
        <function-ref name="isRunning" scoped="" ref="0x10bb505a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10bb51390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10bb4e448"/>
        <function-ref name="startOneShot" scoped="" ref="0x10bb51830"/>
        <function-ref name="stop" scoped="" ref="0x10bb51cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFail" ref="0x10bb7b8e0" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102P.nc">
      <component-ref qname="SimpleTMP102P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFail" scoped="" ref="0x10bb7b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10bb77bc0"/>
        <function-ref name="fired" scoped="" ref="0x10bb78238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10bb77020"/>
        <function-ref name="isOneShot" scoped="" ref="0x10bb78ad8"/>
        <function-ref name="getdt" scoped="" ref="0x10bb764d8"/>
        <function-ref name="gett0" scoped="" ref="0x10bb76088"/>
        <function-ref name="isRunning" scoped="" ref="0x10bb78688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10bb7a458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10bb775f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x10bb7a8f8"/>
        <function-ref name="stop" scoped="" ref="0x10bb7ad98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CBasicAddr" ref="0x10bb8e340" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102P.nc">
      <component-ref qname="SimpleTMP102P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x10bb8e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x10bb6c408"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x10bb6c6b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10bb74020"/>
        <function-ref name="writeDone" scoped="" ref="0x10bb8d388"/>
        <function-ref name="write" scoped="" ref="0x10bb74ba0"/>
        <function-ref name="readDone" scoped="" ref="0x10bb6f790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x10bb70bd8" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102P.nc">
      <component-ref qname="SimpleTMP102P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10bb70bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10bb75020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10bb751a8"/>
        <function-ref name="request" scoped="" ref="0x10bb75330"/>
        <function-ref name="granted" scoped="" ref="0x10bb754b8"/>
        <function-ref name="isOwner" scoped="" ref="0x10bb75640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calculateTemp" ref="0x10bb8ac80" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/tmp102/SimpleTMP102P.nc">
      <component-ref qname="SimpleTMP102P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="calculateTemp" scoped="" ref="0x10bb8ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10bb89020"/>
        <function-ref name="runTask" scoped="" ref="0x10bb891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10c4eba08" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
      <component-ref qname="TestTmp102AppC.Temperature.TimerSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c4eba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10c53bd60"/>
        <function-ref name="fired" scoped="" ref="0x10c4e9470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10c53b1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10c4e9d10"/>
        <function-ref name="getdt" scoped="" ref="0x10c53a648"/>
        <function-ref name="gett0" scoped="" ref="0x10c53a1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x10c4e98c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10c4ea578"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10c53b790"/>
        <function-ref name="startOneShot" scoped="" ref="0x10c4eaa18"/>
        <function-ref name="stop" scoped="" ref="0x10c4e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10c538020" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/TimerMilliC.nc">
      <component-ref qname="TestTmp102AppC.Temperature.TimerFail"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10c538020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10b6f29d8"/>
            <typename><typedef-ref name="TMilli" ref="0x10b6f2d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10c5342b8"/>
        <function-ref name="fired" scoped="" ref="0x10c537978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10c5356c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x10c535278"/>
        <function-ref name="getdt" scoped="" ref="0x10c534b58"/>
        <function-ref name="gett0" scoped="" ref="0x10c534708"/>
        <function-ref name="isRunning" scoped="" ref="0x10c537dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10c538b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10c535c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x10c537088"/>
        <function-ref name="stop" scoped="" ref="0x10c537528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10c5310c0" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10c5310c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10c531410"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10c531598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430I2CConfigure" ref="0x10c52c420" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10c52c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430I2CConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10c52c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CBasicAddr" ref="0x10c531968" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x10c531968"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x10bb6c408"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x10bb6c6b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10c530560"/>
        <function-ref name="writeDone" scoped="" ref="0x10c52d8b0"/>
        <function-ref name="write" scoped="" ref="0x10c52e130"/>
        <function-ref name="readDone" scoped="" ref="0x10c52ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10c532460" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2C1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10c532460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10c5327b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10c532938"/>
        <function-ref name="request" scoped="" ref="0x10c532ac0"/>
        <function-ref name="granted" scoped="" ref="0x10c532c48"/>
        <function-ref name="isOwner" scoped="" ref="0x10c532dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x10bbfb300" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <component-ref qname="Msp430I2C1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10bbfb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10bbfb650"/>
        <function-ref name="configure" scoped="" ref="0x10bbfb7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupts" ref="0x10bc1fd30" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <component-ref qname="Msp430I2C1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10bc1fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bbf10d8"/>
        <function-ref name="txDone" scoped="" ref="0x10bbf1260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430I2CConfigure" ref="0x10bbf2020" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <component-ref qname="Msp430I2C1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10bbf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430I2CConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10bbf2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CBasicAddr" ref="0x10bbfbd10" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <component-ref qname="Msp430I2C1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x10bbfbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x10bb6c408"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x10bb6c6b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10bbfa8f0"/>
        <function-ref name="writeDone" scoped="" ref="0x10bbf6c08"/>
        <function-ref name="write" scoped="" ref="0x10bbf74c8"/>
        <function-ref name="readDone" scoped="" ref="0x10bbf6088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10bc008c8" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <component-ref qname="Msp430I2C1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10bc008c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10bc00c18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10bc00da0"/>
        <function-ref name="request" scoped="" ref="0x10bbfc020"/>
        <function-ref name="granted" scoped="" ref="0x10bbfc1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x10bbfc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsciResource" ref="0x10bbf4d60" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Msp430I2C1P.nc">
      <component-ref qname="Msp430I2C1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsciResource" scoped="" ref="0x10bbf4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10bbf30d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10bbf3260"/>
        <function-ref name="request" scoped="" ref="0x10bbf33e8"/>
        <function-ref name="granted" scoped="" ref="0x10bbf3570"/>
        <function-ref name="isOwner" scoped="" ref="0x10bbf36f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x10bc9a020" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CP.nc">
      <component-ref qname="Msp430I2C1P.I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10bc9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10bc9a390"/>
        <function-ref name="configure" scoped="" ref="0x10bc9a518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupts" ref="0x10bc8ee50" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CP.nc">
      <component-ref qname="Msp430I2C1P.I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10bc8ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bc8d1e8"/>
        <function-ref name="txDone" scoped="" ref="0x10bc8d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430I2CConfigure" ref="0x10bc94200" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CP.nc">
      <component-ref qname="Msp430I2C1P.I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10bc94200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430I2CConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10bc94570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CBasicAddr" ref="0x10bc9a8a8" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CP.nc">
      <component-ref qname="Msp430I2C1P.I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x10bc9a8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x10bb6c408"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x10bb6c6b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10bc99490"/>
        <function-ref name="writeDone" scoped="" ref="0x10bc967c8"/>
        <function-ref name="write" scoped="" ref="0x10bc97088"/>
        <function-ref name="readDone" scoped="" ref="0x10bc97c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsciB" ref="0x10bc947f8" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CP.nc">
      <component-ref qname="Msp430I2C1P.I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsciB" scoped="" ref="0x10bc947f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciB"/>
      </instance>
      <interface-functions>
        <function-ref name="disableArbLostInt" scoped="" ref="0x10bc94b48"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10bc94cd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10bc94e58"/>
        <function-ref name="enableStopInt" scoped="" ref="0x10bc93020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10bc931a8"/>
        <function-ref name="getStopBit" scoped="" ref="0x10bc93330"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10bc934b8"/>
        <function-ref name="resetUsci" scoped="" ref="0x10bc93640"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10bc937c8"/>
        <function-ref name="disableNACKInt" scoped="" ref="0x10bc93950"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10bc93ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x10bc93c60"/>
        <function-ref name="enableI2C" scoped="" ref="0x10bc93de8"/>
        <function-ref name="getUstat" scoped="" ref="0x10bc92120"/>
        <function-ref name="getUctl1" scoped="" ref="0x10bc922a8"/>
        <function-ref name="disableStartInt" scoped="" ref="0x10bc92430"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10bc925b8"/>
        <function-ref name="setUctl0" scoped="" ref="0x10bc92740"/>
        <function-ref name="setTXNACK" scoped="" ref="0x10bc928c8"/>
        <function-ref name="getUbr" scoped="" ref="0x10bc92a50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10bc92bd8"/>
        <function-ref name="isI2C" scoped="" ref="0x10bc92d60"/>
        <function-ref name="setTXStart" scoped="" ref="0x10bc91020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10bc911a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10bc91330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10bc916b8"/>
        <function-ref name="enableArbLostInt" scoped="" ref="0x10bc91840"/>
        <function-ref name="setGeneralCall" scoped="" ref="0x10bc919c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10bc91b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x10bc91cd8"/>
        <function-ref name="isSpi" scoped="" ref="0x10bc91e60"/>
        <function-ref name="enableIntr" scoped="" ref="0x10bc90020"/>
        <function-ref name="disableI2C" scoped="" ref="0x10bc901a8"/>
        <function-ref name="enableNACKInt" scoped="" ref="0x10bc90330"/>
        <function-ref name="disableStopInt" scoped="" ref="0x10bc904b8"/>
        <function-ref name="enableStartInt" scoped="" ref="0x10bc90640"/>
        <function-ref name="getMode" scoped="" ref="0x10bc907c8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10bc90950"/>
        <function-ref name="setTXStop" scoped="" ref="0x10bc90ad8"/>
        <function-ref name="setUbr" scoped="" ref="0x10bc90c60"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10bc90de8"/>
        <function-ref name="tx" scoped="" ref="0x10bc8f020"/>
        <function-ref name="getStartBit" scoped="" ref="0x10bc8f1a8"/>
        <function-ref name="enableSpi" scoped="" ref="0x10bc8f330"/>
        <function-ref name="setUstat" scoped="" ref="0x10bc8f4b8"/>
        <function-ref name="setUctl1" scoped="" ref="0x10bc8f640"/>
        <function-ref name="clearGeneralCall" scoped="" ref="0x10bc8f7c8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10bc8f950"/>
        <function-ref name="rx" scoped="" ref="0x10bc8fad8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10bc8e420"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10bc8e5a8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10bc8e730"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10bc8e8b8"/>
        <function-ref name="getUctl0" scoped="" ref="0x10bc8ea40"/>
        <function-ref name="disableSpi" scoped="" ref="0x10bc8ebc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10bc69220" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CP.nc">
      <component-ref qname="Msp430I2C1P.I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10bc69220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10bc69590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10bc69718"/>
        <function-ref name="request" scoped="" ref="0x10bc698a0"/>
        <function-ref name="granted" scoped="" ref="0x10bc69a28"/>
        <function-ref name="isOwner" scoped="" ref="0x10bc69bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsciResource" ref="0x10bc95498" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CP.nc">
      <component-ref qname="Msp430I2C1P.I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsciResource" scoped="" ref="0x10bc95498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10bc95808"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10bc95990"/>
        <function-ref name="request" scoped="" ref="0x10bc95b18"/>
        <function-ref name="granted" scoped="" ref="0x10bc95ca0"/>
        <function-ref name="isOwner" scoped="" ref="0x10bc95e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430SpiConfigure" ref="0x10bc89df8" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Z1UsciP.nc">
      <component-ref qname="Msp430I2C1P.Z1UsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10bc89df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10bc881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430I2CConfigure" ref="0x10bc88550" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/platforms/z1/chips/msp430/usci/Z1UsciP.nc">
      <component-ref qname="Msp430I2C1P.Z1UsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x10bc88550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430I2CConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10bc888c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsciB" ref="0x10bca92f8" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <component-ref qname="HplMsp430UsciB1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsciB" scoped="" ref="0x10bca92f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciB"/>
      </instance>
      <interface-functions>
        <function-ref name="disableArbLostInt" scoped="" ref="0x10bca9648"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10bca97d0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10bca9958"/>
        <function-ref name="enableStopInt" scoped="" ref="0x10bca9ae0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10bca9c68"/>
        <function-ref name="getStopBit" scoped="" ref="0x10bca9df0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10bca8020"/>
        <function-ref name="resetUsci" scoped="" ref="0x10bca81a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10bca8330"/>
        <function-ref name="disableNACKInt" scoped="" ref="0x10bca84b8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10bca8640"/>
        <function-ref name="disableIntr" scoped="" ref="0x10bca87c8"/>
        <function-ref name="enableI2C" scoped="" ref="0x10bca8950"/>
        <function-ref name="getUstat" scoped="" ref="0x10bca8bd8"/>
        <function-ref name="getUctl1" scoped="" ref="0x10bca8d60"/>
        <function-ref name="disableStartInt" scoped="" ref="0x10bca7020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10bca71a8"/>
        <function-ref name="setUctl0" scoped="" ref="0x10bca7330"/>
        <function-ref name="setTXNACK" scoped="" ref="0x10bca74b8"/>
        <function-ref name="getUbr" scoped="" ref="0x10bca7640"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10bca77c8"/>
        <function-ref name="isI2C" scoped="" ref="0x10bca7950"/>
        <function-ref name="setTXStart" scoped="" ref="0x10bca7ad8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10bca7c60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10bca7de8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10bca6220"/>
        <function-ref name="enableArbLostInt" scoped="" ref="0x10bca63a8"/>
        <function-ref name="setGeneralCall" scoped="" ref="0x10bca6530"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10bca66b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x10bca6840"/>
        <function-ref name="isSpi" scoped="" ref="0x10bca69c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x10bca6b50"/>
        <function-ref name="disableI2C" scoped="" ref="0x10bca6cd8"/>
        <function-ref name="enableNACKInt" scoped="" ref="0x10bca6e60"/>
        <function-ref name="disableStopInt" scoped="" ref="0x10bca5020"/>
        <function-ref name="enableStartInt" scoped="" ref="0x10bca51a8"/>
        <function-ref name="getMode" scoped="" ref="0x10bca5330"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10bca54b8"/>
        <function-ref name="setTXStop" scoped="" ref="0x10bca5640"/>
        <function-ref name="setUbr" scoped="" ref="0x10bca57c8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10bca5950"/>
        <function-ref name="tx" scoped="" ref="0x10bca5ad8"/>
        <function-ref name="getStartBit" scoped="" ref="0x10bca5c60"/>
        <function-ref name="enableSpi" scoped="" ref="0x10bca5de8"/>
        <function-ref name="setUstat" scoped="" ref="0x10bca4020"/>
        <function-ref name="setUctl1" scoped="" ref="0x10bca41a8"/>
        <function-ref name="clearGeneralCall" scoped="" ref="0x10bca4330"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10bca44b8"/>
        <function-ref name="rx" scoped="" ref="0x10bca4640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10bca4bc8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10bca4d50"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10bca3020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10bca31a8"/>
        <function-ref name="getUctl0" scoped="" ref="0x10bca3330"/>
        <function-ref name="disableSpi" scoped="" ref="0x10bca34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsciInterrupts" ref="0x10bca37e8" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1C.nc">
      <component-ref qname="HplMsp430UsciB1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsciInterrupts" scoped="" ref="0x10bca37e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bca3b38"/>
        <function-ref name="txDone" scoped="" ref="0x10bca3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x10bcc7928" loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1P.nc">
      <component-ref qname="HplMsp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x10bcc7928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10bcc7c78"/>
        <function-ref name="isInput" scoped="" ref="0x10bcc7e00"/>
        <function-ref name="setResistor" scoped="" ref="0x10bcc6020"/>
        <function-ref name="toggle" scoped="" ref="0x10bcc61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10bcc6330"/>
        <function-ref name="getResistor" scoped="" ref="0x10bcc64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10bcc6640"/>
        <function-ref name="get" scoped="" ref="0x10bcc67c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10bcc6950"/>
        <function-ref name="getRaw" scoped="" ref="0x10bcc6ad8"/>
        <function-ref name="set" scoped="" ref="0x10bcc6c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10bcc6de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10bcc5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10bcc52a8"/>
        <function-ref name="clr" scoped="" ref="0x10bcc5430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsciRawInterrupts" ref="0x10bcbdb40" loc="70:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1P.nc">
      <component-ref qname="HplMsp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsciRawInterrupts" scoped="" ref="0x10bcbdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciRawInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bcc0020"/>
        <function-ref name="txDone" scoped="" ref="0x10bcc01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10bccb3f8" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1P.nc">
      <component-ref qname="HplMsp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10bccb3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bccb748"/>
        <function-ref name="txDone" scoped="" ref="0x10bccb8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="USCL" ref="0x10bcc3618" loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1P.nc">
      <component-ref qname="HplMsp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="USCL" scoped="" ref="0x10bcc3618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10bcc3968"/>
        <function-ref name="isInput" scoped="" ref="0x10bcc3af0"/>
        <function-ref name="setResistor" scoped="" ref="0x10bcc3c78"/>
        <function-ref name="toggle" scoped="" ref="0x10bcc3e00"/>
        <function-ref name="isOutput" scoped="" ref="0x10bcc2020"/>
        <function-ref name="getResistor" scoped="" ref="0x10bcc21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10bcc2330"/>
        <function-ref name="get" scoped="" ref="0x10bcc24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10bcc2640"/>
        <function-ref name="getRaw" scoped="" ref="0x10bcc27c8"/>
        <function-ref name="set" scoped="" ref="0x10bcc2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10bcc2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10bcc2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10bcc1020"/>
        <function-ref name="clr" scoped="" ref="0x10bcc11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="USDA" ref="0x10bcc57a0" loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1P.nc">
      <component-ref qname="HplMsp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="USDA" scoped="" ref="0x10bcc57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10bcc5af0"/>
        <function-ref name="isInput" scoped="" ref="0x10bcc5c78"/>
        <function-ref name="setResistor" scoped="" ref="0x10bcc5e00"/>
        <function-ref name="toggle" scoped="" ref="0x10bcc4020"/>
        <function-ref name="isOutput" scoped="" ref="0x10bcc41a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10bcc4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10bcc44b8"/>
        <function-ref name="get" scoped="" ref="0x10bcc4640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10bcc47c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10bcc4950"/>
        <function-ref name="set" scoped="" ref="0x10bcc4ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10bcc4c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10bcc4de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10bcc3120"/>
        <function-ref name="clr" scoped="" ref="0x10bcc32a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x10bcc9ab0" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1P.nc">
      <component-ref qname="HplMsp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x10bcc9ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10bcc9e00"/>
        <function-ref name="isInput" scoped="" ref="0x10bcc8020"/>
        <function-ref name="setResistor" scoped="" ref="0x10bcc81a8"/>
        <function-ref name="toggle" scoped="" ref="0x10bcc8330"/>
        <function-ref name="isOutput" scoped="" ref="0x10bcc84b8"/>
        <function-ref name="getResistor" scoped="" ref="0x10bcc8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10bcc87c8"/>
        <function-ref name="get" scoped="" ref="0x10bcc8950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10bcc8ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x10bcc8c60"/>
        <function-ref name="set" scoped="" ref="0x10bcc8de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10bcc7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10bcc71a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10bcc7430"/>
        <function-ref name="clr" scoped="" ref="0x10bcc75b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usci" ref="0x10bca2d58" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1P.nc">
      <component-ref qname="HplMsp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x10bca2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciB"/>
      </instance>
      <interface-functions>
        <function-ref name="disableArbLostInt" scoped="" ref="0x10bc9f0d8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10bc9f260"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10bc9f3e8"/>
        <function-ref name="enableStopInt" scoped="" ref="0x10bc9f570"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10bc9f6f8"/>
        <function-ref name="getStopBit" scoped="" ref="0x10bc9f880"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10bc9fa08"/>
        <function-ref name="resetUsci" scoped="" ref="0x10bc9fb90"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10bc9fd18"/>
        <function-ref name="disableNACKInt" scoped="" ref="0x10bc9e020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10bc9e1a8"/>
        <function-ref name="disableIntr" scoped="" ref="0x10bc9e330"/>
        <function-ref name="enableI2C" scoped="" ref="0x10bc9e4b8"/>
        <function-ref name="getUstat" scoped="" ref="0x10bc9e740"/>
        <function-ref name="getUctl1" scoped="" ref="0x10bc9e8c8"/>
        <function-ref name="disableStartInt" scoped="" ref="0x10bc9ea50"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10bc9ebd8"/>
        <function-ref name="setUctl0" scoped="" ref="0x10bc9ed60"/>
        <function-ref name="setTXNACK" scoped="" ref="0x10bc9d020"/>
        <function-ref name="getUbr" scoped="" ref="0x10bc9d1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10bc9d330"/>
        <function-ref name="isI2C" scoped="" ref="0x10bc9d4b8"/>
        <function-ref name="setTXStart" scoped="" ref="0x10bc9d640"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10bc9d7c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10bc9d950"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10bc9dcd8"/>
        <function-ref name="enableArbLostInt" scoped="" ref="0x10bc9de60"/>
        <function-ref name="setGeneralCall" scoped="" ref="0x10bc9c020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10bc9c1a8"/>
        <function-ref name="clrIntr" scoped="" ref="0x10bc9c330"/>
        <function-ref name="isSpi" scoped="" ref="0x10bc9c4b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x10bc9c640"/>
        <function-ref name="disableI2C" scoped="" ref="0x10bc9c7c8"/>
        <function-ref name="enableNACKInt" scoped="" ref="0x10bc9c950"/>
        <function-ref name="disableStopInt" scoped="" ref="0x10bc9cad8"/>
        <function-ref name="enableStartInt" scoped="" ref="0x10bc9cc60"/>
        <function-ref name="getMode" scoped="" ref="0x10bc9cde8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10bc9b020"/>
        <function-ref name="setTXStop" scoped="" ref="0x10bc9b1a8"/>
        <function-ref name="setUbr" scoped="" ref="0x10bc9b330"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10bc9b4b8"/>
        <function-ref name="tx" scoped="" ref="0x10bc9b640"/>
        <function-ref name="getStartBit" scoped="" ref="0x10bc9b7c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x10bc9b950"/>
        <function-ref name="setUstat" scoped="" ref="0x10bc9bad8"/>
        <function-ref name="setUctl1" scoped="" ref="0x10bc9bc60"/>
        <function-ref name="clearGeneralCall" scoped="" ref="0x10bc9bde8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10bccc020"/>
        <function-ref name="rx" scoped="" ref="0x10bccc1a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10bccc730"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10bccc8b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10bccca40"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10bcccbc8"/>
        <function-ref name="getUctl0" scoped="" ref="0x10bcccd50"/>
        <function-ref name="disableSpi" scoped="" ref="0x10bccb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x10bccbcc0" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB1P.nc">
      <component-ref qname="HplMsp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x10bccbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10bcca0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10bcca228"/>
        <function-ref name="setResistor" scoped="" ref="0x10bcca3b0"/>
        <function-ref name="toggle" scoped="" ref="0x10bcca538"/>
        <function-ref name="isOutput" scoped="" ref="0x10bcca6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10bcca848"/>
        <function-ref name="makeOutput" scoped="" ref="0x10bcca9d0"/>
        <function-ref name="get" scoped="" ref="0x10bccab58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10bccace0"/>
        <function-ref name="getRaw" scoped="" ref="0x10bccae68"/>
        <function-ref name="set" scoped="" ref="0x10bcc9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10bcc91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10bcc9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10bcc95b8"/>
        <function-ref name="clr" scoped="" ref="0x10bcc9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UsciA" ref="0x10bd403c8" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciAB1RawInterruptsP.nc">
      <component-ref qname="HplMsp430UsciAB1RawInterruptsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsciA" scoped="" ref="0x10bd403c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciRawInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bd40718"/>
        <function-ref name="txDone" scoped="" ref="0x10bd408a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UsciB" ref="0x10bd40ca8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciAB1RawInterruptsP.nc">
      <component-ref qname="HplMsp430UsciAB1RawInterruptsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsciB" scoped="" ref="0x10bd40ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciRawInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bd3f020"/>
        <function-ref name="txDone" scoped="" ref="0x10bd3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10c51a740" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C.UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10c51a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10c51aa90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10c51ac18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10c5665f8" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C.UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10c5665f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10c566948"/>
        <function-ref name="configure" scoped="" ref="0x10c566ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsciB" ref="0x10c519780" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C.UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsciB" scoped="" ref="0x10c519780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciB"/>
      </instance>
      <interface-functions>
        <function-ref name="disableArbLostInt" scoped="" ref="0x10c519ad0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10c519c58"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10c519de0"/>
        <function-ref name="enableStopInt" scoped="" ref="0x10c518020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10c5181a8"/>
        <function-ref name="getStopBit" scoped="" ref="0x10c518330"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10c5184b8"/>
        <function-ref name="resetUsci" scoped="" ref="0x10c518640"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10c5187c8"/>
        <function-ref name="disableNACKInt" scoped="" ref="0x10c518950"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10c518ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x10c518c60"/>
        <function-ref name="enableI2C" scoped="" ref="0x10c518de8"/>
        <function-ref name="getUstat" scoped="" ref="0x10c517120"/>
        <function-ref name="getUctl1" scoped="" ref="0x10c5172a8"/>
        <function-ref name="disableStartInt" scoped="" ref="0x10c517430"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10c5175b8"/>
        <function-ref name="setUctl0" scoped="" ref="0x10c517740"/>
        <function-ref name="setTXNACK" scoped="" ref="0x10c5178c8"/>
        <function-ref name="getUbr" scoped="" ref="0x10c517a50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10c517bd8"/>
        <function-ref name="isI2C" scoped="" ref="0x10c517d60"/>
        <function-ref name="setTXStart" scoped="" ref="0x10c516020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10c5161a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10c516330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10c5166b8"/>
        <function-ref name="enableArbLostInt" scoped="" ref="0x10c516840"/>
        <function-ref name="setGeneralCall" scoped="" ref="0x10c5169c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10c516b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x10c516cd8"/>
        <function-ref name="isSpi" scoped="" ref="0x10c516e60"/>
        <function-ref name="enableIntr" scoped="" ref="0x10c515020"/>
        <function-ref name="disableI2C" scoped="" ref="0x10c5151a8"/>
        <function-ref name="enableNACKInt" scoped="" ref="0x10c515330"/>
        <function-ref name="disableStopInt" scoped="" ref="0x10c5154b8"/>
        <function-ref name="enableStartInt" scoped="" ref="0x10c515640"/>
        <function-ref name="getMode" scoped="" ref="0x10c5157c8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10c515950"/>
        <function-ref name="setTXStop" scoped="" ref="0x10c515ad8"/>
        <function-ref name="setUbr" scoped="" ref="0x10c515c60"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10c515de8"/>
        <function-ref name="tx" scoped="" ref="0x10c514020"/>
        <function-ref name="getStartBit" scoped="" ref="0x10c5141a8"/>
        <function-ref name="enableSpi" scoped="" ref="0x10c514330"/>
        <function-ref name="setUstat" scoped="" ref="0x10c5144b8"/>
        <function-ref name="setUctl1" scoped="" ref="0x10c514640"/>
        <function-ref name="clearGeneralCall" scoped="" ref="0x10c5147c8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10c514950"/>
        <function-ref name="rx" scoped="" ref="0x10c514ad8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10c513420"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10c5135a8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10c513730"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10c5138b8"/>
        <function-ref name="getUctl0" scoped="" ref="0x10c513a40"/>
        <function-ref name="disableSpi" scoped="" ref="0x10c513bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsciInterrupts" ref="0x10c513e50" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C.UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsciInterrupts" scoped="" ref="0x10c513e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10c5661e8"/>
        <function-ref name="txDone" scoped="" ref="0x10c566370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10c51baa0" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C.UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10c51baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10c51bdf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10c51a020"/>
        <function-ref name="request" scoped="" ref="0x10c51a1a8"/>
        <function-ref name="granted" scoped="" ref="0x10c51a330"/>
        <function-ref name="isOwner" scoped="" ref="0x10c51a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10c519020" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciB1C.nc">
      <component-ref qname="TestTmp102AppC.Temperature.I2C.UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10c519020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10c519370"/>
        <function-ref name="userId" scoped="" ref="0x10c5194f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10bd7b020" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <component-ref qname="Msp430UsciShareB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10bd7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10bd7b370"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10bd7b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10bd79570" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <component-ref qname="Msp430UsciShareB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10bd79570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10bd798c0"/>
        <function-ref name="configure" scoped="" ref="0x10bd79a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10bd7d020" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <component-ref qname="Msp430UsciShareB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10bd7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bd7d370"/>
        <function-ref name="txDone" scoped="" ref="0x10bd7d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10bd7dcc8" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <component-ref qname="Msp430UsciShareB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10bd7dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10bd7c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10bd7c228"/>
        <function-ref name="request" scoped="" ref="0x10bd7c3b0"/>
        <function-ref name="granted" scoped="" ref="0x10bd7c538"/>
        <function-ref name="isOwner" scoped="" ref="0x10bd7c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10bd7b7f0" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareB1P.nc">
      <component-ref qname="Msp430UsciShareB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10bd7b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10bd7bb40"/>
        <function-ref name="userId" scoped="" ref="0x10bd7bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10bd77c40" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareP.nc">
      <component-ref qname="Msp430UsciShareB1P.UsciShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10bd77c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bd76020"/>
        <function-ref name="txDone" scoped="" ref="0x10bd761a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x10bd76bd0" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareP.nc">
      <component-ref qname="Msp430UsciShareB1P.UsciShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10bd76bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10bda1020"/>
        <function-ref name="userId" scoped="" ref="0x10bda11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x10bd76470" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430UsciShareP.nc">
      <component-ref qname="Msp430UsciShareB1P.UsciShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x10bd76470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10bd767c0"/>
        <function-ref name="txDone" scoped="" ref="0x10bd76948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10be070c8" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10be070c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10be07438"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10be075c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10be05c70" loc="96:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10be05c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10be04020"/>
        <function-ref name="configure" scoped="" ref="0x10be041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x10be07808" loc="93:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10be07808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10be07b58"/>
        <function-ref name="requested" scoped="" ref="0x10be07ce0"/>
        <function-ref name="granted" scoped="" ref="0x10be07e68"/>
        <function-ref name="isOwner" scoped="" ref="0x10be05020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10be051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10be08378" loc="91:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10be08378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10be086e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10be08870"/>
        <function-ref name="request" scoped="" ref="0x10be089f8"/>
        <function-ref name="granted" scoped="" ref="0x10be08b80"/>
        <function-ref name="isOwner" scoped="" ref="0x10be08d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10be053f0" loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10be053f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10be05740"/>
        <function-ref name="userId" scoped="" ref="0x10be058c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10c5b8100" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10c5b8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10c5b8450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x10c5b86d8" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x10c5b86d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x10c5b8a28"/>
        <function-ref name="isEmpty" scoped="" ref="0x10c5b8bb0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x10c5b8d38"/>
        <function-ref name="dequeue" scoped="" ref="0x10c5b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10c5b5698" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10c5b5698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10c5b5a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10c5b5b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10c5b33e8" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10c5b33e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10c5b3758"/>
        <function-ref name="configure" scoped="" ref="0x10c5b38e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x10c5b3b68" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x10c5b3b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x10c5b1020"/>
        <function-ref name="isEmpty" scoped="" ref="0x10c5b11a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x10c5b1330"/>
        <function-ref name="dequeue" scoped="" ref="0x10c5b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x10c5b5dd8" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10c5b5dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10c5b4170"/>
        <function-ref name="requested" scoped="" ref="0x10c5b42f8"/>
        <function-ref name="granted" scoped="" ref="0x10c5b4480"/>
        <function-ref name="isOwner" scoped="" ref="0x10c5b4608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10c5b4790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10c5b1700" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10c5b1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10c5b1a50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10c5b1bd8"/>
        <function-ref name="led1On" scoped="" ref="0x10c5b1d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10c5b0020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10c5b01a8"/>
        <function-ref name="get" scoped="" ref="0x10c5b0330"/>
        <function-ref name="led1Off" scoped="" ref="0x10c5b04b8"/>
        <function-ref name="led0On" scoped="" ref="0x10c5b0ad8"/>
        <function-ref name="set" scoped="" ref="0x10c5b07c8"/>
        <function-ref name="led2On" scoped="" ref="0x10c5b0640"/>
        <function-ref name="led2Off" scoped="" ref="0x10c5b0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10c5b6830" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10c5b6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10c5b6ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10c5b6d28"/>
        <function-ref name="request" scoped="" ref="0x10c5b5020"/>
        <function-ref name="granted" scoped="" ref="0x10c5b51a8"/>
        <function-ref name="isOwner" scoped="" ref="0x10c5b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10c5b49d8" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10c5b49d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10c5b4d28"/>
        <function-ref name="userId" scoped="" ref="0x10c5b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x10c5b0da0" loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsciShareB1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x10c5b0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10c5af170"/>
        <function-ref name="runTask" scoped="" ref="0x10c5af2f8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10b53e360" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x10b53f020" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x10b5566e8" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x10b5449a8" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x10b556020" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x10b544328" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x10b557110" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x10b5455a8" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x10b545c28" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x10b5577d8" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x10b50fdf8" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x10b3cd5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x10b5b2748" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10b5b24d8" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x10b5a8df8" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10b577978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x10b575438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10b5b0020" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x10b5b0e20" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x10b5b3da0" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10b5b06f8" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x10b5b4570" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x10b5b4c98" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x10b5b3690" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10b577978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10b575438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10b5b3420" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10b577978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10b575438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10b5d11d8" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x10b5ce5a0" loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x10b5ce330" loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x10b5cd108" loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10b5cee40" loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10b5d0b70" loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10b5d03e0" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x10b5d1b00" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10b5d1890" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10b5c3828" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x10b5c0290" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10b5c0020" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x10b5c0bf0" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10b5c0980" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x10b5be590" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10b5be320" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10b5bec18" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10b5ba6f8" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x10b5b9e58" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x10b5b9be8" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10b5badc8" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10b5aaba8" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10b5b94d8" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10b5a7a00" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x10b5ba070" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10b5a7328" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10b5a60d8" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x10b5a6978" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10b5a6708" loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x10b5b8830" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x10b5b85c0" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10b5f4dc0" loc="39:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x10b4eb690" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x10b50e760" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10b24d980" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10b2e6878" loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x10b2e60d8" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x10b2ed608" loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x10b2eddf8" loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10b6fc338" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10b6fc338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10b711020" loc="136:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10b716710" loc="83:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x10b7135b8" loc="114:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10b713020" loc="114:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10b713338" loc="114:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x10b7147b8" loc="98:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10b70f020" loc="151:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10b711740" loc="144:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10b714020" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x10b6fce08" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10b6fcb98" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x10b7125b8" loc="129:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10b712020" loc="129:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10b712338" loc="129:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x10b6fb8a0" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10b6fb630" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10b716070" loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x10b705428" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x10b705b60" loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x10b703328" loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x10b7021d8" loc="83:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x10b701810" loc="100:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="96:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10b6ff020" loc="117:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x10b703a40" loc="77:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="74:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10b6ffb20" loc="134:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="120:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x10b6ff8b0" loc="134:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x10b706cd8" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x10b702948" loc="89:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x10b7010d8" loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
        <documentation loc="91:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Read.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x10b70dbf0" loc="49:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10b70dbf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x10b709490" loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Read.nc">
        <documentation loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x10b7242a0" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Read.nc">
        <documentation loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10b70dbf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x10b709ba0" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x10b724020" loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10b70dbf0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10b73e440" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10b73eb08" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10b73f6b0" loc="42:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10b73d930" loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10b73fd50" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10b73d258" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10b727848" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10b73f020" loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10b76c8a8" loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10b76b020" loc="80:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x10b767578" loc="110:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10b767308" loc="110:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10b750258" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10b76bdf0" loc="87:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x10b767df8" loc="117:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10b76b6f8" loc="85:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10b76c178" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x10b768378" loc="99:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x10b750980" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10b751438" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x10b76a530" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x10b768aa0" loc="101:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x10b76ac60" loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10b751af8" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10b9c2570" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10b9c2570"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10b9c2e00" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10b068020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10b9e2e28" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10b9e2e28"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10b9df0c8" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10b9df0c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10b9db958" loc="109:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10b9df0c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10b9deaf0" loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x10b9db020" loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10b9df0c8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10b9df0c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10b9dda40" loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10b9df0c8"/></type-var>
          </variable>
          <variable name="dt" ref="0x10b9ddd60" loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10b9df0c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10b9dd290" loc="88:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x10b9da110" loc="116:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10b9df0c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10b9dfb88" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10b9df0c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10b9df918" loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10b9df0c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10b9de3a0" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10ba42a98" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10ba42a98"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10ba42cc8" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ba42cc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10ba3f5e8" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10ba42cc8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10ba3e628" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10ba3fe00" loc="71:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10ba3ed18" loc="82:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x10bb6e4b0" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x10bb6ed78" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x10bb6aa98" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x10bb6aa98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x10bb68020" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x10bb6ca68"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x10bb69370" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x10bb6ca68"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x10bb696a0" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x10bb699d0" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x10bb69d28" loc="76:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x10bb91618" loc="112:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10bb90998" loc="112:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x10bb90cc8" loc="112:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x10bb91020" loc="112:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x10bb91378" loc="112:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10bb67d20" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x10bb6ca68"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x10bb670c8" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x10bb6ca68"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x10bb673f8" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x10bb67728" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x10bb67a80" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x10bb92a98" loc="102:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10bb65df8" loc="102:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x10bb92170" loc="102:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x10bb924a0" loc="102:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x10bb927f8" loc="102:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
      <documentation loc="63:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x10bb71c78" loc="120:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
        <documentation loc="104:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x10bb73d50" loc="97:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
        <documentation loc="90:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x10bb73460" loc="88:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
        <documentation loc="78:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x10bb71518" loc="102:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
        <documentation loc="99:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x10bb70848" loc="128:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
        <documentation loc="122:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430I2CConfigure" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CConfigure.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CConfigure.nc">
        <short>&#10; Interface used by Msp430I2C clients to reconfigure the I2C before use&#10; </short>
        <long>&#10; Interface used by Msp430I2C clients to reconfigure the I2C before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x10bbff740" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430I2CConfigure.nc">
        <interfacedef-ref qname="Msp430I2CConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:6" alignment="I:2"><union-ref ref="0x10bbdce00"/>
              <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x10bbda2a8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x10bbf9a40" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x10bbf9290" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsciInterrupts" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciInterrupts.nc">
      <function event="" provided="0" name="rxDone" ref="0x10bc1f9d0" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciInterrupts.nc">
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10bc1f760" loc="59:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x10bc1f030" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciInterrupts.nc">
        <documentation loc="50:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsciB" loc="54:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
      <function command="" provided="0" name="disableArbLostInt" ref="0x10bc4e0d8" loc="203:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x10bc23ba0" loc="192:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10bc23930" loc="192:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x10bc26510" loc="181:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStopInt" ref="0x10bc21b80" loc="198:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x10bc2dab8" loc="164:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x10bc26c18" loc="184:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x10bc37020" loc="93:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsci" ref="0x10bc0b930" loc="81:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x10bc0b6c0" loc="81:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x10bc349d8" loc="100:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNACKInt" ref="0x10bc222a8" loc="194:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x10bc23258" loc="191:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x10bc086e0" loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x10bc2e2a8" loc="154:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUstat" ref="0x10bc0b020" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl1" ref="0x10bc0fe20" loc="61:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10bbb9ae0"/>
            <typename><typedef-ref name="msp430_uctl1_t" ref="0x10bbb82d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartInt" ref="0x10bc20290" loc="200:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x10bc25ac0" loc="186:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl0" ref="0x10bc105d8" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10bbbbca8"/>
              <typename><typedef-ref name="msp430_uctl0_t" ref="0x10bbba448"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10bc10368" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10bbbbca8"/>
              <typename><typedef-ref name="msp430_uctl0_t" ref="0x10bbba448"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setTXNACK" ref="0x10bc2b8a8" loc="168:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x10bc0de40" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x10bc376f0" loc="94:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x10bc2fb20" loc="153:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <documentation loc="144:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
          <short>*********************************************************************&#10;&#10; I2C Mode interface&#10;&#10;**********************************************************************</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTXStart" ref="0x10bc2a6d8" loc="170:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x10bc097d0" loc="90:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x10bc08020" loc="91:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x10bc29770" loc="173:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10bc29500" loc="173:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbLostInt" ref="0x10bc4e7d0" loc="204:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setGeneralCall" ref="0x10bc27700" loc="177:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x10bc36518" loc="97:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x10bc330d8" loc="101:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x10bc309b0" loc="135:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x10bc37da8" loc="95:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x10bc2e960" loc="155:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNACKInt" ref="0x10bc22980" loc="195:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStopInt" ref="0x10bc214a8" loc="197:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartInt" ref="0x10bc20970" loc="201:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x10bc090d8" loc="86:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x10bbbf6f0"/>
            <typename><typedef-ref name="msp430_uscimode_t" ref="0x10bbbc698"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x10bc2ae08" loc="172:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTXStop" ref="0x10bc2a020" loc="169:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x10bc0d758" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x10bc0d4e8" loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10b067b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x10bc2d3b0" loc="161:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><union-ref ref="0x10bbdce00"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x10bbda2a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x10bc2d140" loc="161:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><union-ref ref="0x10bbdce00"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x10bbda2a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x10bc339b0" loc="108:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <documentation loc="103:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10bc33740" loc="108:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x10bc25360" loc="185:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x10bc32930" loc="129:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <documentation loc="118:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
          <short>*********************************************************************&#10;&#10; SPI Mode interface&#10;&#10;**********************************************************************</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUstat" ref="0x10bc0c7d8" loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ustat" ref="0x10bc0c568" loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl1" ref="0x10bc0f6e8" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10bbb9ae0"/>
              <typename><typedef-ref name="msp430_uctl1_t" ref="0x10bbb82d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10bc0f478" loc="60:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10bbb9ae0"/>
              <typename><typedef-ref name="msp430_uctl1_t" ref="0x10bbb82d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearGeneralCall" ref="0x10bc27020" loc="176:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x10bc27df0" loc="180:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x10bc321d8" loc="115:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <documentation loc="110:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; return:&#9;byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x10bc2f428" loc="141:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x10bbee2f0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x10bbee6f8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x10bc2f1b8" loc="141:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x10bbee2f0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x10bbee6f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x10bc2b1d8" loc="165:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x10bc36c30" loc="98:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x10bc34328" loc="99:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl0" ref="0x10bc10d10" loc="57:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10bbbbca8"/>
            <typename><typedef-ref name="msp430_uctl0_t" ref="0x10bbba448"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x10bc300d8" loc="130:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciB.nc">
        <interfacedef-ref qname="HplMsp430UsciB"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="44:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430SpiConfigure.nc">
      <documentation loc="36:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x10bc852c8" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x10bbee2f0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x10bbee6f8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsciRawInterrupts" loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciRawInterrupts.nc">
      <function event="" provided="0" name="rxDone" ref="0x10bcbd798" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciRawInterrupts.nc">
        <interfacedef-ref qname="HplMsp430UsciRawInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10bcbd528" loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciRawInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x10bcc1e38" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/chips/msp430/x2xxx/usci/HplMsp430UsciRawInterrupts.nc">
        <interfacedef-ref qname="HplMsp430UsciRawInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x10bd53a10" loc="90:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x10bd4f258" loc="98:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10b067790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x10bd97598" loc="56:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x10bd95608" loc="73:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x10bd9ad48" loc="46:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x10bd97d98" loc="65:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x10bd94020" loc="81:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x10bd89108" loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10b2f01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10bd93480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x10bd8ae18" loc="79:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10bd93480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x10bd8c290" loc="53:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x10bd8cd10" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10b2e0c10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10bd93480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x10bd8caa0" loc="62:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10bd93480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x10bd8a5e0" loc="70:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/Users/Xavier/Documents/tinyOS/tinyOSsource/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x10bd93480"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
