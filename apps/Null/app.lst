   1              		.file	"app.c"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   7              	SchedulerBasicP__popTask:
   8              	.LFB47:
   9              		.file 1 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** // $Id: SchedulerBasicP.nc,v 1.11 2010-06-29 22:07:56 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** /*
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * Copyright (c) 2000-2003 The Regents of the University  of California.  
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * All rights reserved.
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * Redistribution and use in source and binary forms, with or without
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * modification, are permitted provided that the following conditions
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * are met:
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * - Redistributions of source code must retain the above copyright
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   notice, this list of conditions and the following disclaimer.
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * - Redistributions in binary form must reproduce the above copyright
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   notice, this list of conditions and the following disclaimer in the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   documentation and/or other materials provided with the
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   distribution.
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * - Neither the name of the University of California nor the names of
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   its contributors may be used to endorse or promote products derived
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *   from this software without specific prior written permission.
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * Copyright (c) 2002-2003 Intel Corporation
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * All rights reserved.
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * This file is distributed under the terms in the attached INTEL-LICENSE     
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * file. If you do not find these files, copies can be found by writing to
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300, Berkeley, CA, 
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * 94704.  Attention:  Intel License Inquiry.
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  */
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** /**
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * SchedulerBasicP implements the default TinyOS scheduler sequence, as
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * documented in TEP 106.
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  *
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * @author Philip Levis
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * @author Cory Sharp
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  * @date   January 19 2005
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****  */
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** #include "hardware.h"
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** module SchedulerBasicP @safe() {
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   provides interface Scheduler;
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   provides interface TaskBasic[uint8_t id];
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   uses interface McuSleep;
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** }
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** implementation
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** {
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   enum
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     NUM_TASKS = uniqueCount("TinySchedulerC.TaskBasic"),
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     NO_TASK = 255,
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   };
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   uint8_t m_head;
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   uint8_t m_tail;
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   uint8_t m_next[NUM_TASKS];
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // Helper functions (internal functions) intentionally do not have atomic
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // sections.  It is left as the duty of the exported interface functions to
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // manage atomicity to minimize chances for binary code bloat.
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // move the head forward
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // if the head is at the end, mark the tail at the end, too
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   // mark the task as not in the queue
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   inline uint8_t popTask()
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
  10              		.loc 1 79 0
  11              		.cfi_startproc
  12              		@ args = 0, pretend = 0, frame = 0
  13              		@ frame_needed = 0, uses_anonymous_args = 0
  14              		@ link register save eliminated.
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     if( m_head != NO_TASK )
  15              		.loc 1 80 0
  16 0000 30109FE5 		ldr	r1, .L7
  17 0004 0000D1E5 		ldrb	r0, [r1, #0]	@ zero_extendqisi2
  18 0008 FF0050E3 		cmp	r0, #255
  19 000c 1EFF2F01 		bxeq	lr
  20              	.LVL0:
  21              	.LBB96:
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       uint8_t id = m_head;
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_head = m_next[m_head];
  22              		.loc 1 83 0
  23 0010 24309FE5 		ldr	r3, .L7+4
  24 0014 0020D3E7 		ldrb	r2, [r3, r0]	@ zero_extendqisi2
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       if( m_head == NO_TASK )
  25              		.loc 1 84 0
  26 0018 FF0052E3 		cmp	r2, #255
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_head = m_next[m_head];
  27              		.loc 1 83 0
  28 001c 0020C1E5 		strb	r2, [r1, #0]
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_tail = NO_TASK;
  29              		.loc 1 86 0
  30 0020 18209F05 		ldreq	r2, .L7+8
  31 0024 0010E003 		mvneq	r1, #0
  32 0028 0010C205 		streqb	r1, [r2, #0]
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       }
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_next[id] = NO_TASK;
  33              		.loc 1 88 0
  34 002c 0020E0E3 		mvn	r2, #0
  35 0030 0020C3E7 		strb	r2, [r3, r0]
  36              	.LBE96:
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       return id;
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     else
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       return NO_TASK;
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
  37              		.loc 1 95 0
  38 0034 1EFF2FE1 		bx	lr
  39              	.L8:
  40              		.align	2
  41              	.L7:
  42 0038 00000000 		.word	SchedulerBasicP__m_head
  43 003c 00000000 		.word	SchedulerBasicP__m_next
  44 0040 00000000 		.word	SchedulerBasicP__m_tail
  45              		.cfi_endproc
  46              	.LFE47:
  48              		.align	2
  49              		.global	irqhandler
  51              	irqhandler:
  52              	.LFB51:
  53              		.file 2 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****  * @author Rasmus Ulslev Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** #include "hardware.h"
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** module HplAT91InterruptM
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** {
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   provides {
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     // The id is an actual peripheral like AT91C_ID_TC
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     interface HplAT91Interrupt as AT91Irq[uint8_t id];
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     interface HplAT91Interrupt as AT91Fiq[uint8_t id];
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   }
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** }
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** implementation 
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** {
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   // We save the registers in the assembler interrupt control code, so this
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   // __attribute__ ((interrupt ("IRQ"))) @C() @atomic_hwevent() 
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   // will work. Instead tell the compiler it is a "plain" C function.
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   void irqhandler() __attribute__ ((C, spontaneous)) {
  54              		.loc 2 22 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
  60              	.LBB114:
  61              	.LBB115:
  62              		.file 3 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** 
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** #ifndef lib_extra_AT91SAM7S256_H
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** #define lib_extra_AT91SAM7S256_H
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** /**
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****  * Adapted for nxtmote.
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****  * @author Rasmus Pedersen
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****  */
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** // Some extra functions in relation to those found in lib_AT91SAM7S256.
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** // Various methods from different files.
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** // @author rup
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** 
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** /* *****************************************************************************
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****                 SOFTWARE API FOR AIC
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****    ***************************************************************************** */
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** 
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ActiveID
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** //* \brief Return id of active interupt
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** __inline unsigned int AT91F_AIC_ActiveID (
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****   AT91PS_AIC pAic)     // \arg pointer to the AIC registers
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h **** {
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_extra_AT91SAM7S256.h ****   return pAic->AIC_ISR;
  63              		.loc 3 23 0
  64 0044 0020E0E3 		mvn	r2, #0
  65 0048 F73E12E5 		ldr	r3, [r2, #-3831]
  66              	.LVL2:
  67              	.LBE115:
  68              	.LBE114:
  69              	.LBB116:
  70              	.LBB117:
  71              		.file 4 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****  * Periodic Interval Timer
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****  * @author Rasmus Ulslev Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** #include "hardware.h"
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** module HplAT91PitM {
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   provides {
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     interface Init;
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     interface HplAT91Pit;
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   uses {
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     interface HplAT91Interrupt as SysIrq;
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** }
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** implementation {
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   uint32_t taskMiss;
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   task void fireFromTask();
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   command error_t Init.init()
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   {
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     // Testing
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		//AT91F_AIC_ConfigureIt( AT91C_BASE_AIC, AT91C_ID_SYS, AT91C_AIC_PRIOR_HIGHEST, AT91C_AIC_SRCTYPE
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		//AT91F_AIC_ConfigureIt( AT91C_BASE_AIC, AT91C_ID_SYS, AT91C_AIC_PRIOR_HIGHEST, AT91C_AIC_SRCTYPE
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		//AT91F_AIC_EnableIt(AT91C_BASE_AIC, AT91C_ID_SYS);
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     taskMiss = 0;
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     call SysIrq.allocate();
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     call SysIrq.enable();
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return SUCCESS;
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command uint32_t HplAT91Pit.getPITMR(){
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return AT91C_BASE_PITC->PITC_PIMR;
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command void HplAT91Pit.setPITMR(uint32_t val){
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     AT91C_BASE_PITC->PITC_PIMR = val;
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command uint32_t HplAT91Pit.getPITSR(){
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return AT91C_BASE_PITC->PITC_PISR;
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command uint32_t HplAT91Pit.getPITPIVR(){
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return AT91C_BASE_PITC->PITC_PIVR;
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async command uint32_t HplAT91Pit.getPITPIIR(){
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     return AT91C_BASE_PITC->PITC_PIIR;
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   async event void SysIrq.fired() 
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 	{
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		uint32_t pitregtmp;
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     error_t taskRes;
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		if(*AT91C_PITC_PISR & AT91C_PITC_PITS){
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			pitregtmp = *AT91C_PITC_PIVR; /*acknowledge interrupt*/
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			// Prepare the sync PIT task
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			taskRes = post fireFromTask();
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			if(taskRes != SUCCESS){
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			  atomic {taskMiss++;}  
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			}
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			// Fire the async event
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			signal HplAT91Pit.fired();
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		}	  
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 	  
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   task void fireFromTask(){
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     // Fire the sync event
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     atomic {
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       signal HplAT91Pit.firedTask(taskMiss);
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       taskMiss = 0;
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     }
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****   }
  72              		.loc 4 86 0
  73 004c FF3003E2 		and	r3, r3, #255
  74              	.LVL3:
  75              		.file 5 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  * @author Rasmus Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** /**
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  * at91 interrupt mapping
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****  */
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** 
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** interface HplAT91Interrupt
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** {
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   /** 
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    * Allocates interrupts
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    */
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   async command error_t allocate();
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** 
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   /**
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    * Enables a periperhal interrupt.
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    */
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   async command void enable();
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** 
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   /**
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    * Disables a peripheral interrupt.
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    */
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   async command void disable();
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc **** 
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   /**
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    * The peripheral interrupt event.
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****    */
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91Interrupt.nc ****   async event void fired();
  76              		.loc 5 29 0
  77 0050 010053E3 		cmp	r3, #1
  78 0054 1EFF2F11 		bxne	lr
  79              	.LBB118:
  80              	.LBB119:
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 		if(*AT91C_PITC_PISR & AT91C_PITC_PITS){
  81              		.loc 4 65 0
  82 0058 CB1212E5 		ldr	r1, [r2, #-715]
  83 005c 010011E3 		tst	r1, #1
  84 0060 1EFF2F01 		bxeq	lr
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			pitregtmp = *AT91C_PITC_PIVR; /*acknowledge interrupt*/
  85              		.loc 4 66 0
  86 0064 C72212E5 		ldr	r2, [r2, #-711]
  87              	.LVL4:
  88              	.LBB120:
  89              	.LBB121:
  90              	.LBB122:
  91              	.LBB123:
  92              	.LBB124:
  93              	.LBB125:
  94              	.LBB126:
  95              	.LBB127:
  96              	.LBB128:
  97              	.LBB129:
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   bool isWaiting( uint8_t id )
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     return (m_next[id] != NO_TASK) || (m_tail == id);
  98              		.loc 1 99 0
  99 0068 5C209FE5 		ldr	r2, .L21
 100 006c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 101 0070 FF0052E3 		cmp	r2, #255
 102 0074 0300001A 		bne	.L12
 103 0078 50309FE5 		ldr	r3, .L21+4
 104 007c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 105 0080 013073E2 		rsbs	r3, r3, #1
 106 0084 0030A033 		movcc	r3, #0
 107              	.L12:
 108              	.LBE129:
 109              	.LBE128:
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 101:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
 102:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   bool pushTask( uint8_t id )
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
 104:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     if( !isWaiting(id) )
 110              		.loc 1 104 0
 111 0088 FF3013E2 		ands	r3, r3, #255
 112 008c 0900001A 		bne	.L13
 105:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 106:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       if( m_head == NO_TASK )
 113              		.loc 1 106 0
 114 0090 3C109FE5 		ldr	r1, .L21+8
 115 0094 0020D1E5 		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 116 0098 FF0052E3 		cmp	r2, #255
 117 009c 2C209FE5 		ldr	r2, .L21+4
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_head = id;
 109:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_tail = id;
 110:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       }
 111:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       else
 112:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_next[m_tail] = id;
 118              		.loc 1 113 0
 119 00a0 24009F15 		ldrne	r0, .L21
 120 00a4 0010D215 		ldrneb	r1, [r2, #0]	@ zero_extendqisi2
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_head = id;
 121              		.loc 1 108 0
 122 00a8 0030C105 		streqb	r3, [r1, #0]
 123              		.loc 1 113 0
 124 00ac 0130C017 		strneb	r3, [r0, r1]
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	m_tail = id;
 125              		.loc 1 114 0
 126 00b0 0030C2E5 		strb	r3, [r2, #0]
 127              	.LVL5:
 128 00b4 1EFF2FE1 		bx	lr
 129              	.LVL6:
 130              	.L13:
 131              	.LBE127:
 132              	.LBE126:
 133              	.LBE125:
 134              	.LBE124:
 135              	.LBE123:
 136              	.LBE122:
 137              	.LBE121:
 138              	.LBE120:
 139              	.LBB130:
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc **** 			  atomic {taskMiss++;}  
 140              		.loc 4 71 0
 141 00b8 18309FE5 		ldr	r3, .L21+12
 142 00bc 002093E5 		ldr	r2, [r3, #0]
 143 00c0 012082E2 		add	r2, r2, #1
 144 00c4 002083E5 		str	r2, [r3, #0]
 145              	.LVL7:
 146 00c8 1EFF2FE1 		bx	lr
 147              	.L22:
 148              		.align	2
 149              	.L21:
 150 00cc 00000000 		.word	SchedulerBasicP__m_next
 151 00d0 00000000 		.word	SchedulerBasicP__m_tail
 152 00d4 00000000 		.word	SchedulerBasicP__m_head
 153 00d8 00000000 		.word	HplAT91PitM__taskMiss
 154              	.LBE130:
 155              	.LBE119:
 156              	.LBE118:
 157              	.LBE117:
 158              	.LBE116:
 159              		.cfi_endproc
 160              	.LFE51:
 162              		.align	2
 163              		.global	__nesc_atomic_start
 165              	__nesc_atomic_start:
 166              	.LFB0:
 167              		.file 6 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** /**
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****  * Adapted for nxtmote.
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****  * @author Rasmus Pedersen
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****  */
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #ifndef __NXTMOTE_HARDWARE_H__
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #define __NXTMOTE_HARDWARE_H__
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #include "AT91SAM7S256.h"
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #include "AT91SAM7S256_extra.h"
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #include "lib_AT91SAM7S256.h"
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #include "lib_extra_AT91SAM7S256.h"
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #define   OSC                           48054850L
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** //PIT Timer
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** #define   MS_1_TIME         ((OSC/16)/1000)
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned char                 UCHAR;  //uint8_t
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned short                USHORT; //uint16_t
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned char                 UBYTE;  //uint8_t
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   signed char                   SBYTE;  //int8_t
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned short int            UWORD;  //uint16_t
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   signed short int              SWORD;  //int16_t
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   unsigned long                 ULONG;  //uint32_t
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   signed long                   SLONG;  //int32_t
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   ULONG*                        PULONG;
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   USHORT*                       PUSHORT;
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   UCHAR*                        PUCHAR;
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef   char*                         PSZ;
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** /*
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef signed char int8_t;
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef unsigned char uint8_t;
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef short int16_t;
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef unsigned short uint16_t;
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef int int32_t;
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef unsigned int uint32_t;
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef long long int64_t;
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef unsigned long long uint64_t;
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef int32_t intptr_t;
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef uint32_t uintptr_t;
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** */
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** extern void AT91F_Spurious_handler(void);
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** extern void AT91F_Default_IRQ_handler(void);
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** extern void AT91F_Default_FIQ_handler(void);
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** inline void __nesc_enable_interrupt() {
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   uint32_t statusReg = 0;
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   asm volatile (
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       "mrs %0,CPSR\n\t"
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       "bic %0,%1,#0xc0\n\t"
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       "msr CPSR_c, %1"
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       : "=r" (statusReg)
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       : "0" (statusReg)
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 	       );
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   return;
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** }
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** inline void __nesc_disable_interrupt() {
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** /*
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   uint32_t statusReg = 0;
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   asm volatile (
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"mrs %0,CPSR\n\t"
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"orr %0,%1,#0xc0\n\t"
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"msr CPSR_c,%1\n\t"
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		: "=r" (statusReg)
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		: "0" (statusReg)
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		);
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** */
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   return;
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** }
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** typedef uint32_t __nesc_atomic_t;
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** //TODO: enable
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** inline __nesc_atomic_t __nesc_atomic_start(void) @spontaneous() {
 168              		.loc 6 84 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              	.LVL8:
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   uint32_t result = 0;
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** /*
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   uint32_t temp = 0;
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   asm volatile (
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"mrs %0,CPSR\n\t"
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"orr %1,%2,%4\n\t"
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		"msr CPSR_cf,%3"
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		: "=r" (result) , "=r" (temp)
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		: "0" (result) , "1" (temp) , "i" (ARM_CPSR_INT_MASK)
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 		);
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** */
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   return result;
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** }
 174              		.loc 6 98 0
 175 00dc 0000A0E3 		mov	r0, #0
 176 00e0 1EFF2FE1 		bx	lr
 177              		.cfi_endproc
 178              	.LFE0:
 180              		.align	2
 181              		.global	__nesc_atomic_end
 183              	__nesc_atomic_end:
 184              	.LFB1:
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** 
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h **** inline void __nesc_atomic_end(__nesc_atomic_t oldState) @spontaneous() {
 185              		.loc 6 100 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL9:
 191 00e4 1EFF2FE1 		bx	lr
 192              		.cfi_endproc
 193              	.LFE1:
 195              		.align	2
 196              		.global	fiqhandler
 198              	fiqhandler:
 199              	.LFB52:
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     uint32_t irqID;
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     irqID = AT91F_AIC_ActiveID(AT91C_BASE_AIC); // Current interrupt source number
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     signal AT91Irq.fired[irqID]();   
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     return;
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   }
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   void fiqhandler() __attribute__ ((interrupt ("FIQ"))) @C() @atomic_hwevent() {
 200              		.loc 2 32 0
 201              		.cfi_startproc
 202              		@ Fast Interrupt Service Routine.
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206 00e8 04F05EE2 		subs	pc, lr, #4
 207              		.cfi_endproc
 208              	.LFE52:
 210              		.section	.text.startup,"ax",%progbits
 211              		.align	2
 212              		.global	main
 214              	main:
 215              	.LFB53:
 216              		.file 7 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** // $Id: RealMainP.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** 
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** /*
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Copyright (c) 2000-2003 The Regents of the University  of California.  
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * All rights reserved.
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Redistribution and use in source and binary forms, with or without
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * modification, are permitted provided that the following conditions
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * are met:
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * - Redistributions of source code must retain the above copyright
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   notice, this list of conditions and the following disclaimer.
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * - Redistributions in binary form must reproduce the above copyright
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   notice, this list of conditions and the following disclaimer in the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   documentation and/or other materials provided with the
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   distribution.
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * - Neither the name of the copyright holders nor the names of
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   its contributors may be used to endorse or promote products derived
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *   from this software without specific prior written permission.
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Copyright (c) 2002-2003 Intel Corporation
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * All rights reserved.
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * This file is distributed under the terms in the attached INTEL-LICENSE     
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * file. If you do not find these files, copies can be found by writing to
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300, Berkeley, CA, 
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * 94704.  Attention:  Intel License Inquiry.
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  */
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** /*
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Authors:		Philip Levis
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * Date last modified:  $Id: RealMainP.nc,v 1.9 2010-06-29 22:07:56 scipio Exp $
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  */
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** 
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** /**
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * RealMain implements the TinyOS boot sequence, as documented in TEP 107.
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  *
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * @author Philip Levis
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  * @date   January 17 2005
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****  */
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** 
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** module RealMainP @safe() {
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   provides interface Boot;
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   uses interface Scheduler;
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   uses interface Init as PlatformInit;
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   uses interface Init as SoftwareInit;
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** }
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc **** implementation {
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/RealMainP.nc ****   int main() @C() @spontaneous() {
 217              		.loc 7 63 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL10:
 222              	.LBB192:
 223              	.LBB193:
 224              	.LBB194:
 225              	.LBB195:
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       }
 116:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       return TRUE;
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
 118:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     else
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       return FALSE;
 121:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 123:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   
 124:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   command void Scheduler.init()
 125:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
 126:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic
 127:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 128:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       memset( (void *)m_next, NO_TASK, sizeof(m_next) );
 226              		.loc 1 128 0
 227 0000 80219FE5 		ldr	r2, .L75
 228 0004 0030E0E3 		mvn	r3, #0
 229              	.LBE195:
 230              	.LBE194:
 231              	.LBE193:
 232              	.LBE192:
 233              		.loc 7 63 0
 234 0008 10402DE9 		stmfd	sp!, {r4, lr}
 235              	.LCFI0:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 4, -8
 238              		.cfi_offset 14, -4
 239              	.LBB267:
 240              	.LBB198:
 241              	.LBB197:
 242              	.LBB196:
 243              		.loc 1 128 0
 244 000c 0030C2E5 		strb	r3, [r2, #0]
 129:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_head = NO_TASK;
 245              		.loc 1 129 0
 246 0010 74219FE5 		ldr	r2, .L75+4
 247 0014 0030C2E5 		strb	r3, [r2, #0]
 130:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       m_tail = NO_TASK;
 248              		.loc 1 130 0
 249 0018 70219FE5 		ldr	r2, .L75+8
 250 001c 0030C2E5 		strb	r3, [r2, #0]
 251              	.LVL11:
 252              	.LBE196:
 253              	.LBE197:
 254              	.LBE198:
 255              	.LBB199:
 256              	.LBB200:
 257              	.LBB201:
 258              	.LBB202:
 259              		.file 8 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** /*
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * Copyright (c) 2007 nxtmote project
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * All rights reserved.
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * Redistribution and use in source and binary forms, with or without
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * modification, are permitted provided that the following conditions
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * are met:
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * - Redistributions of source code must retain the above copyright
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   notice, this list of conditions and the following disclaimer.
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * - Redistributions in binary form must reproduce the above copyright
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   notice, this list of conditions and the following disclaimer in the
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   documentation and/or other materials provided with the
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   distribution.
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * - Neither the name of nxtmote project nor the names of
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   its contributors may be used to endorse or promote products derived
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *   from this software without specific prior written permission.
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  *
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * ARCHED ROCK OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  */
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** /**
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * Adapted for nxtmote.
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  * @author Rasmus Pedersen
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****  */
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** #include "hardware.h"
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** module PlatformP{
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****   provides interface Init;
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****   uses {
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as InitL0;
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as InitL1;
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as InitL2;
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as InitL3;
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****       interface Init as PInit;
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****   }
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** }
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** implementation{
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****   command error_t Init.init() {
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // AT91F_LowLevelInit() in Cstartup_SAM7.c has been called
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // TODO: Move it so equivalent code is called from this place
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //int            i;
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     uint32_t TmpReset;
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     AT91PS_PMC     pPMC = AT91C_BASE_PMC;
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //* Set Flash Waite sate
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //  Single Cycle Access at Up to 30 MHz, or 40
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //  if MCK = 47923200 I have 72 Cycle for 1,5 usecond ( flied MC_FMR->FMCN
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     AT91C_BASE_MC->MC_FMR = ((AT91C_MC_FMCN)&(72 <<16)) | AT91C_MC_FWS_1FWS ;
 260              		.loc 8 62 0
 261 0020 6C219FE5 		ldr	r2, .L75+12
 262 0024 9F2003E5 		str	r2, [r3, #-159]
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //* Watchdog Disable
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     AT91C_BASE_WDTC->WDTC_WDMR= AT91C_WDTC_WDDIS;
 263              		.loc 8 65 0
 264 0028 0229A0E3 		mov	r2, #32768
 265 002c BB2203E5 		str	r2, [r3, #-699]
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //* Set MCK at 47 923 200
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // 1 Enabling the Main Oscillator:
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // SCK = 1/32768 = 30.51 uSecond
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Start up time = 8 * 6 / SCK = 56 * 30.51 = 1,46484375 ms
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_MOR = (( (AT91C_CKGR_OSCOUNT & (0x06 <<8)) | AT91C_CKGR_MOSCEN ));
 266              		.loc 8 71 0
 267 0030 60219FE5 		ldr	r2, .L75+16
 268 0034 DF2303E5 		str	r2, [r3, #-991]
 269              	.L27:
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Wait the startup time
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_MOSCS));
 270              		.loc 8 74 0
 271 0038 971313E5 		ldr	r1, [r3, #-919]
 272 003c 010011E3 		tst	r1, #1
 273 0040 0020E0E3 		mvn	r2, #0
 274 0044 FBFFFF0A 		beq	.L27
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // 2 Checking the Main Oscillator Frequency (Optional)
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // 3 Setting PLL and divider:
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // - div by 14 Fin = 1.3165 =(18,432 / 14)
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // - Mul 72+1: Fout = 96.1097 =(3,6864 *73)
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // for 96 MHz the erroe is 0.11%
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Field out NOT USED = 0
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // PLLCOUNT pll startup time estimate at : 0.844 ms
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // PLLCOUNT 28 = 0.000844 /(1/32768)
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_PLLR = ((AT91C_CKGR_DIV      &  14) |
 275              		.loc 8 84 0
 276 0048 4C319FE5 		ldr	r3, .L75+20
 277 004c D33302E5 		str	r3, [r2, #-979]
 278              	.L28:
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****                       (AT91C_CKGR_PLLCOUNT & (28<<8)) |
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****                       (AT91C_CKGR_MUL      & (72<<16)));
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Wait the startup time
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_LOCK));
 279              		.loc 8 89 0
 280 0050 973312E5 		ldr	r3, [r2, #-919]
 281 0054 040013E3 		tst	r3, #4
 282 0058 FCFFFF0A 		beq	.L28
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_MCKRDY));
 283              		.loc 8 90 0
 284 005c 0010E0E3 		mvn	r1, #0
 285              	.L59:
 286 0060 972311E5 		ldr	r2, [r1, #-919]
 287 0064 080012E3 		tst	r2, #8
 288 0068 0030E0E3 		mvn	r3, #0
 289 006c FBFFFF0A 		beq	.L59
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // 4. Selection of Master Clock and Processor Clock
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // select the PLL clock divided by 2
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_MCKR = AT91C_PMC_PRES_CLK_2 ;
 290              		.loc 8 94 0
 291 0070 0420A0E3 		mov	r2, #4
 292 0074 CF2303E5 		str	r2, [r3, #-975]
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_MCKRDY));
 293              		.loc 8 95 0
 294 0078 0310A0E1 		mov	r1, r3
 295              	.L30:
 296 007c 972311E5 		ldr	r2, [r1, #-919]
 297 0080 080012E3 		tst	r2, #8
 298 0084 0030E0E3 		mvn	r3, #0
 299 0088 FBFFFF0A 		beq	.L30
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_MCKR |= AT91C_PMC_CSS_PLL_CLK  ;
 300              		.loc 8 97 0
 301 008c CF2313E5 		ldr	r2, [r3, #-975]
 302 0090 032082E3 		orr	r2, r2, #3
 303 0094 CF2303E5 		str	r2, [r3, #-975]
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     while(!(pPMC->PMC_SR & AT91C_PMC_MCKRDY));
 304              		.loc 8 98 0
 305 0098 0310A0E1 		mov	r1, r3
 306              	.L31:
 307 009c 972311E5 		ldr	r2, [r1, #-919]
 308 00a0 080012E3 		tst	r2, #8
 309 00a4 0030E0E3 		mvn	r3, #0
 310 00a8 FBFFFF0A 		beq	.L31
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Set up the default interrupts handler vectors
 101:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // See CStartup.S. Fast interrupt and interrupt are mapped to
 102:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //   fiqhandler and irqhandler in HplInteruptM.nc
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 104:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // Enable the PIOA controller so the reading of AT91_PIOA_PDSR will
 105:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // work in the Led toggle call.
 106:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     pPMC->PMC_PCER = (1<<AT91C_ID_PIOA);
 311              		.loc 8 106 0
 312 00ac 0420A0E3 		mov	r2, #4
 313 00b0 EF2303E5 		str	r2, [r3, #-1007]
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //AT91C_BASE_AIC->AIC_SVR[0] = (int) AT91F_Default_FIQ_handler ;
 109:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 110:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //TODO
 111:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     AT91C_BASE_AIC->AIC_SPU  = (int) AT91F_Spurious_handler ;
 314              		.loc 8 111 0
 315 00b4 E4209FE5 		ldr	r2, .L75+24
 316 00b8 CB2E03E5 		str	r2, [r3, #-3787]
 112:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_RSTC_RMR  = 0xA5000401;
 317              		.loc 8 113 0
 318 00bc E0209FE5 		ldr	r2, .L75+28
 319 00c0 F72203E5 		str	r2, [r3, #-759]
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_AIC_DCR   = 1;
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 116:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     // PIT timer is for 1 ms intervals
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     //*AT91C_PITC_PIMR = (0x000FFFFF | 0x01000000 ); /*original*/
 118:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_PITC_PIMR = (MS_1_TIME | AT91C_PITC_PITEN | AT91C_PITC_PITIEN );
 320              		.loc 8 118 0
 321 00c4 DC209FE5 		ldr	r2, .L75+32
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_AIC_DCR   = 1;
 322              		.loc 8 114 0
 323 00c8 0100A0E3 		mov	r0, #1
 324 00cc C70E03E5 		str	r0, [r3, #-3783]
 325              		.loc 8 118 0
 326 00d0 CF2203E5 		str	r2, [r3, #-719]
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     TmpReset         = *AT91C_PITC_PIVR;
 327              		.loc 8 119 0
 328 00d4 C72213E5 		ldr	r2, [r3, #-711]
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     TmpReset         = TmpReset;/* Suppress warning*/
 121:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc **** 
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/PlatformP.nc ****     *AT91C_PMC_PCER  = (1L<<AT91C_ID_TWI);/* Enable TWI Clock        */
 329              		.loc 8 122 0
 330 00d8 022CA0E3 		mov	r2, #512
 331 00dc EF2303E5 		str	r2, [r3, #-1007]
 332              	.LBB203:
 333              	.LBB204:
 334              	.LBB205:
 335              	.LBB206:
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     taskMiss = 0;
 336              		.loc 4 30 0
 337 00e0 C4109FE5 		ldr	r1, .L75+36
 338 00e4 0020A0E3 		mov	r2, #0
 339              	.LBB207:
 340              	.LBB208:
 341              	.LBB209:
 342              	.LBB210:
 343              	.LBB211:
 344              	.LBB212:
 345              	.LBB213:
 346              	.LBB214:
 347              		.file 9 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S2
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*         ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* File Name           : lib_AT91SAM7S256.h
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* Object              : AT91SAM7S256 inlined functions
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* Generated           : AT91 SW Application Group  03/08/2005 (15:46:14)
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_dbgu.h/1.1/Fri Jan 31 12:18:40 2003//
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pmc_SAM7S.h/1.1/Tue Feb  1 08:32:10 2005//
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_VREG_6085B.h/1.1/Tue Feb  1 16:20:47 2005//
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rstc_6098A.h/1.1/Wed Oct  6 10:39:20 2004//
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_ssc.h/1.4/Fri Jan 31 12:19:20 2003//
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_wdtc_6080A.h/1.1/Wed Oct  6 10:38:30 2004//
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_usart.h/1.5/Thu Nov 21 16:01:54 2002//
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_spi2.h/1.1/Mon Aug 25 14:23:52 2003//
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pitc_6079A.h/1.2/Tue Nov  9 14:43:56 2004//
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_aic.h/1.3/Fri Jul 12 08:46:12 2002//
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_twi.h/1.3/Mon Jul 19 14:27:58 2004//
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_adc.h/1.6/Fri Oct 17 09:12:38 2003//
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rttc_6081A.h/1.1/Wed Oct  6 10:39:38 2004//
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_udp.h/1.4/Wed Feb 16 08:39:34 2005//
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_tc_1753b.h/1.1/Fri Jan 31 12:20:02 2003//
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_MC_SAM7S.h/1.1/Thu Mar 25 15:19:14 2004//
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pio.h/1.3/Fri Jan 31 12:18:56 2003//
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_PWM_SAM.h/1.3/Thu Jan 22 10:10:50 2004//
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pdc.h/1.2/Tue Jul  2 13:29:40 2002//
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** #ifndef lib_AT91SAM7S256_H
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** #define lib_AT91SAM7S256_H
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR AIC
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** #define AT91C_AIC_BRANCH_OPCODE ((void (*) ()) 0xE51FFF20) // ldr, pc, [pc, #-&F20]
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ConfigureIt
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Interrupt Handler Initialization
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_AIC_ConfigureIt (
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,  // \arg pointer to the AIC registers
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id,     // \arg interrupt number to initialize
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int priority,   // \arg priority to give to the interrupt
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int src_type,   // \arg activation and sense of activation
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*newHandler) (void) ) // \arg address of the interrupt handler
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int oldHandler;
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     unsigned int mask ;
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     oldHandler = pAic->AIC_SVR[irq_id];
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     mask = 0x1 << irq_id ;
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Save the interrupt handler routine pointer and the interrupt priority
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_SVR[irq_id] = (unsigned int) newHandler ;
 348              		.loc 9 68 0
 349 00e8 C0C09FE5 		ldr	ip, .L75+40
 350              	.LBE214:
 351              	.LBE213:
 352              	.LBE212:
 353              	.LBE211:
 354              	.LBE210:
 355              	.LBE209:
 356              	.LBE208:
 357              	.LBE207:
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****     taskMiss = 0;
 358              		.loc 4 30 0
 359 00ec 002081E5 		str	r2, [r1, #0]
 360              	.LVL12:
 361              	.LBB229:
 362              	.LBB227:
 363              	.LBB225:
 364              	.LBB223:
 365              	.LBB221:
 366              	.LBB219:
 367              	.LBB217:
 368              	.LBB215:
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     oldHandler = pAic->AIC_SVR[irq_id];
 369              		.loc 9 62 0
 370 00f0 7B2F13E5 		ldr	r2, [r3, #-3963]
 371              	.LVL13:
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
 372              		.loc 9 66 0
 373 00f4 0220A0E3 		mov	r2, #2
 374 00f8 DB2E03E5 		str	r2, [r3, #-3803]
 375              		.loc 9 68 0
 376 00fc 7BCF03E5 		str	ip, [r3, #-3963]
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Store the Source Mode Register
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_SMR[irq_id] = src_type | priority  ;
 377              		.loc 9 70 0
 378 0100 07C0A0E3 		mov	ip, #7
 379 0104 FBCF03E5 		str	ip, [r3, #-4091]
 380              	.LBE215:
 381              	.LBE217:
 382              	.LBE219:
 383              	.LBE221:
 384              	.LBE223:
 385              	.LBE225:
 386              	.LBE227:
 387              	.LBE229:
 388              	.LBB230:
 389              	.LBB231:
 390              	.LBB232:
 391              	.LBB233:
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     return;
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   }
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc **** 
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   // Peripheral clock and AIC
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   void enable(uint8_t id)
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****   {
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****     atomic {
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****       if (id < 34) {
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/HplAT91InterruptM.nc ****         AT91C_BASE_TC0->TC_IER = AT91C_TC_CPCS;        
 392              		.loc 2 41 0
 393 0108 10E0A0E3 		mov	lr, #16
 394 010c 5FCAE0E3 		mvn	ip, #389120
 395              	.LBE233:
 396              	.LBE232:
 397              	.LBE231:
 398              	.LBE230:
 399              	.LBB241:
 400              	.LBB228:
 401              	.LBB226:
 402              	.LBB224:
 403              	.LBB222:
 404              	.LBB220:
 405              	.LBB218:
 406              	.LBB216:
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the interrupt controller
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
 407              		.loc 9 72 0
 408 0110 D72E03E5 		str	r2, [r3, #-3799]
 409              	.LVL14:
 410              	.LBE216:
 411              	.LBE218:
 412              	.LBE220:
 413              	.LBE222:
 414              	.LBE224:
 415              	.LBE226:
 416              	.LBE228:
 417              	.LBE241:
 418              	.LBB242:
 419              	.LBB240:
 420              	.LBB239:
 421              	.LBB238:
 422              		.loc 2 41 0
 423 0114 DBEF0CE5 		str	lr, [ip, #-4059]
 424              	.LVL15:
 425              	.LBB234:
 426              	.LBB235:
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return oldHandler;
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
  76:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  77:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  78:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_EnableIt
  79:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable corresponding IT number
  80:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  81:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_EnableIt (
  82:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  83:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
  85:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Enable the interrupt on the interrupt controller
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IECR = 0x1 << irq_id ;
  87:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
  88:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
  89:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  90:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_DisableIt
  91:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable corresponding IT number
  92:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  93:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_DisableIt (
  94:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  95:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  96:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
  97:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     unsigned int mask = 0x1 << irq_id;
  98:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  99:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
 100:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 101:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
 102:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 103:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 104:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 105:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ClearIt
 106:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Clear corresponding IT number
 107:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 108:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_ClearIt (
 109:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 110:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number to initialize
 111:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 112:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 113:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = (0x1 << irq_id);
 114:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 115:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 116:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 117:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_AcknowledgeIt
 118:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Acknowledge corresponding IT number
 119:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 120:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_AcknowledgeIt (
 121:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic)     // \arg pointer to the AIC registers
 122:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 123:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_EOICR = pAic->AIC_EOICR;
 124:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 125:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 126:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 127:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_SetExceptionVector
 128:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Configure vector handler
 129:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 130:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_SetExceptionVector (
 131:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int *pVector, // \arg pointer to the AIC registers
 132:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*Handler) () )   // \arg Interrupt Handler
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 134:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int oldVector = *pVector;
 135:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 136:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	if ((unsigned int) Handler == (unsigned int) AT91C_AIC_BRANCH_OPCODE)
 137:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		*pVector = (unsigned int) AT91C_AIC_BRANCH_OPCODE;
 138:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		*pVector = (((((unsigned int) Handler) - ((unsigned int) pVector) - 0x8) >> 2) & 0x00FFFFFF) | 0x
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 141:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return oldVector;
 142:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 143:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 144:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 145:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Trig
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Trig an IT
 147:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 148:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void  AT91F_AIC_Trig (
 149:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 150:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number
 151:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pAic->AIC_ISCR = (0x1 << irq_id) ;
 153:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 154:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 155:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsActive
 157:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if an IT is active
 158:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 159:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsActive (
 160:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 161:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 162:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 163:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return (pAic->AIC_ISR & (0x1 << irq_id));
 164:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 165:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 166:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 167:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsPending
 168:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if an IT is pending
 169:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 170:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsPending (
 171:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 172:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 173:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 174:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return (pAic->AIC_IPR & (0x1 << irq_id));
 175:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 176:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 177:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 178:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Open
 179:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set exception vectors and AIC registers to default values
 180:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 181:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_Open(
 182:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,        // \arg pointer to the AIC registers
 183:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*IrqHandler) (),  // \arg Default IRQ vector exception
 184:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*FiqHandler) (),  // \arg Default FIQ vector exception
 185:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*DefaultHandler)  (), // \arg Default Handler set in ISR
 186:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	void (*SpuriousHandler) (), // \arg Default Spurious Handler
 187:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int protectMode)   // \arg Debug Control Register
 188:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 189:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	int i;
 190:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 191:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Disable all interrupts and set IVR to the default handler
 192:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	for (i = 0; i < 32; ++i) {
 193:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_AIC_DisableIt(pAic, i);
 194:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_AIC_ConfigureIt(pAic, i, AT91C_AIC_PRIOR_LOWEST, AT91C_AIC_SRCTYPE_INT_LEVEL_SENSITIVE, Def
 195:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 196:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 197:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Set the IRQ exception vector
 198:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x18, IrqHandler);
 199:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Set the Fast Interrupt exception vector
 200:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x1C, FiqHandler);
 201:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 202:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pAic->AIC_SPU = (unsigned int) SpuriousHandler;
 203:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pAic->AIC_DCR = protectMode;
 204:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 205:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
 206:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PDC
 207:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 208:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 209:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextRx
 210:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set the next receive transfer descriptor
 211:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 212:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextRx (
 213:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,     // \arg pointer to a PDC controller
 214:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *address,       // \arg address to the next bloc to be received
 215:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int bytes)  // \arg number of bytes to be received
 216:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 217:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNPR = (unsigned int) address;
 218:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNCR = bytes;
 219:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 220:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 221:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 222:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextTx
 223:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set the next transmit transfer descriptor
 224:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 225:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextTx (
 226:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 227:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 228:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 229:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 230:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNPR = (unsigned int) address;
 231:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNCR = bytes;
 232:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 233:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 234:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 235:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetRx
 236:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set the receive transfer descriptor
 237:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 238:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetRx (
 239:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 240:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be received
 241:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be received
 242:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 243:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_RPR = (unsigned int) address;
 244:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_RCR = bytes;
 245:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 246:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 247:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 248:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetTx
 249:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set the transmit transfer descriptor
 250:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 251:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetTx (
 252:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 253:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 254:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 255:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 256:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_TPR = (unsigned int) address;
 257:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_TCR = bytes;
 258:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 259:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 260:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 261:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableTx
 262:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable transmit
 263:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 264:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableTx (
 265:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 266:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 267:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTEN;
 268:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 269:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 270:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 271:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableRx
 272:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable receive
 273:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 274:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableRx (
 275:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 276:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 277:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTEN;
 278:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 279:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 280:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 281:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableTx
 282:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable transmit
 283:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 284:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableTx (
 285:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 286:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 287:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTDIS;
 288:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 289:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 290:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 291:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableRx
 292:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable receive
 293:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 294:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableRx (
 295:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 296:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 297:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTDIS;
 298:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 299:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 300:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 301:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsTxEmpty
 302:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been sent
 303:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 304:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsTxEmpty ( // \return return 1 if transfer is complete
 305:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 306:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 307:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TCR);
 308:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 309:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 310:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 311:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextTxEmpty
 312:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 313:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 314:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextTxEmpty ( // \return return 1 if transfer is complete
 315:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 316:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 317:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TNCR);
 318:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 319:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 320:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 321:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsRxEmpty
 322:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been filled
 323:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 324:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsRxEmpty ( // \return return 1 if transfer is complete
 325:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 326:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 327:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RCR);
 328:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 329:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 330:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 331:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextRxEmpty
 332:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 333:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 334:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextRxEmpty ( // \return return 1 if transfer is complete
 335:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 336:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 337:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RNCR);
 338:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 339:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 340:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 341:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Open
 342:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Open PDC: disable TX and RX reset transfer descriptors, re-enable RX and TX
 343:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 344:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Open (
 345:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 346:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 347:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 348:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 349:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 350:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 351:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 352:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 353:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 354:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 355:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 356:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 357:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Enable the RX and TX PDC transfer requests
 358:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableRx(pPDC);
 359:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableTx(pPDC);
 360:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 361:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 362:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 363:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Close
 364:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 365:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 366:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Close (
 367:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 368:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 369:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 370:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 371:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 372:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 373:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 374:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 375:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 376:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 377:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 378:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 379:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 380:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 381:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 382:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SendFrame
 383:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 384:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 385:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_SendFrame(
 386:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 387:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *pBuffer,
 388:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 389:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 390:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 391:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 392:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsTxEmpty(pPDC)) {
 393:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 394:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetTx(pPDC, pBuffer, szBuffer);
 395:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pNextBuffer, szNextBuffer);
 396:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 2;
 397:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 398:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextTxEmpty(pPDC)) {
 399:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 400:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pBuffer, szBuffer);
 401:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 1;
 402:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 403:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else {
 404:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 405:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 0;
 406:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 407:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 408:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 409:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 410:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_ReceiveFrame
 411:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 412:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 413:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_ReceiveFrame (
 414:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 415:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *pBuffer,
 416:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 417:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 418:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 419:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 420:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsRxEmpty(pPDC)) {
 421:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 422:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetRx(pPDC, pBuffer, szBuffer);
 423:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pNextBuffer, szNextBuffer);
 424:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 2;
 425:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 426:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextRxEmpty(pPDC)) {
 427:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 428:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pBuffer, szBuffer);
 429:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 1;
 430:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 431:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	else {
 432:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 433:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		return 0;
 434:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	}
 435:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 436:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
 437:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR DBGU
 438:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 439:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 440:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptEnable
 441:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable DBGU Interrupt
 442:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 443:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptEnable(
 444:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 445:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be enabled
 446:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 447:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IER = flag;
 448:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 449:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 450:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 451:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptDisable
 452:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable DBGU Interrupt
 453:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 454:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptDisable(
 455:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 456:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be disabled
 457:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 458:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IDR = flag;
 459:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 460:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 461:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 462:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_GetInterruptMaskStatus
 463:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return DBGU Interrupt Mask Status
 464:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 465:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_DBGU_GetInterruptMaskStatus( // \return DBGU Interrupt Mask Status
 466:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu) // \arg  pointer to a DBGU controller
 467:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 468:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pDbgu->DBGU_IMR;
 469:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 470:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 471:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 472:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_IsInterruptMasked
 473:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if DBGU Interrupt is Masked 
 474:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 475:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_DBGU_IsInterruptMasked(
 476:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 477:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 478:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 479:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_DBGU_GetInterruptMaskStatus(pDbgu) & flag);
 480:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 481:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 482:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
 483:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PIO
 484:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 485:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 486:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPeriph
 487:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable pins to be drived by peripheral
 488:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 489:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPeriph(
 490:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 491:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int periphAEnable,  // \arg PERIPH A to enable
 492:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int periphBEnable)  // \arg PERIPH B to enable
 493:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 494:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 495:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_ASR = periphAEnable;
 496:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_BSR = periphBEnable;
 497:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PDR = (periphAEnable | periphBEnable); // Set in Periph mode
 498:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 499:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 500:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 501:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOutput
 502:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable PIO in output mode
 503:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 504:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOutput(
 505:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 506:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int pioEnable)      // \arg PIO to be enabled
 507:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 508:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PER = pioEnable; // Set in PIO mode
 509:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_OER = pioEnable; // Configure in Output
 510:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 511:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 512:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 513:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInput
 514:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable PIO in input mode
 515:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 516:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInput(
 517:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 518:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int inputEnable)      // \arg PIO to be enabled
 519:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 520:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Disable output
 521:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_ODR  = inputEnable;
 522:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PER  = inputEnable;
 523:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 524:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 525:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 526:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOpendrain
 527:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Configure PIO in open drain
 528:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 529:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOpendrain(
 530:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 531:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int multiDrvEnable) // \arg pio to be configured in open drain
 532:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 533:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Configure the multi-drive option
 534:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_MDDR = ~multiDrvEnable;
 535:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_MDER = multiDrvEnable;
 536:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 537:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 538:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 539:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPullup
 540:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable pullup on PIO
 541:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 542:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPullup(
 543:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 544:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int pullupEnable)   // \arg enable pullup on PIO
 545:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 546:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 		// Connect or not Pullup
 547:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUDR = ~pullupEnable;
 548:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUER = pullupEnable;
 549:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 550:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 551:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 552:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgDirectDrive
 553:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable direct drive on PIO
 554:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 555:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgDirectDrive(
 556:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 557:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int directDrive)    // \arg PIO to be configured with direct drive
 558:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 559:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 560:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 561:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_OWDR  = ~directDrive;
 562:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_OWER  = directDrive;
 563:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 564:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 565:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 566:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInputFilter
 567:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable input filter on input PIO
 568:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 569:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInputFilter(
 570:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 571:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int inputFilter)    // \arg PIO to be configured with input filter
 572:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 573:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 574:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 575:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_IFDR  = ~inputFilter;
 576:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_IFER  = inputFilter;
 577:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 578:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 579:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 580:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInput
 581:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO input value
 582:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 583:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInput( // \return PIO input
 584:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 585:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 586:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return pPio->PIO_PDSR;
 587:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 588:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 589:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 590:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputSet
 591:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO is input flag is active
 592:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 593:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputSet(
 594:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 595:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  flag to be tested
 596:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 597:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return (AT91F_PIO_GetInput(pPio) & flag);
 598:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 599:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 600:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 601:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 602:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_SetOutput
 603:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set to 1 output PIO
 604:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 605:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_SetOutput(
 606:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 607:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be set
 608:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 609:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_SODR = flag;
 610:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 611:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 612:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 613:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ClearOutput
 614:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Set to 0 output PIO
 615:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 616:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ClearOutput(
 617:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 618:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be cleared
 619:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 620:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_CODR = flag;
 621:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 622:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 623:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 624:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ForceOutput
 625:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Force output when Direct drive option is enabled
 626:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 627:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ForceOutput(
 628:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 629:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be forced
 630:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 631:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPio->PIO_ODSR = flag;
 632:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 633:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 634:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 635:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Enable
 636:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable PIO
 637:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 638:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Enable(
 639:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 640:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled 
 641:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 642:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_PER = flag;
 643:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 644:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 645:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 646:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Disable
 647:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable PIO
 648:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 649:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Disable(
 650:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 651:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled 
 652:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 653:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_PDR = flag;
 654:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 655:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 656:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 657:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetStatus
 658:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Status
 659:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 660:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetStatus( // \return PIO Status
 661:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 662:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 663:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_PSR;
 664:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 665:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 666:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 667:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsSet
 668:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO is Set
 669:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 670:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsSet(
 671:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 672:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 673:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 674:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetStatus(pPio) & flag);
 675:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 676:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 677:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 678:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputEnable
 679:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 680:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 681:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputEnable(
 682:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 683:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be enabled
 684:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 685:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_OER = flag;
 686:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 687:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 688:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 689:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputDisable
 690:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 691:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 692:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputDisable(
 693:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 694:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be disabled
 695:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 696:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_ODR = flag;
 697:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 698:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 699:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 700:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputStatus
 701:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Status
 702:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 703:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputStatus( // \return PIO Output Status
 704:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 705:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 706:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_OSR;
 707:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 708:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 709:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 710:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOuputSet
 711:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output is Set
 712:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 713:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputSet(
 714:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 715:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 716:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 717:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputStatus(pPio) & flag);
 718:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 719:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 720:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 721:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterEnable
 722:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Input Filter Enable PIO
 723:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 724:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterEnable(
 725:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 726:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be enabled
 727:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 728:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_IFER = flag;
 729:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 730:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 731:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 732:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterDisable
 733:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Input Filter Disable PIO
 734:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 735:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterDisable(
 736:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 737:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be disabled
 738:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 739:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_IFDR = flag;
 740:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 741:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 742:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 743:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInputFilterStatus
 744:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Input Filter Status
 745:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 746:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInputFilterStatus( // \return PIO Input Filter Status
 747:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 748:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 749:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_IFSR;
 750:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 751:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 752:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 753:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputFilterSet
 754:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Input filter is Set
 755:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 756:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputFilterSet(
 757:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 758:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 759:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 760:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInputFilterStatus(pPio) & flag);
 761:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 762:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 763:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 764:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputDataStatus
 765:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Data Status 
 766:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 767:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputDataStatus( // \return PIO Output Data Status 
 768:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 769:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 770:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_ODSR;
 771:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 772:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 773:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 774:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptEnable
 775:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable PIO Interrupt
 776:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 777:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptEnable(
 778:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 779:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be enabled
 780:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 781:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_IER = flag;
 782:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 783:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 784:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 785:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptDisable
 786:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Disable PIO Interrupt
 787:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 788:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptDisable(
 789:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 790:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be disabled
 791:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 792:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_IDR = flag;
 793:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 794:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 795:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 796:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptMaskStatus
 797:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Mask Status
 798:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 799:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptMaskStatus( // \return PIO Interrupt Mask Status
 800:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 801:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 802:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_IMR;
 803:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 804:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 805:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 806:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptStatus
 807:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 808:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 809:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptStatus( // \return PIO Interrupt Status
 810:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 811:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 812:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_ISR;
 813:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 814:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 815:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 816:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptMasked
 817:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Masked 
 818:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 819:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptMasked(
 820:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 821:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 822:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 823:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptMaskStatus(pPio) & flag);
 824:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 825:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 826:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 827:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptSet
 828:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Set
 829:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 830:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptSet(
 831:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 832:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 833:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 834:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptStatus(pPio) & flag);
 835:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 836:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 837:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 838:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverEnable
 839:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Multi Driver Enable PIO
 840:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 841:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverEnable(
 842:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 843:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled
 844:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 845:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_MDER = flag;
 846:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 847:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 848:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 849:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverDisable
 850:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Multi Driver Disable PIO
 851:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 852:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverDisable(
 853:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 854:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled
 855:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 856:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_MDDR = flag;
 857:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 858:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 859:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 860:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetMultiDriverStatus
 861:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Multi Driver Status
 862:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 863:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetMultiDriverStatus( // \return PIO Multi Driver Status
 864:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 865:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 866:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_MDSR;
 867:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 868:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 869:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 870:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsMultiDriverSet
 871:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO MultiDriver is Set
 872:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 873:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsMultiDriverSet(
 874:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 875:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 876:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 877:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetMultiDriverStatus(pPio) & flag);
 878:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 879:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 880:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 881:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_A_RegisterSelection
 882:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief PIO A Register Selection 
 883:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 884:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_A_RegisterSelection(
 885:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 886:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio A register selection
 887:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 888:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_ASR = flag;
 889:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 890:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 891:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 892:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_B_RegisterSelection
 893:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief PIO B Register Selection 
 894:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 895:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_B_RegisterSelection(
 896:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 897:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio B register selection 
 898:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 899:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_BSR = flag;
 900:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 901:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 902:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 903:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Get_AB_RegisterStatus
 904:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 905:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 906:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_Get_AB_RegisterStatus( // \return PIO AB Register Status
 907:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 908:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 909:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_ABSR;
 910:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 911:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 912:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 913:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsAB_RegisterSet
 914:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO AB Register is Set
 915:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 916:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsAB_RegisterSet(
 917:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 918:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 919:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 920:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_Get_AB_RegisterStatus(pPio) & flag);
 921:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 922:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 923:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 924:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteEnable
 925:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Output Write Enable PIO
 926:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 927:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteEnable(
 928:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 929:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be enabled
 930:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 931:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_OWER = flag;
 932:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 933:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 934:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 935:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteDisable
 936:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Output Write Disable PIO
 937:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 938:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteDisable(
 939:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 940:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be disabled
 941:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 942:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         pPio->PIO_OWDR = flag;
 943:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 944:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 945:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 946:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputWriteStatus
 947:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Write Status
 948:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 949:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputWriteStatus( // \return PIO Output Write Status
 950:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 951:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 952:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_OWSR;
 953:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 954:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 955:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 956:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputWriteSet
 957:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO OutputWrite is Set
 958:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 959:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputWriteSet(
 960:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 961:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 962:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 963:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputWriteStatus(pPio) & flag);
 964:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 965:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 966:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 967:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetCfgPullup
 968:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return PIO Configuration Pullup
 969:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 970:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetCfgPullup( // \return PIO Configuration Pullup 
 971:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 972:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 973:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return pPio->PIO_PPUSR;
 974:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 975:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 976:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 977:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputDataStatusSet
 978:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output Data Status is Set 
 979:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 980:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputDataStatusSet(
 981:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 982:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 983:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 984:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputDataStatus(pPio) & flag);
 985:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 986:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 987:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 988:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsCfgPullupStatusSet
 989:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Test if PIO Configuration Pullup Status is Set
 990:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 991:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsCfgPullupStatusSet(
 992:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 993:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 994:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
 995:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****         return (~AT91F_PIO_GetCfgPullup(pPio) & flag);
 996:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
 997:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
 998:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** /* *****************************************************************************
 999:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PMC
1000:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1001:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1002:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkEnableReg
1003:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Enable Register of the PMC controller
1004:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1005:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkEnableReg (
1006:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1007:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int mode)
1008:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
1009:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	//* Write to the SCER register
1010:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCER = mode;
1011:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
1012:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
1013:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1014:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkDisableReg
1015:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Disable Register of the PMC controller
1016:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1017:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkDisableReg (
1018:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1019:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int mode)
1020:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
1021:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	//* Write to the SCDR register
1022:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCDR = mode;
1023:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
1024:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
1025:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1026:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetSysClkStatusReg
1027:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Return the System Clock Status Register of the PMC controller
1028:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1029:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetSysClkStatusReg (
1030:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC // pointer to a CAN controller
1031:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	)
1032:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
1033:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	return pPMC->PMC_SCSR;
1034:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** }
1035:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 
1036:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1037:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnablePeriphClock
1038:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //* \brief Enable peripheral clock
1039:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1040:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnablePeriphClock (
1041:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1042:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	unsigned int periphIds)  // \arg IDs of peripherals to enable
1043:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** {
1044:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCER = periphIds;
 427              		.loc 9 1044 0
 428 0118 EF0303E5 		str	r0, [r3, #-1007]
 429              	.LVL16:
 430              	.LBE235:
 431              	.LBE234:
 432              	.LBB236:
 433              	.LBB237:
  86:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/lib_AT91SAM7S256.h ****     pAic->AIC_IECR = 0x1 << irq_id ;
 434              		.loc 9 86 0
 435 011c DF2E03E5 		str	r2, [r3, #-3807]
 436              	.LBE237:
 437              	.LBE236:
 438              	.LBE238:
 439              	.LBE239:
 440              	.LBE240:
 441              	.LBE242:
 442              	.LBE206:
 443              	.LBE205:
 444              	.LBE204:
 445              	.LBE203:
 446              	.LBE202:
 447              	.LBE201:
 448              	.LBE200:
 449              	.LBE199:
 450              	.LBB243:
 451              	.LBB244:
 452              	.LBB245:
 453              	.LBB246:
 454              	.LBB247:
 455              	.LBB248:
 456              	.LBB249:
 457              	.LBB250:
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       taskMiss = 0;
 458              		.loc 4 84 0
 459 0120 0140A0E1 		mov	r4, r1
 460              	.L73:
 461              	.LBE250:
 462              	.LBE249:
 463              	.LBE248:
 464              	.LBE247:
 131:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
 132:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 133:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   
 134:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   command bool Scheduler.runNextTask()
 135:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
 136:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     uint8_t nextTask;
 137:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     atomic
 138:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       nextTask = popTask();
 465              		.loc 1 139 0 discriminator 1
 466 0124 FEFFFFEB 		bl	SchedulerBasicP__popTask
 467              	.LVL17:
 140:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       if( nextTask == NO_TASK )
 468              		.loc 1 140 0 discriminator 1
 469 0128 FF0050E3 		cmp	r0, #255
 470 012c 0200000A 		beq	.L58
 471              	.LVL18:
 472              	.LBB254:
 473              	.LBB253:
 474              		.file 10 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc"
   1:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** // $Id: TaskBasic.nc,v 1.6 2010-06-29 22:07:46 scipio Exp $
   2:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** /*
   3:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * Copyright (c) 2004-5 The Regents of the University  of California.  
   4:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * All rights reserved.
   5:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
   6:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * Redistribution and use in source and binary forms, with or without
   7:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * modification, are permitted provided that the following conditions
   8:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * are met:
   9:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
  10:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * - Redistributions of source code must retain the above copyright
  11:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   notice, this list of conditions and the following disclaimer.
  12:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * - Redistributions in binary form must reproduce the above copyright
  13:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   notice, this list of conditions and the following disclaimer in the
  14:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   documentation and/or other materials provided with the
  15:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   distribution.
  16:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * - Neither the name of the University of California nor the names of
  17:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   its contributors may be used to endorse or promote products derived
  18:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *   from this software without specific prior written permission.
  19:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
  20:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
  24:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  25:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  31:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * OF THE POSSIBILITY OF SUCH DAMAGE.
  32:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
  33:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * Copyright (c) 2004-5 Intel Corporation
  34:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * All rights reserved.
  35:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  *
  36:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * This file is distributed under the terms in the attached INTEL-LICENSE     
  37:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * file. If you do not find these files, copies can be found by writing to
  38:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300, Berkeley, CA, 
  39:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  * 94704.  Attention:  Intel License Inquiry.
  40:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****  */
  41:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  42:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** /**
  43:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * The basic TinyOS task interface. Components generally do not wire to
  44:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * this interface: the nesC compiler handles it automatically through the
  45:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * <tt>post</tt> and <tt>task</tt> keywords.
  46:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   *
  47:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * @author Philip Levis
  48:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * @date   January 12, 2005
  49:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   * @see    TEP 106: Tasks and Schedulers
  50:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   */ 
  51:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  52:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  53:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** #include "TinyError.h"
  54:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  55:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** interface TaskBasic {
  56:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   /**
  58:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * Post this task to the TinyOS scheduler. At some later time,
  59:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * depending on the scheduling policy, the scheduler will signal the
  60:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * <tt>run()</tt> event. 
  61:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    *
  62:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * @return SUCCESS if task was successfuly
  63:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * posted; the semantics of a non-SUCCESS return value depend on the
  64:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * implementation of this interface (the class of task).
  65:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    */
  66:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   
  67:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   async command error_t postTask();
  68:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc **** 
  69:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   /**
  70:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * Event from the scheduler to run this task. Following the TinyOS
  71:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * concurrency model, the codes invoked from <tt>run()</tt> signals
  72:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * execute atomically with respect to one another, but can be
  73:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    * preempted by async commands/events.
  74:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****    */
  75:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/TaskBasic.nc ****   event void runTask();
 475              		.loc 10 75 0
 476 0130 000050E3 		cmp	r0, #0
 477              	.LBB252:
 478              	.LBB251:
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       taskMiss = 0;
 479              		.loc 4 84 0
 480 0134 00008405 		streq	r0, [r4, #0]
 481 0138 F9FFFFEA 		b	.L73
 482              	.LVL19:
 483              	.L58:
 484              	.LBE251:
 485              	.LBE252:
 486              	.LBE253:
 487              	.LBE254:
 488              	.LBE246:
 489              	.LBE245:
 490              	.LBE244:
 491              	.LBE243:
 492              	.LBB255:
 493              	.LBB256:
 494              	.LBB257:
 495              	.LBB258:
 496              	.LBB259:
 497              	.LBB260:
 498              	.LBB261:
 499              	.LBB262:
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       taskMiss = 0;
 500              		.loc 4 84 0 is_stmt 0 discriminator 1
 501 013c 68409FE5 		ldr	r4, .L75+36
 502              	.LVL20:
 503              	.L74:
 504              	.LBE262:
 505              	.LBE261:
 506              	.LBE260:
 507              	.LBE259:
 139:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       nextTask = popTask();
 508              		.loc 1 139 0 is_stmt 1 discriminator 1
 509 0140 FEFFFFEB 		bl	SchedulerBasicP__popTask
 510              	.LVL21:
 511              		.loc 1 140 0 discriminator 1
 512 0144 FF0050E3 		cmp	r0, #255
 513 0148 0800000A 		beq	.L35
 514              	.LVL22:
 515              	.LBB266:
 516              	.LBB265:
 517              		.loc 10 75 0
 518 014c 000050E3 		cmp	r0, #0
 519              	.LBB264:
 520              	.LBB263:
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       taskMiss = 0;
 521              		.loc 4 84 0
 522 0150 00008405 		streq	r0, [r4, #0]
 523 0154 F9FFFFEA 		b	.L74
 524              	.LVL23:
 525              	.L72:
 526              	.LBE263:
 527              	.LBE264:
 528              	.LBE265:
 529              	.LBE266:
 530              	.LBE258:
 531              	.LBE257:
 532              	.LBE256:
 533              	.LBE255:
 534              	.LBE267:
 535              	.LBB268:
 536              	.LBB269:
 537              	.LBB270:
 538              	.LBB271:
 141:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
 142:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	return FALSE;
 143:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       }
 144:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     }
 145:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     signal TaskBasic.runTask[nextTask]();
 146:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     return TRUE;
 147:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   }
 148:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
 149:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   command void Scheduler.taskLoop()
 150:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****   {
 151:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     for (;;)
 152:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****     {
 153:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       uint8_t nextTask;
 154:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 
 155:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       atomic
 156:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc ****       {
 157:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/SchedulerBasicP.nc **** 	while ((nextTask = popTask()) == NO_TASK)
 539              		.loc 1 157 0
 540 0158 FEFFFFEB 		bl	SchedulerBasicP__popTask
 541              	.LVL24:
 542 015c FF0050E3 		cmp	r0, #255
 543 0160 FCFFFF0A 		beq	.L72
 544              	.LVL25:
 545              	.LBE271:
 546              	.LBB272:
 547              	.LBB273:
 548              		.loc 10 75 0
 549 0164 000050E3 		cmp	r0, #0
 550              	.LBB274:
 551              	.LBB275:
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       taskMiss = 0;
 552              		.loc 4 84 0
 553 0168 00008405 		streq	r0, [r4, #0]
 554 016c F9FFFFEA 		b	.L72
 555              	.LVL26:
 556              	.L35:
 557              	.LBE275:
 558              	.LBE274:
 559              	.LBE273:
 560              	.LBE272:
 561              	.LBE270:
 562              	.LBE269:
 563              	.LBE268:
 564              	.LBB282:
 565              	.LBB283:
  57:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h ****   asm volatile (
 566              		.loc 6 57 0
 567 0170 0030A0E3 		mov	r3, #0
 568              	@ 57 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/hardware.h" 1
 569 0174 00300FE1 		mrs r3,CPSR
 570 0178 C030C3E3 		bic r3,r3,#0xc0
 571 017c 03F021E1 		msr CPSR_c, r3
 572              	@ 0 "" 2
 573              	.LVL27:
 574              	.LBE283:
 575              	.LBE282:
 576              	.LBB284:
 577              	.LBB281:
 578              	.LBB280:
 579              	.LBB279:
 580              	.LBB278:
 581              	.LBB277:
 582              	.LBB276:
  84:/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91PitM.nc ****       taskMiss = 0;
 583              		.loc 4 84 0
 584 0180 24409FE5 		ldr	r4, .L75+36
 585 0184 F3FFFFEA 		b	.L72
 586              	.L76:
 587              		.align	2
 588              	.L75:
 589 0188 00000000 		.word	SchedulerBasicP__m_next
 590 018c 00000000 		.word	SchedulerBasicP__m_head
 591 0190 00000000 		.word	SchedulerBasicP__m_tail
 592 0194 00014800 		.word	4718848
 593 0198 01060000 		.word	1537
 594 019c 0E1C4800 		.word	4725774
 595 01a0 00000000 		.word	AT91F_Spurious_handler
 596 01a4 010400A5 		.word	-1526725631
 597 01a8 BB0B0003 		.word	50334651
 598 01ac 00000000 		.word	HplAT91PitM__taskMiss
 599 01b0 00000000 		.word	irqhandler
 600              	.LBE276:
 601              	.LBE277:
 602              	.LBE278:
 603              	.LBE279:
 604              	.LBE280:
 605              	.LBE281:
 606              	.LBE284:
 607              		.cfi_endproc
 608              	.LFE53:
 610              		.comm	SchedulerBasicP__m_next,1,1
 611              		.comm	SchedulerBasicP__m_tail,1,1
 612              		.comm	SchedulerBasicP__m_head,1,1
 613              		.comm	HplAT91PitM__taskMiss,4,4
 614              		.global	TOSH_IRQLEVEL_TABLE
 615              		.global	TOSH_IRP_TABLE
 616              		.section	.rodata
 619              	TOSH_IRQLEVEL_TABLE:
 620 0000 FF       		.byte	-1
 621 0001 01       		.byte	1
 622 0002 FF       		.byte	-1
 623 0003 FF       		.byte	-1
 624 0004 FF       		.byte	-1
 625 0005 FF       		.byte	-1
 626 0006 FF       		.byte	-1
 627 0007 FF       		.byte	-1
 628 0008 FF       		.byte	-1
 629 0009 00       		.byte	0
 630 000a FF       		.byte	-1
 631 000b FF       		.byte	-1
 632 000c 00       		.byte	0
 633 000d 00       		.byte	0
 634 000e 00       		.byte	0
 635 000f FF       		.byte	-1
 636 0010 FF       		.byte	-1
 637 0011 FF       		.byte	-1
 638 0012 FF       		.byte	-1
 639 0013 FF       		.byte	-1
 640 0014 FF       		.byte	-1
 641 0015 FF       		.byte	-1
 642 0016 FF       		.byte	-1
 643 0017 FF       		.byte	-1
 644 0018 FF       		.byte	-1
 645 0019 FF       		.byte	-1
 646 001a FF       		.byte	-1
 647 001b FF       		.byte	-1
 648 001c FF       		.byte	-1
 649 001d FF       		.byte	-1
 650 001e FF       		.byte	-1
 651 001f FF       		.byte	-1
 652 0020 FF       		.byte	-1
 655              	TOSH_IRP_TABLE:
 656 0021 FF       		.byte	-1
 657 0022 07       		.byte	7
 658 0023 FF       		.byte	-1
 659 0024 FF       		.byte	-1
 660 0025 FF       		.byte	-1
 661 0026 FF       		.byte	-1
 662 0027 FF       		.byte	-1
 663 0028 FF       		.byte	-1
 664 0029 FF       		.byte	-1
 665 002a 07       		.byte	7
 666 002b FF       		.byte	-1
 667 002c FF       		.byte	-1
 668 002d 04       		.byte	4
 669 002e FF       		.byte	-1
 670 002f FF       		.byte	-1
 671 0030 FF       		.byte	-1
 672 0031 FF       		.byte	-1
 673 0032 FF       		.byte	-1
 674 0033 FF       		.byte	-1
 675 0034 FF       		.byte	-1
 676 0035 FF       		.byte	-1
 677 0036 FF       		.byte	-1
 678 0037 FF       		.byte	-1
 679 0038 FF       		.byte	-1
 680 0039 FF       		.byte	-1
 681 003a FF       		.byte	-1
 682 003b FF       		.byte	-1
 683 003c FF       		.byte	-1
 684 003d FF       		.byte	-1
 685 003e FF       		.byte	-1
 686 003f FF       		.byte	-1
 687 0040 FF       		.byte	-1
 688 0041 FF       		.byte	-1
 689              		.text
 690              	.Letext0:
 691              		.file 11 "/opt/local/lib/gcc/arm-elf/4.7.3/../../../../arm-elf/include/stdint.h"
 692              		.file 12 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/system/tos.h"
 693              		.file 13 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/types/TinyError.h"
 694              		.file 14 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/AT91SAM7S256.
 695              		.file 15 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/nxt.h"
 696              		.file 16 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/Init.nc"
 697              		.file 17 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/chips/at91/timer/HplAT91Pit.nc"
 698              		.file 18 "NullC.nc"
 699              		.file 19 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/platforms/nxtmote/McuSleepC.nc"
 700              		.file 20 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/McuSleep.nc"
 701              		.file 21 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/Scheduler.nc"
 702              		.file 22 "/Users/Xavier/Documents/tinyOS/trunk/tinyOSsourceNXT/tos/interfaces/Boot.nc"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 app.c
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:5      .text:0000000000000000 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:7      .text:0000000000000000 SchedulerBasicP__popTask
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:42     .text:0000000000000038 $d
                            *COM*:0000000000000001 SchedulerBasicP__m_head
                            *COM*:0000000000000001 SchedulerBasicP__m_next
                            *COM*:0000000000000001 SchedulerBasicP__m_tail
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:48     .text:0000000000000044 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:51     .text:0000000000000044 irqhandler
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:150    .text:00000000000000cc $d
                            *COM*:0000000000000004 HplAT91PitM__taskMiss
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:162    .text:00000000000000dc $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:165    .text:00000000000000dc __nesc_atomic_start
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:183    .text:00000000000000e4 __nesc_atomic_end
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:198    .text:00000000000000e8 fiqhandler
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:211    .text.startup:0000000000000000 $a
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:214    .text.startup:0000000000000000 main
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:589    .text.startup:0000000000000188 $d
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:619    .rodata:0000000000000000 TOSH_IRQLEVEL_TABLE
/var/folders/rn/szrph81d41g26wn1xd61tf5h0000gn/T//cciJMnX1.s:655    .rodata:0000000000000021 TOSH_IRP_TABLE
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
AT91F_Spurious_handler
